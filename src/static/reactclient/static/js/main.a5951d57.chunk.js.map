{"version":3,"sources":["Theme.js","components/pages/SignIn.js","components/dialogs/LoadingProgress.js","components/dialogs/ContextErrorMessage.js","components/pages/Impressum.js","components/dialogs/ProfileDropDown.js","components/layout/StudentHeader.js","components/layout/LecturerAdminHeader.js","api/BusinessObject.js","api/NamedBusinessObject.js","api/AssignmentBO.js","api/ModuleBO.js","api/ParticipationBO.js","api/ProjectBO.js","api/AutomatBO.js","api/SemesterBO.js","api/StateBO.js","api/UserBO.js","api/StudentBO.js","api/ValidationBO.js","api/ProjectTypeBO.js","api/ProjectAPI.js","components/dialogs/StudentProjectSignOut.js","components/StudentButtons.js","components/dialogs/StudentProjectSignIn.js","components/StudentProjectListEntry.js","components/StudentProjectList.js","components/dialogs/ProjectInEvaluationForm.js","components/dialogs/ProjectDeleteDialog.js","components/LecturerProjectListEntry.js","components/dialogs/ProjectForm.js","components/LecturerProjectList.js","components/dialogs/ProjectApprovalForm.js","components/dialogs/ProjectRejectionForm.js","components/AdminProjectListEntry.js","components/AdminProjectList.js","components/StudentListEntry.js","components/StudentList.js","components/dialogs/ParticipantDeleteDialog.js","components/dialogs/ValidationForm.js","components/ParticipantList.js","components/dialogs/ProjectEvaluatedForm.js","components/dialogs/ParticipationForm.js","components/ProjectListEntryParticipants.js","components/ProjectListParticipants.js","components/AllParticipantList.js","components/AllProjectListEntryParticipants.js","components/AllProjectListParticipants.js","components/layout/Header.js","components/StudentReportIndividualTitle.js","components/StudentReportListEntry.js","components/StudentReportList.js","components/pages/RoleChoice.js","App.js","index.js"],"names":["white","theme","createMuiTheme","palette","black","primary","contrastText","dark","colors","indigo","main","light","secondary","blue","success","green","info","warning","orange","error","red","text","blueGrey","link","background","default","paper","icon","divider","grey","SignIn","handleSignInButtonClicked","props","onSignIn","classes","this","Typography","className","root","align","variant","Grid","container","justify","item","Button","color","onClick","Component","withStyles","margin","spacing","LoadingProgress","show","LinearProgress","width","marginTop","ContextErrorMessage","contextErrorMsg","onReload","Alert","severity","AlertTitle","margins","message","startIcon","useStyles","makeStyles","marginBottom","padding","content","Impressum","Paper","elevation","Link","href","ProfileDropDown","createRef","handleAvatarButtonClick","setState","open","state","handleClose","handleSignOutButtonClicked","firebase","auth","signOut","user","IconButton","avatarButton","ref","Popover","anchorEl","current","onClose","anchorOrigin","vertical","horizontal","transformOrigin","ClickAwayListener","onClickAway","profileBox","Divider","displayName","email","float","Header","handleTabChange","e","newIndex","tabindex","Box","p","component","Tabs","indicatorColor","textColor","centered","value","onChange","Tab","label","RouterLink","to","BusinessObject","id","create_time","Date","aId","result","prop","NamedBusinessObject","aName","name","AssignmentBO","assignment","Array","isArray","forEach","a","Object","setPrototypeOf","prototype","push","ModuleBO","aEDV_number","edv_number","modules","m","ParticipationBO","aModuleID","aProjectID","aStudentID","aValidationID","module_id","project_id","student_id","validation_id","participations","ProjectBO","aUserID","aProjectTypeID","aStateID","aSemesterID","aAssignmentID","aProjectDescription","aPartners","aCapacity","aPreferredRoom","aBDaysPreSchedule","aBDaysFinale","aBDaysSaturdays","aPreferredBDays","aAdditionalLecturer","aWeekly","user_id","project_type_id","state_id","semester_id","assignment_id","project_description","partners","capacity","preferred_room","b_days_pre_schedule","b_days_finale","b_days_saturdays","preferred_b_days","additional_lecturer","weekly","aAssigmentID","room_preference","aRoomPreference","projects","pr","aCurrentState","current_state","SemesterBO","aSemester","semester","semesters","s","StateBO","aState","states","sta","UserBO","aMail","aGoogleId","aRoleId","google_id","role_id","mail","users","u","StudentBO","aCourse","aMatriculation_number","aProject_id","course","matriculation_number","students","st","ValidationBO","aGrade","grade","validations","v","ProjectTypeBO","aEcts","aSws","ects","sws","projecttypes","pt","ProjectAPI","current_semester","url","init","fetch","then","res","ok","Error","status","statusText","json","responseJSON","projectBOs","fromJSON","Promise","resolve","projectID","responseProjectBO","projectBO","method","headers","body","JSON","stringify","getID","projecttypeID","responseProjecttypeBO","participationBO","responseValidationBO","participationBOs","studentID","participationID","responseParticipationBO","studentBOs","responseStudentBO","stateID","responseStateBO","validationID","moduleID","responseModuleBO","responseUserBO","userBO","assignmentID","responseAssignmentBO","current_semester_id","responseSemesterBO","StudentProjectSignOut","deleteParticipation","getAPI","participation","deletingInProgress","deletingError","catch","Dialog","DialogTitle","closeButton","DialogContent","DialogContentText","DialogActions","position","right","top","StudentButtons","getStudent","getStudentbyId","currentUser","uid","studentBO","student","deleteParticipationButtonClicked","event","stopPropagation","showParticipationDeleteDialog","StudentProjectSignOutClosed","onParticipationDeleted","loadingInProgress","getStudentID","withRouter","marginLeft","font","fontSize","validate","delete","replay","box","borderColor","StudentProjectSignIn","addParticipation","newParticipation","baseState","addingInProgress","addingError","textFieldValueChange","target","trim","length","handleChange","pid","project","maxWidth","noValidate","autoComplete","getAssignmentID","FormControl","formControl","InputLabel","Select","MenuItem","minWidth","StudentProjectListEntry","expansionPanelStateChanged","onExpandedStateChange","getAssignmentForProject","getAssignmentbyId","assignmentBO","getProjecttypeForProject","getProjecttypebyId","getProjectTypeID","ProjecttypeBO","projecttype","getParticipationForStudent","studentParticipations","getParticipations","getParticipationForProject","participationDeleted","participant","newParticipationList","filter","participationFromState","disabled","addSignInClicked","showStudentProjectSignin","SignInClosed","expandedState","entries","map","studentParticipation","getProjectID","getStateID","Accordion","defaultExpanded","expanded","AccordionSummary","expandIcon","alignItems","heading","getName","AccordionDetails","List","ListItem","getProjectDescription","getAdditionalLecturer","getPartners","getWeekly","getBDaysPreSchedule","getBDaysFinale","getBDaysSaturdays","getPreferredRoom","includes","ButtonGroup","size","fontFamily","StudentProjectList","newID","expandedProjectID","getProjects","expandedID","location","expandProject","projectList","customerFilter","ProjectInEvaluationForm","sendProjectInEvaluation","updatedState","assign","setName","setUserID","setProjectTypeID","setStateID","setSemesterID","setAssignmentID","setProjectDescription","setPartners","setCapacity","setPreferredBDays","setBDaysPreSchedule","setBDaysFinale","setBDaysSaturdays","setAdditionalLecturer","setWeekly","updateProject","updatingInProgress","updatingError","n","sid","aid","pd","ps","c","b","bf","bs","w","getUserID","getSemesterID","getCapacity","getPreferredBDays","ProjectDeleteDialog","deleteProject","LecturerProjectListEntry","sendProjectInEvaluationClicked","showProjectInEvaluation","ProjectInEvaluationFormClosed","getStatebyID","getLecturer","getUserByGoogleId","getStatebyId","deleteProjectButtonClicked","showProjectDeleteDialog","deleteProjectDialogClosed","onProjectDeleted","showProjectForm","xs","ProjectForm","userID","getSemesterbyCurrentSemester","semesterBO","addProject","newProject","projectName","projectTypeID","projectDescription","preferredRoom","bDaysPreSchedule","bDaysFinale","bDaysSaturdays","preferredBDays","additionalLecturer","handleChange2","handleChange3","projectNameValidationFailed","projectNameEdited","projectDescriptionValidationFailed","projectDescriptionEdited","weeklyEdited","TextField","autoFocus","type","required","fullWidth","helperText","LecturerProjectList","addProjectButtonClicked","projectFormClosed","projectDeleted","newProjectList","projectFromState","expandCustomer","ProjectApprovalForm","updateStateApproved","ProjectRejectionForm","updateStateRejected","AdminProjectListEntry","ApproveProjectClicked","showApprovedForm","ApprovedFormClosed","RejectProjectClicked","showRejectedForm","RejectFormClosed","AdminProjectList","StudentListEntry","Zoom","in","style","transitionDelay","getMatriculationNumber","getCourse","StudentList","getStudents","studentList","ParticipantDeleteDialog","getParticipant","ValidationForm","updateValidation","updatedValidation","setModuleID","module","setProjectID","setStudentID","setValidationID","validation","getValidationID","getModuleID","ParticipantList","getValidationbyId","validationBO","deleteParticipationDialogClosed","validateParticipantButtonClicked","showValidationForm","validationFormClosed","display","justifyContent","getGrade","ProjectEvaluatedForm","saveProjectEvaluation","ParticipationForm","studentIDValidationFailed","ProjectListEntryParticipants","evaluatedProjectButtonClicked","showEvaluatedProject","evaluatedProjectFormClosed","addParticipantButtonClicked","showParticipationForm","participationFormClosed","button","ProjectListParticipants","AllParticipantList","console","log","AllProjectListEntryParticipants","AllProjectListParticipants","StudentReportIndividualTitle","today","date","getDate","getMonth","getFullYear","studentId","currentDate","googleUID","StudentReportListEntry","getProjectbyID","getProjectbyId","getModulebyID","getModulebyId","getValidationbyID","getEDV_number","StudentReportList","RoleChoice","handleStudentButtonClicked","StudentClicked","updateStudentRole","handleLecturerButtonClicked","LecturerClicked","updateLecturerRole","handleAdminButtonClicked","AdminClicked","updateAdminRole","handleDisable","getCurrentUser","updatedRole","setMail","setGoogleId","googleid","setRoleId","updateUser","roleid","g","AlwaysTrue","exact","from","StudentHeader","path","LecturerAdminHeader","App","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","handleAuthStateChange","authLoading","getIdToken","token","document","cookie","authError","handleSignIn","provider","GoogleAuthProvider","signInWithRedirect","currUser","appError","initializeApp","languageCode","onAuthStateChanged","ThemeProvider","Theme","CssBaseline","basename","process","getRoleId","React","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a5951d57.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { colors } from '@material-ui/core';\r\n\r\nconst white = '#FFFFFF';\r\nconst black = '#000000';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    black,\r\n    white,\r\n    primary: {\r\n      contrastText: white,\r\n      dark: colors.indigo[900],\r\n      main: colors.indigo[500],\r\n      light: colors.indigo[100]\r\n    },\r\n    secondary: {\r\n      contrastText: white,\r\n      dark: colors.blue[900],\r\n      main: colors.blue['A400'],\r\n      light: colors.blue['A400']\r\n    },\r\n    success: {\r\n      contrastText: white,\r\n      dark: colors.green[900],\r\n      main: colors.green[600],\r\n      light: colors.green[400]\r\n    },\r\n    info: {\r\n      contrastText: white,\r\n      dark: colors.blue[900],\r\n      main: colors.blue[600],\r\n      light: colors.blue[400]\r\n    },\r\n    warning: {\r\n      contrastText: white,\r\n      dark: colors.orange[900],\r\n      main: colors.orange[600],\r\n      light: colors.orange[400]\r\n    },\r\n    error: {\r\n      contrastText: white,\r\n      dark: colors.red[900],\r\n      main: colors.red[600],\r\n      light: colors.red[400]\r\n    },\r\n    text: {\r\n      primary: colors.blueGrey[800],\r\n      secondary: colors.blueGrey[600],\r\n      link: colors.blue[600]\r\n    },\r\n    background: {\r\n      default: '#F4F6F8',\r\n      paper: white\r\n    },\r\n    icon: colors.blueGrey[600],\r\n    divider: colors.grey[200]\r\n  }, \r\n});\r\n\r\n\r\nexport default theme;","import React, {Component} from 'react';\r\nimport {Button, Grid, Typography, withStyles}from '@material-ui/core';\r\n\r\n \r\nclass SignIn extends Component {\r\n  \r\n  /** SignIn Funktion */\r\n  handleSignInButtonClicked = () => {\r\n\t\tthis.props.onSignIn();\r\n  }\r\n\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes } = this.props;\r\n    \r\n    return (\r\n      <div>\r\n        <Typography className={classes.root} align='center' variant='h6'>Willkommen zum HdManagement System!</Typography>\r\n        <Typography className={classes.root} align='center'>Es scheint, als wären Sie nicht angemeldet.</Typography>\r\n        <Typography className={classes.root} align='center'>Um den Service des Projektverwaltungssystems nutzen zu können, melden Sie sich über Google an.</Typography>\r\n        <Grid container justify='center'>\r\n          <Grid item>\r\n            <Button variant='contained' color='primary' onClick={this.handleSignInButtonClicked}>\r\n             Anmelden\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n\troot: {\r\n\t\tmargin: theme.spacing(2)\r\n\t}\r\n});\r\n\r\n\r\nexport default withStyles(styles)(SignIn)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\nclass SignIn extends Component{\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                    Hello World\r\n                </Button>\r\n            \r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default (SignIn)\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Button variant=\"contained\" color=\"primary\">\r\n      Hello World\r\n    </Button>\r\n  );\r\n}\r\n \r\nReactDOM.render(<App />, document.querySelector('#app'));\r\n*/\r\n\r\n","import React, { Component } from 'react';\r\nimport { withStyles, LinearProgress } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\n/*Hier wird der Ladebalken erstellt.*/\r\n\r\nclass LoadingProgress extends Component {\r\n\r\n/** Rendern der Komponente */\r\n  render() {\r\n    const { classes, show } = this.props;\r\n\r\n    return (\r\n      show ?\r\n        <div className={classes.root}>\r\n          <LinearProgress color='secondary' />\r\n        </div>\r\n        : null\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(2),\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nLoadingProgress.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  \r\n  /** Wenn true, wird der Ladefortschritt gerendert*/\r\n  show: PropTypes.bool.isRequired,\r\n}\r\n\r\n\r\nexport default withStyles(styles)(LoadingProgress);\r\n","import React, { Component } from 'react';\r\nimport { withStyles, Button } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport PropTypes from 'prop-types';\r\n\r\n/*Hier wird die Error Message erstellt.*/\r\n\r\nclass ContextErrorMessage extends Component {\r\n  /** StandardText welcher ausgegeben wird, wenn der ContextError erscheint */\r\n  #standardText = 'Da ist was schief gelaufen...';\r\n\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes, error, contextErrorMsg, onReload } = this.props;\r\n\r\n    return (\r\n      (error !== null) ?\r\n        <Alert severity='error' className={classes.root}>\r\n          <div>\r\n            {this.#standardText}\r\n          </div>\r\n          <AlertTitle>\r\n            {contextErrorMsg}\r\n          </AlertTitle>\r\n          <div className={classes.margins}>\r\n            Error message (for debugging only) is:\r\n        </div>\r\n          <div>\r\n            {error.message}\r\n          </div>\r\n          {\r\n            onReload ?\r\n              <div className={classes.margins}>\r\n                <Button variant='contained' color='primary' startIcon={<AutorenewIcon />} onClick={onReload}>\r\n                  Reload\r\n            </Button>\r\n              </div>\r\n              : null\r\n          }\r\n        </Alert>\r\n        : null\r\n    );\r\n  }\r\n}\r\n\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n  margins: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n});\r\n\r\n/** PropTypes */ \r\nContextErrorMessage.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** \r\n   * Das Error-Objekt, welches die Fehlermeldung ansteuert; \r\n   * Wenn nicht null, wird die Fehlermeldung angezeigt */\r\n  error: PropTypes.object,\r\n  /** Eine kontextbezogene Fehlermeldung, die angezeigt werden soll */\r\n  contextErrorMsg: PropTypes.string,\r\n  /** \r\n   *Ein Reload-Handler für das onReload-Event, das eintritt, wenn der Reload-Button angeklickt wird. \r\n   * Bei Übergabe wird ein Reload-Button angezeigt.*/\r\n  onReload: PropTypes.func\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(ContextErrorMessage);\r\n","import React from 'react'\r\nimport { makeStyles, Paper, Typography, Link } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n  },\r\n  content: {\r\n    margin: theme.spacing(1),\r\n  }\r\n}));\r\n\r\n\r\nfunction Impressum() {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper elevation={0} className={classes.root}>\r\n      <div className={classes.content}>\r\n        <Typography variant='h6'>\r\n          HdManagement\r\n        </Typography>\r\n        <br />\r\n        <Typography>\r\n          Das HdManagement System ist ein Projektverwaltungssystem, welches im Rahmen der Lehrveranstaltung \"SW-Praktikum\" erstellt wurde.\r\n        </Typography>\r\n        <br />\r\n        <Typography>\r\n          Team Frontend: <Link href='https://github.com/LukasOrlando'>Lukas-Orlando Ulmer</Link>, \r\n          <Link href='https://github.com/Sania-Zeidan'> Sania Jasmin Zeidan</Link>,\r\n          <Link href='https://github.com/RahelUen'> Rahel Ün</Link>\r\n        </Typography>\r\n        <Typography>\r\n          Team Datenbank und Backend: <Link href='https://github.com/Tolga-Haybat'>Tolga Haybat</Link>,\r\n          <Link href='https://github.com/mariaweinberger'> Maria Weinberger</Link>, \r\n          <Link href='https://github.com/William-Zhang-26'> William Zhang</Link>\r\n        </Typography>\r\n        <br />\r\n        <Typography variant='body2'>\r\n          © Hochschule der Medien WS 2020 / 2021, all rights reserved.\r\n        </Typography>\r\n      </div>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Impressum;","import React, { Component, createRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Popover, IconButton, ClickAwayListener, withStyles, Typography, Paper, Button, Grid, Divider } from '@material-ui/core';\r\nimport firebase from 'firebase/app';\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\n\r\n//Smiley und Logout Option\r\n\r\n\r\nclass ProfileDropDown extends Component {\r\n\r\n  // Hier wird der Avatar Button referiert\r\n  #avatarButtonRef = createRef();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n    }\r\n  }\r\n\r\n  //Material-UI: Click away listener\r\n  handleAvatarButtonClick = () => {\r\n    this.setState({\r\n      open: !this.state.open\r\n    });\r\n  }\r\n\r\n/** Auszuführende Anweisung beim Schließen des Dialogs */\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false\r\n    });\r\n  }\r\n\r\n  /** User kann sich über den Button abmelden*/\r\n  handleSignOutButtonClicked = () => {\r\n    firebase.auth().signOut();\r\n  }\r\n\r\n/** Rendern der Komponente*/\r\n  render() {\r\n    const { classes, user } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      user ?\r\n        <div>\r\n          <IconButton className={classes.avatarButton} ref={this.#avatarButtonRef} onClick={this.handleAvatarButtonClick}>\r\n            <EmojiEmotionsIcon />\r\n          </IconButton>\r\n\r\n          <Popover open={open} anchorEl={this.#avatarButtonRef.current} onClose={this.handleClose}\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}>\r\n            <ClickAwayListener onClickAway={this.handleClose}>\r\n              <Paper className={classes.profileBox}>\r\n                <Typography align='center'>Hallo</Typography>\r\n                <Divider className={classes.divider} />\r\n                <Typography align='center' variant='body2'>{user.displayName}</Typography>\r\n                <Divider className={classes.divider} />\r\n                <Typography align='center' variant='body2'>{user.email}</Typography>\r\n                <Divider className={classes.divider} />\r\n                <Grid container justify='center'>\r\n                  <Grid item>\r\n                    <Button color='primary' onClick={this.handleSignOutButtonClicked}>Abmelden</Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </ClickAwayListener>\r\n          </Popover>\r\n        </div>\r\n        : null\r\n    )\r\n  }\r\n}\r\n/** Komponentenspezifisches Styeling */\r\nconst styles = theme => ({\r\n  avatarButton: {\r\n    float: 'right'\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  profileBox: {\r\n    padding: theme.spacing(1),\r\n    background: theme.palette.background.default,\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nProfileDropDown.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  /** Der angemeldete User in firesbase */\r\n  user: PropTypes.object,\r\n}\r\n\r\nexport default withStyles(styles)(ProfileDropDown)\r\n","import React, { Component } from 'react';\r\nimport { Paper, Typography, Tabs, Tab, Box } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport ProfileDropDown from '../dialogs/ProfileDropDown';     //Zeile 30:<ProfileDropDown user={user} />\r\n\r\n//Der Studenten spezifische Header (Tabs: Projekte, Bericht, Impressum)\r\nclass Header extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tabindex: 0\r\n    };\r\n  }\r\n\r\n//Behandelt Navigationsänderungen\r\n  handleTabChange = (e, newIndex) => {\r\n    this.setState({\r\n      tabindex: newIndex\r\n    })\r\n  };\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    return (\r\n      <Paper variant='outlined' >\r\n        <ProfileDropDown user={user} />\r\n        <Box p = {3}/>\r\n        <Typography variant='h4' component='h1' align='center'>\r\n          Willkommen\r\n        </Typography>\r\n \r\n            <Tabs indicatorColor='primary' textColor='primary' centered value={this.state.tabindex} onChange={this.handleTabChange} >\r\n              <Tab label='Projekte' component={RouterLink} to={`/projects`} />\r\n              <Tab label='Bericht' component={RouterLink} to={`/report`} />\r\n              <Tab label='Impressum' component={RouterLink} to={`/impressum`} />\r\n            </Tabs>\r\n     \r\n      </Paper>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Paper, Typography, Tabs, Tab, Box } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport ProfileDropDown from '../dialogs/ProfileDropDown';\r\n\r\n//Der Admin und Dozenten spezifische Header (Tabs: Projekte, Noten, Impressum)\r\n\r\nclass Header extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tabindex: 0\r\n    };\r\n  }\r\n\r\n//Behandelt Navigationsänderungen\r\n  handleTabChange = (e, newIndex) => {\r\n    this.setState({\r\n      tabindex: newIndex\r\n    })\r\n  };\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    return (\r\n      <Paper variant='outlined' >\r\n        <ProfileDropDown user={user} />\r\n        <Box p = {3}/>\r\n        <Typography variant='h4' component='h1' align='center'>\r\n          Willkommen\r\n        </Typography>\r\n        \r\n            <Tabs indicatorColor='primary' textColor='primary' centered value={this.state.tabindex} onChange={this.handleTabChange} >\r\n              <Tab label='Projekte' component={RouterLink} to={`/projects`} />\r\n              <Tab label='Noten' component={RouterLink} to={`/grade`} />\r\n              <Tab label='Studenten' component={RouterLink} to={`/students`} />\r\n              <Tab label='Impressum' component={RouterLink} to={`/impressum`} />\r\n            </Tabs>\r\n            \r\n      </Paper>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Header;\r\n","/**\r\n * Basisklasse für alle BusinessObjects mit ID und aktuellem Zeitpunkt\r\n */\r\n\r\nexport default class BusinessObject {\r\n\r\n    constructor() {\r\n        this.id = 0;\r\n        this.create_time = new Date() \r\n    }\r\n\r\n    getID() {\r\n        return this.id;\r\n    }\r\n    \r\n    setID(aId) {\r\n        this.id = aId;\r\n    }\r\n\r\n    get_create_time() {\r\n        return this.create_time\r\n    }\r\n\r\n    toString() {\r\n        let result = '';\r\n        for (var prop in this) {\r\n          result += prop + ': ' + this[prop] + ' ';\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n    ","import BusinessObject from './BusinessObject';\r\n\r\nexport default class NamedBusinessObject extends BusinessObject {\r\n\r\n    constructor(aName) {\r\n        super();\r\n        this.name = aName;\r\n\r\n    }\r\n\r\n    getName() {\r\n        return this.name;\r\n    }\r\n    \r\n    setName(aName) {\r\n        this.name = aName;\r\n    }\r\n\r\n}\r\n\r\n    ","import NamedBusinessObject from './NamedBusinessObject';\r\n\r\nexport default class AssignmentBO extends NamedBusinessObject{\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    //Array von AssignmentBOs aus einem JSON heraus mittels der setPrototypeOf Funktion\r\n    static fromJSON(assignment) {\r\n      let result = [];\r\n\r\n      if (Array.isArray(assignment)) {\r\n            assignment.forEach((a) => {\r\n              Object.setPrototypeOf(a, AssignmentBO.prototype);\r\n              result.push(a);\r\n          })\r\n      } else {\r\n          let a = assignment;\r\n          Object.setPrototypeOf(a, AssignmentBO.prototype);\r\n          result.push(a)\r\n      }\r\n      \r\n      return result;\r\n  }\r\n\r\n}\r\n","import NamedBusinessObject from './NamedBusinessObject';\r\n\r\n\r\nexport default class ModuleBO extends NamedBusinessObject {\r\n\r\n    //Konstruktorklasse, welche ein Modul BO erstellt mit den abgebildeten Attributen\r\n    constructor(aEDV_number) {\r\n        super();\r\n        this.edv_number = aEDV_number;\r\n    }\r\n\r\n    //EDV Nummer\r\n    getEDV_number() {\r\n        return this.edv_number;\r\n    }\r\n\r\n    setEDV_number(aEDV_number) {\r\n        this.edv_number = aEDV_number;\r\n    }\r\n\r\n    //Array von ModuleBOs aus einem JSON heraus mittels der setPrototypeOf fkt\r\n    static fromJSON(modules) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(modules)) {\r\n            modules.forEach((m) => {\r\n                Object.setPrototypeOf(m, ModuleBO.prototype);\r\n                result.push(m);\r\n            })\r\n        } else {\r\n            let m = modules;\r\n            Object.setPrototypeOf(m, ModuleBO.prototype);\r\n            result.push(m)\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n}","import BusinessObject from './BusinessObject';\r\n\r\nexport default class  ParticipationBO extends BusinessObject {\r\n\r\n\r\n    //Konstruktorklasse, welche ein Teilnahme BO erstellt mit den abgebildeten Attributen\r\n    constructor(aModuleID, aProjectID, aStudentID, aValidationID) {\r\n        super();\r\n        this.module_id = aModuleID;\r\n        this.project_id = aProjectID;\r\n        this.student_id = aStudentID;\r\n        this.validation_id = aValidationID;\r\n    }\r\n\r\n    //Modul ID\r\n    getModuleID() {\r\n        return this.module_id\r\n    }\r\n    \r\n    setModuleID(aModuleID) {\r\n        this.module_id = aModuleID;\r\n    }\r\n\r\n\r\n    //Projekt ID\r\n    getProjectID() {\r\n        return this.project_id\r\n    }\r\n    \r\n    setProjectID(aProjectID) {\r\n        this.project_id = aProjectID;\r\n    }\r\n\r\n\r\n    //Student ID\r\n    getStudentID() {\r\n        return this.student_id\r\n    }\r\n    \r\n    setStudentID(aStudentID) {\r\n        this.student_id = aStudentID;\r\n    }\r\n\r\n\r\n    //Noten ID\r\n    getValidationID() {\r\n        return this.validation_id\r\n    }\r\n    \r\n    setValidationID(aValidationID) {\r\n        this.validation_id = aValidationID;\r\n    }\r\n\r\n\r\n    //Array von ParticipationBOs aus einem JSON herraus mittels der setPrototypeOf Funktion\r\n    static fromJSON(participations) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(participations)) {\r\n            participations.forEach((p) => {\r\n                Object.setPrototypeOf(p, ParticipationBO.prototype);\r\n                result.push(p);\r\n            })\r\n        } else {\r\n            let p = participations;\r\n            Object.setPrototypeOf(p, ParticipationBO.prototype);\r\n            result.push(p)\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n}","import AutomatBO from './AutomatBO';\r\n\r\n\r\nexport default class ProjectBO extends AutomatBO {\r\n\r\n    //Konstruktorklasse, welche ein Projekttypen BO erstellt mit den abgebildeten Attributen\r\n    constructor(aName, aUserID, aProjectTypeID, aStateID,  aSemesterID, aAssignmentID, aProjectDescription, aPartners, aCapacity, aPreferredRoom, aBDaysPreSchedule,\r\n        aBDaysFinale, aBDaysSaturdays, aPreferredBDays, aAdditionalLecturer, aWeekly) {\r\n\r\n        super();\r\n        this.name = aName;\r\n        this.user_id = aUserID;\r\n        this.project_type_id = aProjectTypeID;\r\n        this.state_id = aStateID;\r\n        this.semester_id = aSemesterID;\r\n        this.assignment_id = aAssignmentID;\r\n        this.project_description = aProjectDescription;        \r\n        this.partners = aPartners;\r\n        this.capacity = aCapacity;\r\n        this.preferred_room = aPreferredRoom;\r\n        this.b_days_pre_schedule = aBDaysPreSchedule;\r\n        this.b_days_finale = aBDaysFinale;\r\n        this.b_days_saturdays = aBDaysSaturdays;\r\n        this.preferred_b_days = aPreferredBDays;\r\n        this.additional_lecturer = aAdditionalLecturer;\r\n        this.weekly = aWeekly;\r\n    }\r\n    \r\n\r\n    //AutomatID\r\n    getUserID() {\r\n        return this.user_id;\r\n    }\r\n\r\n    setUserID(aUserID) {\r\n        this.user_id = aUserID;\r\n    }\r\n\r\n\r\n    //ProjectTypeID\r\n    getProjectTypeID() {\r\n        return this.project_type_id;\r\n    }\r\n\r\n    setProjectTypeID(aProjectTypeID) {\r\n        this.project_type_id = aProjectTypeID;\r\n    }\r\n\r\n\r\n    //StateID\r\n    getStateID() {\r\n        return this.state_id;\r\n    }\r\n\r\n    setStateID(aStateID) {\r\n        this.state_id = aStateID;\r\n    }\r\n\r\n\r\n    //SemesterID\r\n    getSemesterID() {\r\n        return this.semester_id;\r\n    }\r\n\r\n    setSemesterID(aSemesterID) {\r\n        this.semester_id = aSemesterID;\r\n    }\r\n\r\n\r\n    //AssignmentID\r\n    getAssignmentID() {\r\n        return this.assignment_id;\r\n    }\r\n\r\n    setAssignmentID(aAssigmentID) {\r\n        this.assignment_id = aAssigmentID;\r\n    }\r\n\r\n\r\n    //Kapazität\r\n    getCapacity() {\r\n        return this.capacity;\r\n    }\r\n\r\n    setCapacity(aCapacity) {\r\n        this.capacity = aCapacity;\r\n    }\r\n\r\n    //externe Kooperationspartner\r\n    getPartners() {\r\n        return this.partners;\r\n    }\r\n\r\n    setPartners(aPartners) {\r\n        this.partners = aPartners;\r\n    }\r\n\r\n    //Projektbeschreibung\r\n    getProjectDescription() {\r\n        return this.project_description;\r\n    }\r\n\r\n    setProjectDescription(aProjectDescription) {\r\n        this.project_description = aProjectDescription;\r\n    }\r\n\r\n    //wöchentlich\r\n    getWeekly() {\r\n        return this.weekly;\r\n    }\r\n\r\n    setWeekly(aWeekly) {\r\n        this.weekly = aWeekly;\r\n    }\r\n\r\n    //Blocktage vor Beginn der Vorlesungszeit \r\n    getBDaysPreSchedule () {\r\n        return this.b_days_pre_schedule;\r\n    }\r\n\r\n    setBDaysPreSchedule (aBDaysPreSchedule) {\r\n        this.b_days_pre_schedule = aBDaysPreSchedule;\r\n    }\r\n\r\n    //Blocktage in der Prüfungszeit (nur inter-/transdiziplinäre Projekte)\r\n    getBDaysFinale () {\r\n        return this.b_days_finale;\r\n    }\r\n\r\n    setBDaysFinale (aBDaysFinale) {\r\n        this.b_days_finale = aBDaysFinale;\r\n    }\r\n\r\n    //Blocktage (Samstage) in der Vorlesungszeit\r\n    getBDaysSaturdays () {\r\n        return this.b_days_saturdays;\r\n    }\r\n\r\n    setBDaysSaturdays (aBDaysSaturdays) {\r\n        this.b_days_saturdays = aBDaysSaturdays;\r\n    }\r\n\r\n    //Präferierte Tage\r\n    getPreferredBDays () {\r\n        return this.preferred_b_days;\r\n    }\r\n\r\n    setPreferredBDays (aPreferredBDays) {\r\n        this.preferred_b_days = aPreferredBDays;\r\n    }\r\n\r\n    //Besonderer Raum notwendig (bool)\r\n    getRoomPreference () {\r\n        return this.room_preference;\r\n    }\r\n\r\n    setRoomPreference (aRoomPreference) {\r\n        this.room_preference = aRoomPreference;\r\n    }\r\n\r\n    //Besonderer Raum notwendig (str)\r\n    getPreferredRoom () {\r\n        return this.preferred_room;\r\n    }\r\n\r\n    setPreferredRoom (aPreferredRoom) {\r\n        this.preferred_room = aPreferredRoom;\r\n    }\r\n\r\n    //Externer Kooperationspartner \r\n    getAdditionalLecturer () {\r\n        return this.additional_lecturer;\r\n    }\r\n\r\n    setAdditionalLecturer (aAdditionalLecturer) {\r\n        this.additional_lecturer = aAdditionalLecturer;\r\n    }\r\n\r\n    //Array von ProjectBOs aus einem JSON herraus mittels der setPrototypeOf fkt\r\n    static fromJSON(projects) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(projects)) {\r\n            projects.forEach((pr) => {\r\n                Object.setPrototypeOf(pr, ProjectBO.prototype);\r\n                result.push(pr);\r\n            })\r\n        } else {\r\n            let pr = projects;\r\n            Object.setPrototypeOf(pr, ProjectBO.prototype);\r\n            result.push(pr)\r\n        }\r\n        \r\n        return result;\r\n    }\r\n}\r\n","import NamedBusinessObject from './NamedBusinessObject';\r\n\r\nexport default class AutomatBO extends NamedBusinessObject{\r\n\r\n    constructor(aCurrentState) {\r\n        super();\r\n        this.current_state = aCurrentState;\r\n        this.state_id = 1;\r\n    }\r\n\r\n}\r\n","import NamedBusinessObject from './NamedBusinessObject';\r\n\r\nexport default class SemesterBO extends NamedBusinessObject {\r\n\r\n    constructor(aSemester) {\r\n        super();\r\n        this.semester = aSemester;\r\n\r\n    }\r\n\r\n    getSemester() {\r\n        return this.semester;\r\n    }\r\n    \r\n    setSemester(aSemester) {\r\n        this.semester = aSemester;\r\n    }\r\n\r\n    static fromJSON(semesters) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(semesters)) {\r\n            semesters.forEach((s) => {\r\n                Object.setPrototypeOf(s, SemesterBO.prototype);\r\n                result.push(s);\r\n            })\r\n        } else {\r\n            let s = semesters;\r\n            Object.setPrototypeOf(s, SemesterBO.prototype);\r\n            result.push(s)\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n}\r\n\r\n    ","import NamedBusinessObject from './NamedBusinessObject';\r\n\r\n\r\nexport default class StateBO extends NamedBusinessObject /*extends NamedBusinessObject*/ {\r\n\r\n    //Konstruktorklasse, welche ein Modul BO erstellt mit den abgebildeten Attributen\r\n    constructor(aState = \"New\") {\r\n        super();\r\n        this.state = aState;\r\n    }\r\n\r\n\r\n    //Array von StudentBOs aus einem JSON herraus mittels der setPrototypeOf fkt\r\n    static fromJSON(states) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(states)) {\r\n            states.forEach((sta) => {\r\n                Object.setPrototypeOf(sta, StateBO.prototype);\r\n                result.push(sta);\r\n            })\r\n        } else {\r\n            let sta = states;\r\n            Object.setPrototypeOf(sta, StateBO.prototype);\r\n            result.push(sta)\r\n        }\r\n        \r\n        return result;\r\n}\r\n\r\n}","import NamedBusinessObject from './NamedBusinessObject';\r\n\r\nexport default class UserBO extends NamedBusinessObject {\r\n\r\n    //Konstruktorklasse, welche ein User BO erstellt mit den abgebildeten Attributen\r\n    constructor(aMail, aGoogleId, aRoleId) {\r\n        super();\r\n        this.google_id = aGoogleId;\r\n        this.role_id = aRoleId;\r\n        this.mail = aMail;\r\n    }\r\n\r\n\r\n    //Mail\r\n    setMail(aMail) {\r\n        this.mail = aMail;\r\n    }\r\n\r\n    getMail() {\r\n        return this.mail;\r\n    }\r\n\r\n\r\n    //GoogleId\r\n    setGoogleId(aGoogleId) {\r\n        this.google_id = aGoogleId;\r\n    }\r\n\r\n    getGoogleId() {\r\n        return this.google_id;\r\n    }\r\n\r\n\r\n    //RoleId\r\n    setRoleId(aRoleId) {\r\n        this.role_id = aRoleId;\r\n    }\r\n\r\n    getRoleId() {\r\n        return this.role_id;\r\n    }\r\n\r\n    \r\n\r\n\r\n    //Array von StudentBOs aus einem JSON herraus mittels der setPrototypeOf fkt\r\n    static fromJSON(users) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(users)) {\r\n            users.forEach((u) => {\r\n                Object.setPrototypeOf(u, UserBO.prototype);\r\n                result.push(u);\r\n            })\r\n        } else {\r\n            let u = users;\r\n            Object.setPrototypeOf(u, UserBO.prototype);\r\n            result.push(u)\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n\r\n}","import UserBO from './UserBO';\r\n\r\nexport default class StudentBO extends UserBO {\r\n\r\n    //Konstruktorklasse, welche ein Studenten BO erstellt mit den abgebildeten Attributen\r\n    constructor(aCourse, aMatriculation_number, aMail, aProject_id) {\r\n        super();\r\n        this.course = aCourse;\r\n        this.matriculation_number = aMatriculation_number;\r\n        this.mail = aMail;\r\n        this.project_id = aProject_id;\r\n    }\r\n\r\n    //Kurs\r\n    setCourse(aCourse) {\r\n        this.course = aCourse;\r\n    }\r\n\r\n    getCourse() {\r\n        return this.course;\r\n    }\r\n\r\n\r\n    //Matrikelnummer\r\n    setMatriculationNumber(aMatriculation_number) {\r\n        this.matriculation_number = aMatriculation_number;\r\n    }\r\n\r\n    getMatriculationNumber() {\r\n        return this.matriculation_number;\r\n    }\r\n\r\n\r\n    //Mail\r\n    setMail(aMail) {\r\n        this.mail = aMail;\r\n    }\r\n\r\n    getMail() {\r\n        return this.mail;\r\n    }\r\n\r\n\r\n    //ProjectID\r\n    setProjectId(aProject_id) {\r\n        this.project_id = aProject_id;\r\n    }\r\n\r\n    getProjectId() {\r\n        return this.project_id;\r\n    }\r\n    \r\n\r\n    //Array von StudentBOs aus einem JSON herraus mittels der setPrototypeOf Funktion\r\n    static fromJSON(students) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(students)) {\r\n            students.forEach((st) => {\r\n                Object.setPrototypeOf(st, StudentBO.prototype);\r\n                result.push(st);\r\n            })\r\n        } else {\r\n            let st = students;\r\n            Object.setPrototypeOf(st, StudentBO.prototype);\r\n            result.push(st)\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n\r\n}","import BusinessObject from './BusinessObject';\r\n\r\nexport default class ValidationBO extends BusinessObject {\r\n\r\n    constructor(aGrade) {\r\n        super();\r\n        this.grade = aGrade;\r\n\r\n    }\r\n\r\n    getGrade() {\r\n        return this.grade;\r\n    }\r\n    \r\n    setGrade(aGrade) {\r\n        this.grade = aGrade;\r\n    }\r\n    \r\n    static fromJSON(validations) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(validations)) {\r\n            validations.forEach((v) => {\r\n                Object.setPrototypeOf(v, ValidationBO.prototype);\r\n                result.push(v);\r\n            })\r\n        } else {\r\n            let v = validations;\r\n            Object.setPrototypeOf(v, ValidationBO.prototype);\r\n            result.push(v)\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n}\r\n\r\n","import NamedBusinessObject from './NamedBusinessObject';\r\n\r\n\r\nexport default class ProjectTypeBO extends NamedBusinessObject {\r\n\r\n    //Konstruktorklasse, welche ein Projekttypen BO erstellt mit den abgebildeten Attributen\r\n    constructor(aName, aEcts, aSws) {\r\n\r\n        super();\r\n        this.name = aName;\r\n        this.ects = aEcts;\r\n        this.sws = aSws;\r\n\r\n    }\r\n\r\n    //ECTS\r\n    getEcts() {\r\n        return this.ects;\r\n    }\r\n\r\n    setEcts(aEcts) {\r\n        this.ects = aEcts;\r\n    }\r\n\r\n\r\n    //SWS\r\n    getSws() {\r\n        return this.sws;\r\n    }\r\n\r\n    setSws(aSws) {\r\n        this.sws = aSws;\r\n    }\r\n\r\n\r\n    //Array von ProjectTypeBOs aus einem JSON herraus mittels der setPrototypeOf fkt\r\n    static fromJSON(projecttypes) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(projecttypes)) {\r\n            projecttypes.forEach((pt) => {\r\n                Object.setPrototypeOf(pt, ProjectTypeBO.prototype);\r\n                result.push(pt);\r\n            })\r\n        } else {\r\n            let pt = projecttypes;\r\n            Object.setPrototypeOf(pt, ProjectTypeBO.prototype);\r\n            result.push(pt)\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n}","import AssignmentBO from './AssignmentBO';\r\nimport ModuleBO from './ModuleBO';\r\nimport ParticipationBO from './ParticipationBO';\r\nimport ProjectBO from './ProjectBO';\r\nimport SemesterBO from './SemesterBO';\r\nimport StateBO from './StateBO';\r\nimport StudentBO from './StudentBO';\r\nimport UserBO from './UserBO';\r\nimport ValidationBO from './ValidationBO';\r\nimport ProjectTypeBO from './ProjectTypeBO';\r\n\r\n\r\n\r\nexport default class ProjectAPI {\r\n\r\n    // Singelton instance\r\n    static #api = null;\r\n  \r\n  \r\n    // Local Python backend\r\n    #projectServerBaseURL = '/projectmanager';\r\n  \r\n    //Local http-fake-backend \r\n    //#projectServerBaseURL = '/api/project';\r\n\r\n\r\n    //Projekt bezogen\r\n    #getProjectsURL = () => `${this.#projectServerBaseURL}/project/`;\r\n    #getProjectbyIdURL = (id) => `${this.#projectServerBaseURL}/project/${id}`;\r\n    #addProjectURL = () => `${this.#projectServerBaseURL}/project`;\r\n    #deleteProjectURL = (id) => `${this.#projectServerBaseURL}/project/${id}`;\r\n    #updateProjectURL = (id) => `${this.#projectServerBaseURL}/project/${id}`;\r\n\r\n    //Projekttyp bezogen\r\n    #getProjecttypebyIdURL = (id) => `${this.#projectServerBaseURL}/project_type/${id}`;\r\n    \r\n    //Teilnahme bezogen\r\n    #updateValidationURL = (id) => `${this.#projectServerBaseURL}/participation/${id}`;\r\n    #getParticipationsURL = () => `${this.#projectServerBaseURL}/all_participations/`;\r\n    #getParticipationForProjectURL = (id) => `${this.#projectServerBaseURL}/project/${id}/participation`;\r\n    #getParticipationForStudentURL = (id) => `${this.#projectServerBaseURL}/student/${id}/participation`;\r\n    #deleteParticipationURL = (id) => `${this.#projectServerBaseURL}/participation/${id}`;\r\n    #addParticipationURL = () => `${this.#projectServerBaseURL}/participation`;\r\n    \r\n    //Student bezogen\r\n    #getStudentsURL = () => `${this.#projectServerBaseURL}/student/`;\r\n    #getStudentByIdURL = (id) => `${this.#projectServerBaseURL}/student/${id}`;\r\n\r\n    //State bezogen\r\n    #getStatebyIdURL = (id) => `${this.#projectServerBaseURL}/state/${id}`;\r\n\r\n    //Benotung bezogen\r\n    #getValidationbyIdURL = (id) => `${this.#projectServerBaseURL}/validation/${id}`;\r\n\r\n    //Module bezogen\r\n    #getModulebyIdURL = (id) => `${this.#projectServerBaseURL}/module/${id}`;\r\n\r\n    //User bezogen\r\n    #getUserByGoogleIdURL= (google_id) => `${this.#projectServerBaseURL}/user/${google_id}`;\r\n    #updateUserURL = (id) => `${this.#projectServerBaseURL}/user/${id}`;\r\n\r\n    //Assignment bezogen\r\n    #getAssignmentbyIdURL = (id) => `${this.#projectServerBaseURL}/assignment/${id}`\r\n\r\n    //Semester bezogen\r\n    #getSemesterbyCurrentSemesterURL = (current_semester) => `${this.#projectServerBaseURL}/semesterr/${1}`;\r\n\r\n\r\n\r\n    static getAPI() {\r\n        if (this.#api == null) {\r\n            this.#api = new ProjectAPI();\r\n        }\r\n        return this.#api;\r\n    }\r\n\r\n\r\n    #fetchAdvanced = (url, init) => fetch(url, init)\r\n        .then(res => {\r\n            // Das von fetch() zurückgegebene Promise wird bei einem HTTP-Fehlerstatus nicht zurückgewiesen, auch wenn die Antwort ein HTTP 404 oder 500 ist. \r\n            if (!res.ok) {\r\n                throw Error(`${res.status} ${res.statusText}`);\r\n            }\r\n            return res.json();\r\n        })\r\n\r\n\r\n\r\n    //Projekt bezogen\r\n    getProjects() {\r\n        return this.#fetchAdvanced(this.#getProjectsURL()).then((responseJSON) => {\r\n            let projectBOs = ProjectBO.fromJSON(responseJSON);\r\n            return new Promise(function (resolve) {\r\n                resolve(projectBOs);\r\n            })\r\n        })\r\n    }\r\n\r\n    getProjectbyId(projectID) {\r\n      return this.#fetchAdvanced(this.#getProjectbyIdURL(projectID)).then((responseJSON) => {\r\n        // Wir erhalten immer ein Array von ProjectBOs.fromJSON, benötigen aber nur ein Objekt\r\n        let responseProjectBO = ProjectBO.fromJSON(responseJSON)[0];\r\n        return new Promise(function (resolve) {\r\n          resolve(responseProjectBO);\r\n        })\r\n      })\r\n    }\r\n\r\n    addProject(projectBO) {\r\n      return this.#fetchAdvanced(this.#addProjectURL(), {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json, text/plain',\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(projectBO)\r\n      }).then((responseJSON) => {\r\n        // Wir erhalten immer ein Array von ProjectBOs.fromJSON, benötigen aber nur ein Objekt\r\n        let responseProjectBO = ProjectBO.fromJSON(responseJSON)[0];\r\n        \r\n        return new Promise(function (resolve) {\r\n          resolve(responseProjectBO);\r\n        })\r\n      })\r\n    }\r\n\r\n    deleteProject(projectID) {\r\n      return this.#fetchAdvanced(this.#deleteProjectURL(projectID), {\r\n        method: 'DELETE'\r\n      }).then((responseJSON) => {\r\n        let responseProjectBO = ProjectBO.fromJSON(responseJSON)[0];\r\n        return new Promise(function (resolve) {\r\n          resolve(responseProjectBO);\r\n        })\r\n      })\r\n    }\r\n\r\n    updateProject(projectBO) {\r\n      return this.#fetchAdvanced(this.#updateProjectURL(projectBO.getID()), {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Accept': 'application/json, text/plain',\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(projectBO)\r\n      }).then((responseJSON) => {\r\n        // Wir erhalten immer ein Array von ProjectBOs.fromJSON, benötigen aber nur ein Objekt\r\n        let responseProjectBO = ProjectBO.fromJSON(responseJSON)[0];\r\n        return new Promise(function (resolve) {\r\n          resolve(responseProjectBO);\r\n        })\r\n      })\r\n    }\r\n\r\n    //Projekttyp bezogen\r\n\r\n    getProjecttypebyId(projecttypeID) {\r\n      return this.#fetchAdvanced(this.#getProjecttypebyIdURL(projecttypeID)).then((responseJSON) => {\r\n        // Wir erhalten immer ein Array von ProjectTypeBOs.fromJSON, benötigen aber nur ein Objekt\r\n        let responseProjecttypeBO = ProjectTypeBO.fromJSON(responseJSON)[0];\r\n        return new Promise(function (resolve) {\r\n          resolve(responseProjecttypeBO);\r\n        })\r\n      })\r\n    }\r\n\r\n    //Teilnahme bezogen\r\n\r\n    updateValidation(participationBO) {\r\n      return this.#fetchAdvanced(this.#updateValidationURL(participationBO.getID()), {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Accept': 'application/json, text/plain',\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(participationBO)\r\n      }).then((responseJSON) => {\r\n        // Wir erhalten immer ein Array von ParticipationBOs.fromJSON, benötigen aber nur ein Objekt\r\n        let responseValidationBO = ParticipationBO.fromJSON(responseJSON)[0];\r\n        return new Promise(function (resolve) {\r\n          resolve(responseValidationBO);\r\n        })\r\n      })\r\n    }\r\n\r\n    getParticipations() {\r\n      return this.#fetchAdvanced(this.#getParticipationsURL()).then((responseJSON) => {\r\n          let participationBOs = ParticipationBO.fromJSON(responseJSON);\r\n          return new Promise(function (resolve) {\r\n              resolve(participationBOs);\r\n          })\r\n      })\r\n    }\r\n\r\n    getParticipationForProject(projectID) { \r\n      return this.#fetchAdvanced(this.#getParticipationForProjectURL(projectID)).then((responseJSON) => {\r\n        // Wir erhalten immer ein Array von ParticipationBOs.fromJSON\r\n        let participationBOs = ParticipationBO.fromJSON(responseJSON);                                      // hier wurde das [0] entfernt\r\n      \r\n        return new Promise(function (resolve) {\r\n          resolve(participationBOs);\r\n        })\r\n      })\r\n    }\r\n\r\n    getParticipationForStudent(studentID) { \r\n      return this.#fetchAdvanced(this.#getParticipationForStudentURL(studentID)).then((responseJSON) => {\r\n        // Wir erhalten immer ein Array von ParticipationBOs.fromJSON\r\n        let participationBOs = ParticipationBO.fromJSON(responseJSON);                                      // hier wurde das [0] entfernt\r\n      \r\n        return new Promise(function (resolve) {\r\n          resolve(participationBOs);\r\n        })\r\n      })\r\n    }\r\n\r\n    deleteParticipation(participationID) {\r\n      return this.#fetchAdvanced(this.#deleteParticipationURL(participationID), {\r\n        method: 'DELETE'\r\n      }).then((responseJSON) => {\r\n        let responseParticipationBO = ParticipationBO.fromJSON(responseJSON)[0];\r\n        return new Promise(function (resolve) {\r\n          resolve(responseParticipationBO);\r\n        })\r\n      })\r\n    }\r\n\r\n    addParticipation(participationBO) {\r\n        return this.#fetchAdvanced(this.#addParticipationURL(), {\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json, text/plain',\r\n            'Content-type': 'application/json',\r\n          },\r\n          body: JSON.stringify(participationBO) \r\n        }).then((responseJSON) => {\r\n        // Wir erhalten immer ein Array von ParticipationBOs.fromJSON, benötigen aber nur ein Objekt\r\n        let responseParticipationBO = ParticipationBO.fromJSON(responseJSON)[0];\r\n  \r\n          return new Promise(function (resolve) {\r\n            resolve(responseParticipationBO);\r\n          })\r\n        })\r\n      }\r\n\r\n\r\n    //Student bezogen\r\n\r\n    getStudents() {\r\n      return this.#fetchAdvanced(this.#getStudentsURL()).then((responseJSON) => {\r\n          let studentBOs = StudentBO.fromJSON(responseJSON);\r\n          return new Promise(function (resolve) {\r\n              resolve(studentBOs);\r\n          })\r\n      })\r\n    }\r\n\r\n    getStudentbyId(studentID) { \r\n        return this.#fetchAdvanced(this.#getStudentByIdURL(studentID)).then((responseJSON) => {\r\n        // Wir erhalten immer ein Array von StudentBOs.fromJSON, benötigen aber nur ein Objekt\r\n        let responseStudentBO = StudentBO.fromJSON(responseJSON)[0];\r\n          return new Promise(function (resolve) {\r\n            resolve(responseStudentBO);\r\n          })\r\n        })\r\n      }\r\n\r\n\r\n    //State bezogen\r\n\r\n    getStatebyId(stateID) {\r\n      return this.#fetchAdvanced(this.#getStatebyIdURL(stateID)).then((responseJSON) => {\r\n        // Wir erhalten immer ein Array von StateBOs.fromJSON, benötigen aber nur ein Objekt\r\n        let responseStateBO = StateBO.fromJSON(responseJSON)[0];\r\n        return new Promise(function (resolve) {\r\n          resolve(responseStateBO);\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n    //Benotung bezogen\r\n    getValidationbyId(validationID) {\r\n      return this.#fetchAdvanced(this.#getValidationbyIdURL(validationID)).then((responseJSON) => {\r\n        // Wir erhalten immer ein Array von ValidationBOs.fromJSON, benötigen aber nur ein Objekt\r\n        let responseValidationBO = ValidationBO.fromJSON(responseJSON)[0];\r\n        return new Promise(function (resolve) {\r\n          resolve(responseValidationBO);\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n\r\n    //Modul bezogen\r\n\r\n    getModulebyId(moduleID) {\r\n      return this.#fetchAdvanced(this.#getModulebyIdURL(moduleID)).then((responseJSON) => {\r\n        // Wir erhalten immer ein Array von ModuleBOs.fromJSON, benötigen aber nur ein Objekt\r\n        let responseModuleBO = ModuleBO.fromJSON(responseJSON)[0];\r\n        return new Promise(function (resolve) {\r\n          resolve(responseModuleBO);\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n\r\n    //User bezogen\r\n    \r\n    getUserByGoogleId(google_id) {\r\n      return this.#fetchAdvanced(this.#getUserByGoogleIdURL(google_id)).then((responseJSON) => {\r\n        // Wir erhalten immer ein Array von UserBOs.fromJSON, benötigen aber nur ein Objekt\r\n        let responseUserBO = UserBO.fromJSON(responseJSON)[0];\r\n        return new Promise(function (resolve) {\r\n          resolve(responseUserBO);\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n    updateUser(userBO) {\r\n      return this.#fetchAdvanced(this.#updateUserURL(userBO.getID()), {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Accept': 'application/json, text/plain',\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(userBO)\r\n      }).then((responseJSON) => {\r\n        // Wir erhalten immer ein Array von UserBOs.fromJSON, benötigen aber nur ein Objekt\r\n        let responseUserBO = UserBO.fromJSON(responseJSON)[0];\r\n        return new Promise(function (resolve) {\r\n          resolve(responseUserBO);\r\n        })\r\n      })\r\n    }\r\n    \r\n\r\n\r\n    //Assignment bezogen\r\n    getAssignmentbyId(assignmentID) {\r\n      return this.#fetchAdvanced(this.#getAssignmentbyIdURL(assignmentID)).then((responseJSON) => {\r\n        // Wir erhalten immer ein Array von AssignmentBOs.fromJSON, benötigen aber nur ein Objekt\r\n        let responseAssignmentBO = AssignmentBO.fromJSON(responseJSON)[0];\r\n        return new Promise(function (resolve) {\r\n          resolve(responseAssignmentBO);\r\n        })\r\n      })\r\n    }\r\n\r\n    \r\n\r\n    //Semester bezogen\r\n    getSemesterbyCurrentSemester(current_semester_id) {\r\n      return this.#fetchAdvanced(this.#getSemesterbyCurrentSemesterURL(current_semester_id)).then((responseJSON) => {\r\n        // Wir erhalten immer ein Array von SemesterBOs.fromJSON, benötigen aber nur ein Objekt\r\n        let responseSemesterBO = SemesterBO.fromJSON(responseJSON)[0];\r\n        return new Promise(function (resolve) {\r\n          resolve(responseSemesterBO);\r\n        })\r\n      })\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ProjectAPI from '../../api/ProjectAPI';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\n\r\n//Das Fenster um sich als Student aus einem Projekt auszuschreiben\r\n\r\nclass StudentProjectSignOut extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init the state\r\n    this.state = {\r\n      deletingInProgress: false,\r\n      deletingError: null,\r\n    };\r\n  }\r\n\r\n\r\n  /** Abmelden */\r\n  deleteParticipation = () => {\r\n    ProjectAPI.getAPI().deleteParticipation(this.props.participation.getID()).then(participation => {\r\n      this.setState({\r\n        deletingInProgress: false,                                          // Ladeanzeige deaktivieren  \r\n        deletingError: null                                                 // Keine Fehlermeldung \r\n      });\r\n      this.props.onClose(this.props.participation);                         // Die übergeordnete Komponente mit dem abgemeldeten Studenten aufrufen\r\n    }).catch(e =>\r\n      this.setState({\r\n        deletingInProgress: false,                                          // Ladeanzeige deaktivieren \r\n        deletingError: e                                                    // Anzeigen der Fehlermeldung \r\n      })\r\n    );\r\n\r\n    // setzen des Ladens auf true\r\n    this.setState({\r\n      deletingInProgress: true,                                           // Ladeanzeige anzeigen\r\n      deletingError: null                                                 // Fehlermeldung deaktivieren\r\n    });\r\n  }\r\n\r\n  /** Auszuführende Anweisung beim Schließen des Dialogs */\r\n  handleClose = () => {\r\n    this.props.onClose(null);\r\n  }\r\n\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes, show } = this.props;\r\n    const { deletingInProgress, deletingError } = this.state;\r\n\r\n    return (\r\n      <div>\r\n      { show ?\r\n        <Dialog open={show} onClose={this.handleClose}>\r\n          <DialogTitle id='StudentSignOut-Title'>Aus Projekt ausschreiben\r\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Möchten Sie sich aus dem Projekt ausschreiben?\r\n            </DialogContentText>\r\n            <LoadingProgress show={deletingInProgress} />\r\n            <ContextErrorMessage error={deletingError} contextErrorMsg={`Sie konnten sich nicht abmelden.`}\r\n              onReload={this.deleteParticipation} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color='secondary'>\r\n              Abbrechen\r\n            </Button>\r\n            <Button variant='contained' onClick={this.deleteParticipation} color='primary'>\r\n              Ausschreiben\r\n            </Button> \r\n          </DialogActions>\r\n        </Dialog>\r\n      : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\nStudentProjectSignOut.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    /** Student welcher für ein Projekt abgemeldet werden soll*/\r\n    project: PropTypes.object.isRequired,\r\n\r\n    /** Wenn true, wird der Dialog gerendert */\r\n     show: PropTypes.bool.isRequired,\r\n\r\n    /** Handler Funktion welche aufgerufen wird, wenn der Dialog geschlossen ist.*/\r\n    onClose: PropTypes.func.isRequired,\r\n  }\r\n  \r\n  export default withStyles(styles)(StudentProjectSignOut);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ProjectAPI  from '../api/ProjectAPI';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport red from '@material-ui/core/colors/red';\r\nimport StudentProjectSignOut from './dialogs/StudentProjectSignOut';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\n\r\n/**  \r\n * Hier wird die Liste aus Studentensicht angezeigt. Studenten sehen alle genehmigten Projekte\r\n * und können sich dafür An- und Abmelden.\r\n */\r\n\r\nclass StudentButtons extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n        participation: props.participation,\r\n        student: null,\r\n        showParticipationDeleteDialog: false,\r\n        loadingInProgress: false,\r\n\r\n    };\r\n  }\r\n\r\n\r\n  getStudent = () => {\r\n    ProjectAPI.getAPI().getStudentbyId(firebase.auth().currentUser.uid)  \r\n        .then (studentBO => {\r\n            this.setState({ student: studentBO });\r\n        })\r\n  }\r\n\r\n  /** Lifecycle-Methode, die aufgerufen wird, wenn die Komponente in das DOM des Browsers eingefügt wird */\r\n  componentDidMount() {\r\n    this.getStudent();\r\n  }\r\n\r\n  /** Handles the onClick event of the delete project button */\r\n  deleteParticipationButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showParticipationDeleteDialog: true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the ProjectDeleteDialog */\r\n  StudentProjectSignOutClosed = (participation) => {\r\n    if (participation) {\r\n      this.props.onParticipationDeleted(participation);\r\n    };\r\n    \r\n    // Das Dialog-Fenster nicht anzeigen\r\n    this.setState({\r\n      showParticipationDeleteDialog: false\r\n    });\r\n  }\r\n\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { loadingInProgress, student, participation, showParticipationDeleteDialog } = this.state;\r\n    \r\n\r\n    return (\r\n      <div className={classes.root}>\r\n\r\n        { student && participation.getStudentID() === student.getID() ?\r\n\r\n        <Button color='primary' onClick={this.deleteParticipationButtonClicked}>\r\n          Abmelden\r\n        </Button>\r\n\r\n        : null }\r\n\r\n                \r\n      <LoadingProgress show={loadingInProgress} />\r\n\r\n      <StudentProjectSignOut show={showParticipationDeleteDialog} participation={participation} onClose={this.StudentProjectSignOutClosed} />\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '90%',\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  font: {\r\n    fontSize: 15,\r\n  },\r\n  validate: {\r\n    width: '100%',\r\n    color: indigo[300],\r\n    fontSize: 10,\r\n  },\r\n  delete: {\r\n    width: '100%',\r\n    color: red[500],\r\n    fontSize: 10,\r\n  },\r\n  replay: {\r\n    color: indigo[500],\r\n  },\r\n  box: {\r\n    width: '100%',\r\n    color: indigo[500],\r\n    borderColor: indigo[500],\r\n    \r\n  }\r\n});\r\n\r\n\r\n/** PropTypes */\r\nStudentButtons.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n\r\n  show: PropTypes.bool.isRequired,\r\n\r\n  student: PropTypes.object.isRequired,\r\n  onParticipationDeleted: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(StudentButtons));","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport { MenuItem, FormControl, InputLabel, Select, Typography, Grid } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ProjectAPI from '../../api/ProjectAPI';\r\nimport ParticipationBO  from '../../api/ParticipationBO';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\n\r\n//Das Fenster um sich als Student in ein Projekt einzuschreiben\r\n\r\n\r\nclass StudentProjectSignIn extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let pid = 0;\r\n\r\n    //Abruf der Variablen aus dem ProjectBO\r\n    if (props.project) {\r\n      pid = props.project.getID();\r\n    }\r\n      \r\n    // Init the state\r\n      this.state = {\r\n          module_id: 0,\r\n          student_id: null,\r\n          project_id: pid,\r\n\r\n          // Ladebalken und Error\r\n          addingInProgress: false,\r\n          addingError: null\r\n\r\n      };\r\n      \r\n      this.baseState = this.state;\r\n  }\r\n\r\n\r\n  getStudent = () => {\r\n    ProjectAPI.getAPI().getStudentbyId(firebase.auth().currentUser.uid)  \r\n        .then (studentBO => {\r\n            this.setState({ student_id: studentBO.getID() });\r\n        })\r\n  }\r\n\r\n  /** Lifecycle-Methode, die aufgerufen wird, wenn die Komponente in das DOM des Browsers eingefügt wird */\r\n  componentDidMount() {\r\n    this.getStudent();\r\n  }\r\n\r\n\r\n  /** Hinzufügen einer Teilnahme für ein Projekt in dem Dialog-Fenster */\r\n  addParticipation = () => {\r\n      let newParticipation = new ParticipationBO( this.state.module_id, this.state.project_id, this.state.student_id, 1 ); \r\n    \r\n      ProjectAPI.getAPI().addParticipation(newParticipation).then(participation => {\r\n      // Backend-Aufruf erfolgreich\r\n      // Leeren des Zustandes des Dialogs für die neue leere Participation\r\n        this.setState(this.baseState);\r\n        this.props.onClose(participation); // das übergeordnete Objekt mit der Teilnahme aus dem Backend aufrufen\r\n      }).catch(e =>\r\n        this.setState({\r\n          addingInProgress: false,    // Ladeanzeige deaktivieren \r\n          addingError: e              // Fehlermeldung anzeigen\r\n        })\r\n      );\r\n\r\n      // setzen des Ladens auf true\r\n      this.setState({\r\n          addingInProgress: true,       // Ladeanzeige anzeigen\r\n          addingError: null             // Fehlermeldung deaktivieren\r\n      }\r\n      );\r\n    }\r\n\r\n  /** Auszuführende Anweisung beim Schließen des Dialogs */\r\n  handleClose = () => {\r\n    // Zurücksetzen des Zustands\r\n    this.setState(this.baseState);\r\n    this.props.onClose(null);\r\n  }\r\n\r\n  /**  Handlerfunktion für Wertänderungen und deren Validierung in Formulartextfeldern */\r\n  textFieldValueChange = (event) => {\r\n    const value = event.target.value;\r\n\r\n    let error = false;\r\n    if (value.trim().length === 0) {\r\n      error = true;\r\n    }\r\n\r\n    this.setState({\r\n      [event.target.id]: event.target.value,\r\n      [event.target.id + 'ValidationFailed']: error,\r\n      [event.target.id + 'Edited']: true\r\n    });\r\n  } \r\n\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n        module_id: event.target.value\r\n    });}\r\n\r\n\r\n\r\n/** Rendern der Komponente */\r\nrender() {\r\n  const { classes, show, project } = this.props;\r\n  const { module_id } = this.state;\r\n\r\n  const { addingInProgress, addingError } = this.state;\r\n\r\n\r\n  let title = 'In das Projekt einschreiben';\r\n  let header = 'Füllen Sie das Formular aus';\r\n\r\n  return (\r\n    show && project ?\r\n      <Dialog open={show} onClose={this.handleClose} maxWidth='xs'>\r\n        <DialogTitle id='form-dialog-title'>{title}\r\n          <IconButton className={classes.closeButton} onClick={this.handleClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {header}\r\n          </DialogContentText>\r\n          <form className={classes.root} noValidate autoComplete='off'>\r\n          \r\n          { project.getAssignmentID() === 1 ?\r\n          <Grid>\r\n            <Typography>Modul</Typography>\r\n              <FormControl className={classes.formControl}>\r\n                  <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                  <Select\r\n                    value={module_id}\r\n                    onChange={this.handleChange}\r\n                  > \r\n                    <MenuItem value={1}>338005</MenuItem>\r\n                    <MenuItem value={2}>338006</MenuItem>\r\n                    <MenuItem value={3}>338007</MenuItem>\r\n                    <MenuItem value={4}>338008</MenuItem>\r\n                    <MenuItem value={5}>338009</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            : project.getAssignmentID() === 2 ?\r\n            <Grid>\r\n            <Typography>Modul</Typography>\r\n              <FormControl className={classes.formControl}>\r\n                  <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                  <Select\r\n                    value={module_id}\r\n                    onChange={this.handleChange}\r\n                  > \r\n                    <MenuItem value={6}>338010</MenuItem>\r\n                    <MenuItem value={7}>338011</MenuItem>\r\n                    <MenuItem value={8}>338012</MenuItem>\r\n                    <MenuItem value={9}>338013</MenuItem>\r\n                    <MenuItem value={10}>338014</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              : project.getAssignmentID() === 3 ?\r\n              <Grid>\r\n              <Typography>Modul</Typography>\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                    <Select\r\n                      value={module_id}\r\n                      onChange={this.handleChange}\r\n                    > \r\n                      <MenuItem value={11}>338015</MenuItem>\r\n                      <MenuItem value={12}>338016</MenuItem>\r\n                      <MenuItem value={13}>338017</MenuItem>\r\n                      <MenuItem value={14}>338018</MenuItem>\r\n                      <MenuItem value={15}>338019</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                : project.getAssignmentID() === 4 ?\r\n                <Grid>\r\n                <Typography>Modul</Typography>\r\n                  <FormControl className={classes.formControl}>\r\n                      <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                      <Select\r\n                        value={module_id}\r\n                        onChange={this.handleChange}\r\n                      > \r\n                        <MenuItem value={16}>338020</MenuItem>\r\n                        <MenuItem value={17}>338021</MenuItem>\r\n                        <MenuItem value={18}>338022</MenuItem>\r\n                        <MenuItem value={19}>338023</MenuItem>\r\n                        <MenuItem value={20}>338024</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  : project.getAssignmentID() === 5 ?\r\n                  <Grid>\r\n                  <Typography>Modul</Typography>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                        <Select\r\n                          value={module_id}\r\n                          onChange={this.handleChange}\r\n                        > \r\n                          <MenuItem value={21}>338025</MenuItem>\r\n                          <MenuItem value={22}>338026</MenuItem>\r\n                          <MenuItem value={23}>338027</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    : project.getAssignmentID() === 6 ?\r\n                    <Grid>\r\n                    <Typography>Modul</Typography>\r\n                      <FormControl className={classes.formControl}>\r\n                          <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                          <Select\r\n                            value={module_id}\r\n                            onChange={this.handleChange}\r\n                          > \r\n                            <MenuItem value={24}>338028</MenuItem>\r\n                            <MenuItem value={25}>338029</MenuItem>\r\n                            <MenuItem value={26}>338030</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                      : project.getAssignmentID() === 7 ?\r\n                      <Grid>\r\n                      <Typography>Modul</Typography>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                            <Select\r\n                              value={module_id}\r\n                              onChange={this.handleChange}\r\n                            > \r\n                              <MenuItem value={27}>338031</MenuItem>\r\n                              <MenuItem value={28}>338032</MenuItem>\r\n                              <MenuItem value={29}>338033</MenuItem>\r\n                            </Select>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        : project.getAssignmentID() === 8 ?\r\n                        <Grid>\r\n                        <Typography>Modul</Typography>\r\n                          <FormControl className={classes.formControl}>\r\n                              <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                              <Select\r\n                                value={module_id}\r\n                                onChange={this.handleChange}\r\n                              > \r\n                                <MenuItem value={30}>338034</MenuItem>\r\n                                <MenuItem value={31}>338035</MenuItem>\r\n                                <MenuItem value={32}>338036</MenuItem>\r\n                              </Select>\r\n                            </FormControl>\r\n                          </Grid>\r\n                          : project.getAssignmentID() === 9 ?\r\n                          <Grid>\r\n                          <Typography>Modul</Typography>\r\n                            <FormControl className={classes.formControl}>\r\n                                <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                                <Select\r\n                                  value={module_id}\r\n                                  onChange={this.handleChange}\r\n                                > \r\n                                  <MenuItem value={33}>338037</MenuItem>\r\n                                  <MenuItem value={34}>338038</MenuItem>\r\n                                  <MenuItem value={35}>338039</MenuItem>\r\n                                </Select>\r\n                              </FormControl>\r\n                            </Grid>\r\n                            : project.getAssignmentID() === 10 ?\r\n                            <Grid>\r\n                            <Typography>Modul</Typography>\r\n                              <FormControl className={classes.formControl}>\r\n                                  <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                                  <Select\r\n                                    value={module_id}\r\n                                    onChange={this.handleChange}\r\n                                  > \r\n                                    <MenuItem value={36}>338040</MenuItem>\r\n                                    <MenuItem value={37}>338041</MenuItem>\r\n                                    <MenuItem value={38}>338042</MenuItem>\r\n                                  </Select>\r\n                                </FormControl>\r\n                              </Grid>\r\n                              : project.getAssignmentID() === 11 ?\r\n                              <Grid>\r\n                              <Typography>Modul</Typography>\r\n                                <FormControl className={classes.formControl}>\r\n                                    <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                                    <Select\r\n                                      value={module_id}\r\n                                      onChange={this.handleChange}\r\n                                    > \r\n                                      <MenuItem value={39}>338043</MenuItem>\r\n                                      <MenuItem value={40}>338044</MenuItem>\r\n                                      <MenuItem value={41}>338045</MenuItem>\r\n                                      <MenuItem value={42}>338046</MenuItem>\r\n                                    </Select>\r\n                                  </FormControl>\r\n                                </Grid>\r\n                                : null }\r\n          </form>\r\n\r\n          <LoadingProgress show={addingInProgress} />\r\n          <ContextErrorMessage error={addingError} contextErrorMsg={`Sie konnten sich nicht einschreiben.`} onReload={this.addParticipation} />\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={this.handleClose} color='secondary'>\r\n            Abbrechen\r\n          </Button>\r\n\r\n          <Button variant='contained' onClick={this.addParticipation} color='primary'>\r\n            Einschreiben\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      : null\r\n  );\r\n}\r\n}\r\n  \r\n\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 300,\r\n  },\r\n});\r\n\r\n/** PropTypes */\r\nStudentProjectSignIn.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  show: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(StudentProjectSignIn);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\r\nimport { Button, List, ListItem, ButtonGroup, Box } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ProjectAPI  from '../api/ProjectAPI';\r\nimport StudentButtons from './StudentButtons';\r\nimport StudentProjectSignIn from './dialogs/StudentProjectSignIn';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\n\r\n\r\nclass StudentProjectListEntry extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      // Init the state\r\n      this.state = {\r\n        project: props.project,\r\n        participations: [],\r\n        showStudentProjectSignin: false,\r\n        student: null,\r\n        studentParticipations: [],\r\n        disabled: true,\r\n        assignment: null,\r\n        projecttype: null\r\n\r\n      };\r\n    }\r\n\r\n    /** Handlerfunktion die aufgerufen wird, wenn Bewertung abschließen geklickt wurde */\r\n    expansionPanelStateChanged = () => {\r\n    this.props.onExpandedStateChange(this.props.project);\r\n  }\r\n\r\n\r\n  getAssignmentForProject = () => {\r\n    ProjectAPI.getAPI().getAssignmentbyId(this.props.project.getAssignmentID())\r\n        .then (assignmentBO => {\r\n            this.setState({ assignment: assignmentBO });\r\n        })\r\n    }\r\n\r\n  getProjecttypeForProject = () => {\r\n    ProjectAPI.getAPI().getProjecttypebyId(this.props.project.getProjectTypeID())\r\n          .then (ProjecttypeBO => {\r\n              this.setState({ projecttype: ProjecttypeBO });\r\n          })\r\n      }\r\n  \r\n\r\n  getStudent = () => {\r\n    ProjectAPI.getAPI().getStudentbyId(firebase.auth().currentUser.uid)  \r\n        .then (studentBO => {\r\n          return (this.setState({ student: studentBO }),\r\n          this.getParticipationForStudent())\r\n        })\r\n  }\r\n\r\n  /** Lifecycle-Methode, die aufgerufen wird, wenn die Komponente in das DOM des Browsers eingefügt wird */\r\n  componentDidMount() {\r\n    this.getStudent();\r\n    this.getParticipations();\r\n    this.getAssignmentForProject();\r\n    this.getProjecttypeForProject();\r\n  }\r\n\r\n  getParticipationForStudent = () => {\r\n    ProjectAPI.getAPI().getParticipationForStudent(this.state.student.getID())\r\n        .then (participationBO => {\r\n            this.setState({ studentParticipations: participationBO });\r\n        })\r\n    }\r\n\r\n\r\n  getParticipations = () => {\r\n    ProjectAPI.getAPI().getParticipationForProject(this.state.project.getID())\r\n        .then (participationBOs => {\r\n            this.setState({ participations: participationBOs });\r\n        })\r\n    }\r\n\r\n\r\n  participationDeleted = participant => {\r\n    const newParticipationList = this.state.participations.filter(participationFromState => participationFromState.getID() !== participant.getID());\r\n    return (this.setState({\r\n      participations: newParticipationList,\r\n      disabled: true,\r\n    }), this.getStudent())\r\n  }\r\n\r\n\r\n  /** Handlerfunktion zum öffnen des Dialogfensters zur Anmeldung in einem Projekt  */\r\n  addSignInClicked = event => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showStudentProjectSignin: true\r\n    });\r\n  }\r\n\r\n  /** Handlerfunktion zum Schließen des Dialogfensters  */\r\n  SignInClosed = participation => {\r\n    if (participation) {\r\n      return (this.setState({\r\n        showStudentProjectSignin: false,\r\n        disabled: false,\r\n      }), this.getParticipations())\r\n    } else {\r\n      this.setState({\r\n        showStudentProjectSignin: false\r\n      });\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    const { project, participations, showStudentProjectSignin, studentParticipations, assignment, projecttype } = this.state;\r\n   \r\n    const entries = studentParticipations.map(studentParticipation => studentParticipation.getProjectID())\r\n \r\n\r\n    return (\r\n      <div>\r\n      { assignment && project && projecttype && project.getStateID() === 3 ?\r\n      <Grid>\r\n      <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={`project${project.getID()}projectpanel-header`} //** Wozu wird hier die Project ID benötigt*/\r\n          >\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='body1' className={classes.heading}>{project.getName()} {/** Angabe des Dozenten (UserBO?)*/}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <List>\r\n            <ListItem>Projektbeschreibung: {project.getProjectDescription()} </ListItem>\r\n            <ListItem>Projektkategorie: {projecttype.getName()} </ListItem>\r\n            <ListItem>Projektart: {assignment.getName()} </ListItem>\r\n            <ListItem>Betreuende Dozenten: {project.getAdditionalLecturer()} </ListItem>  \r\n            <ListItem>Externe Partner: {project.getPartners()} </ListItem>\r\n            <Box p={1}></Box>\r\n            <ListItem className ={classes.font}>Raum- und Ressourenplanung</ListItem>\r\n            <ListItem>Wöchentlicher Kurs: {project.getWeekly() === \"1\" ? 'Ja' : 'Nein'} </ListItem>\r\n            <ListItem>Anzahl der Blocktage vor der Vorlesungszeit: {project.getBDaysPreSchedule()} </ListItem>\r\n            <ListItem>Anzahl der Blocktage in der Prüfungszeit: {project.getBDaysFinale()} </ListItem>            \r\n            <ListItem>Anzahl der Blocktage in der Vorlesungszeit (Samstage): {project.getBDaysSaturdays()} </ListItem>\r\n            <ListItem>Raum: {project.getPreferredRoom()} </ListItem> \r\n            <ListItem>\r\n            { \r\n                participations.map(participation => <StudentButtons key={participation.getID()} \r\n                participation={participation} \r\n                show={this.props.show}  \r\n                onParticipationDeleted={this.participationDeleted}/>)\r\n              }\r\n              \r\n            </ListItem> \r\n            <ListItem>\r\n              { !entries.includes(project.getID()) && this.state.disabled ?\r\n              <Grid item>\r\n               <ButtonGroup variant='text' size='small'>\r\n                <Button color='primary' startIcon={<AddIcon />} onClick={this.addSignInClicked}>\r\n                  Anmelden\r\n                </Button>\r\n               </ButtonGroup>\r\n              </Grid>\r\n              \r\n              : null }\r\n\r\n            </ListItem> \r\n          </List>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n        </Grid>\r\n      : null }\r\n      <StudentProjectSignIn show={showStudentProjectSignin} project={project} onClose={this.SignInClosed} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: 20,\r\n      color: indigo[600],\r\n      fontFamily: '\"Segoe UI\"',\r\n    },\r\n    font: {\r\n      fontSize: 16,\r\n      color: indigo[400],\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\nStudentProjectListEntry.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    expandedState: PropTypes.bool.isRequired,\r\n    onExpandedStateChange: PropTypes.func.isRequired\r\n    }\r\n  \r\nexport default withStyles(styles)(StudentProjectListEntry);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, List, ListItem } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ProjectAPI  from '../api/ProjectAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport StudentProjectListEntry from './StudentProjectListEntry';\r\n\r\n/**  \r\n * Liste aller genehmigten Projkete eines Studentens\r\n */\r\n\r\nclass StudentProjectList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let expandedID = null;\r\n\r\n    if (this.props.location.expandProject) {\r\n      expandedID = this.props.location.expandProject.getID();\r\n    }\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n        projects: [],\r\n        error: null,\r\n        loadingInProgress: false,\r\n        expandedProjectID: expandedID,\r\n    };\r\n  }\r\n\r\n  onExpandedStateChange = project => {\r\n    //Expandierenden Projekteintrag standardmäßig auf Null setzen\r\n    let newID = null;\r\n\r\n    //Wenn derselbe Projekteintrag angeklickt wird, wird er zugeklappt, andernfalls wird ein neuer Eintrag expandiert\r\n    if (project.getID() !== this.state.expandedProjectID) {\r\n      newID = project.getID();\r\n    }\r\n    this.setState({\r\n      expandedProjectID: newID,\r\n    });\r\n  }\r\n\r\n  getProjects = () => {\r\n    ProjectAPI.getAPI().getProjects()\r\n      .then(projectBOs =>\r\n        this.setState({              \r\n          projects: projectBOs,\r\n          loadingInProgress: false,   \r\n          error: null\r\n        })).catch(e =>\r\n          this.setState({            \r\n            projects: [],\r\n            loadingInProgress: false, \r\n            error: e\r\n          })\r\n        );\r\n\r\n    // setzen des Ladens auf true\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      error: null\r\n    });\r\n  }\r\n\r\n  /** Lifecycle-Methode, die aufgerufen wird, wenn die Komponente in das DOM des Browsers eingefügt wird */\r\n  componentDidMount() {\r\n    this.getProjects();\r\n  }\r\n\r\n\r\n  /** Rendern der Komponente*/\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { projects, expandedProjectID, loadingInProgress, error } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <List className={classes.projectList}>\r\n        { \r\n        \r\n          projects.map(project => <StudentProjectListEntry key={project.getID()} project={project} \r\n          show={this.props.show}  onExpandedStateChange={this.onExpandedStateChange}/>)\r\n        }\r\n\r\n          <ListItem>\r\n            <LoadingProgress show={loadingInProgress} />\r\n            <ContextErrorMessage error={error} contextErrorMsg={`The list of projects could not be loaded.`} onReload={this.getProjects} />\r\n          </ListItem>\r\n\r\n        </List>\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '90%',\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(10),\r\n  },\r\n  customerFilter: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(1),\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nStudentProjectList.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n\r\n  show: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(StudentProjectList));","//Wenn ein Projekt genehmigt wurde, kann der Dozent (bei genügend Anmeldungen) das Projekt in Bewertung senden.\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProjectAPI from '../../api/ProjectAPI';\r\nimport ProjectBO from '../../api/ProjectBO';\r\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, ListItemText } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\n\r\n\r\nclass ProjectInEvaluationForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //Typzuweisung der Variablen\r\n    let n = \"\";\r\n    let u = 0;\r\n    let p = 0;\r\n    let s = 0;\r\n    let sid = 0;\r\n    let aid = 0;\r\n    let pd = \"\";\r\n    let ps = \"\";\r\n    let c = 0;\r\n    let pr = \"\";\r\n    let b = \"\";\r\n    let bf = \"\";\r\n    let bs = \"\";\r\n    let pb = \"\";\r\n    let a = \"\";\r\n    let w = \"\";\r\n\r\n    if (props.project) {\r\n    //Abruf der Variablen aus dem ProjectBO\r\n      n = props.project.getName();\r\n      u = props.project.getUserID();\r\n      p = props.project.getProjectTypeID();\r\n      s = props.project.getStateID();\r\n      sid = props.project.getSemesterID();\r\n      aid = props.project.getAssignmentID();\r\n      pd = props.project.getProjectDescription();\r\n      ps = props.project.getPartners();\r\n      c = props.project.getCapacity();\r\n      pr = props.project.getPreferredBDays ();\r\n      b = props.project.getBDaysPreSchedule();\r\n      bf = props.project.getBDaysFinale();\r\n      bs = props.project.getBDaysSaturdays();\r\n      pd = props.project.getPreferredBDays();\r\n      a = props.project.getAdditionalLecturer();\r\n      w = props.project.getWeekly();\r\n\r\n    }\r\n  \r\n\r\n    // Init the state\r\n    this.state = {\r\n      name: n,\r\n      user_id: u,\r\n      project_type_id: p,\r\n      state_id: s,\r\n      semester_id: sid,\r\n      assignment_id: aid,\r\n      project_description: pd,\r\n      partners: ps,\r\n      capacity: c,\r\n      preferred_room: pr,\r\n      b_days_pre_schedule: b,\r\n      b_days_finale: bf,\r\n      b_days_saturdays: bs,\r\n      preferred_b_days: pb,\r\n      additional_lecturer: a,\r\n      weekly:w,\r\n\r\n      project: this.props.project,\r\n\r\n\r\n      // Ladebalken und Error\r\n      updatingInProgress: false,\r\n      updatingError: null\r\n\r\n    };\r\n    //der State wird als Basiszustand gespeichert\r\n    this.baseState = this.state;\r\n  }\r\n\r\n/** Setzen des Projekts auf in Bewertung*/\r\nsendProjectInEvaluation= () => {\r\n  // Duplizieren des ProjectBOs im Falle eines Fehlerhaften API-Calls\r\n  let updatedState = Object.assign(new ProjectBO(), this.props.project);\r\n  // setzen der neuen Attribute vom Dialog\r\n  updatedState.setName(this.state.name);\r\n  updatedState.setUserID(this.state.user_id);\r\n  updatedState.setProjectTypeID(this.state.project_type_id);\r\n  updatedState.setStateID(4);\r\n  updatedState.setSemesterID(this.state.semester_id);\r\n  updatedState.setAssignmentID(this.state.assignment_id);\r\n  updatedState.setProjectDescription(this.state.project_description);\r\n  updatedState.setPartners(this.state.partners);\r\n  updatedState.setCapacity(this.state.capacity);\r\n  updatedState.setPreferredBDays(this.state.preferred_b_days);\r\n  updatedState.setBDaysPreSchedule(this.state.b_days_pre_schedule);\r\n  updatedState.setBDaysFinale(this.state.b_days_finale);\r\n  updatedState.setBDaysSaturdays(this.state.b_days_saturdays);\r\n  updatedState.setPreferredBDays(this.state.preferred_b_days);\r\n  updatedState.setAdditionalLecturer(this.state.additional_lecturer);\r\n  updatedState.setWeekly(this.state.weekly);\r\n\r\n  ProjectAPI.getAPI().updateProject(updatedState).then(project => {\r\n    this.setState({\r\n      updatingInProgress: false,                                                          // Ladeanzeige deaktivieren  \r\n      updatingError: null                                                                 // Keine Fehlermeldung\r\n    });\r\n                                                                                          // Den neuen Zustand als Basiszustand beibehalten\r\n    this.baseState.name = this.state.name;\r\n    this.baseState.user_id = this.state.user_id;\r\n    this.baseState.project_type_id = this.state.project_type_id;\r\n    this.baseState.state_id = this.state.state_id;\r\n    this.baseState.semester_id = this.state.semester_id;\r\n    this.baseState.assignment_id = this.state.assignment_id;\r\n    this.baseState.project_description = this.state.project_description;\r\n    this.baseState.partners = this.state.partners;\r\n    this.baseState.capacity = this.state.capacity;\r\n    this.baseState.preferred_b_days = this.state.preferred_b_days;\r\n    this.baseState.b_days_pre_schedule = this.state.b_days_pre_schedule;\r\n    this.baseState.b_days_finale = this.state.b_days_finale;\r\n    this.baseState.b_days_saturdays = this.state.b_days_saturdays;\r\n    this.baseState.preferred_b_days = this.state.preferred_b_days;\r\n    this.baseState.additional_lecturer = this.state.additional_lecturer;\r\n    this.baseState.weekly = this.state.weekly;\r\n    \r\n    this.props.onClose(updatedState);                                                     // Die übergeordnete Komponente mit dem State aufrufen\r\n  }).catch(e =>\r\n    this.setState({\r\n      updatingInProgress: false,                                                          // Ladeanzeige deaktivieren \r\n      updatingError: e                                                                    //Anzeigen der Fehlermeldung\r\n    })\r\n  );\r\n\r\n  // setzen des Ladens auf true\r\n  this.setState({\r\n    updatingInProgress: true,                                                           // Ladeanzeige anzeigen\r\n    updatingError: null                                                                 // Fehlermeldung deaktivieren\r\n    });\r\n  } \r\n\r\n\r\n  /** Auszuführende Anweisung beim Schließen des Dialogs */\r\n  handleClose = () => {\r\n    this.props.onClose(null);\r\n  }\r\n\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes, project, show } = this.props;\r\n    const { updatingError, updatingInProgress } = this.state;\r\n\r\n    return ( \r\n       show ? \r\n        <Dialog open={show} onClose={this.handleClose}>\r\n          <DialogTitle id='ProjectInEvaluation-Title'>Projekt in Bewertung senden\r\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Soll das folgende Projekt in Bewertung geschickt werden: '{project.getName()}' (ID: {project.getID()})?\r\n            </DialogContentText>\r\n            <LoadingProgress show={updatingInProgress} />\r\n            <ContextErrorMessage error={updatingError} contextErrorMsg={`Das Projekt ${project.getID()} konnte nicht abgelehnt werden.`} onReload={this.sendProjectInEvaluation} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color='secondary'>\r\n              Abbrechen\r\n            </Button>\r\n            <Button variant='contained' onClick={this.sendProjectInEvaluation} color='primary'>\r\n              Bestätigen\r\n            </Button> \r\n          </DialogActions>\r\n        </Dialog> \r\n        :null\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\n  ProjectInEvaluationForm.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n\r\n    /** Projekt welches für den Zustand geändert werden soll*/\r\n    project: PropTypes.object.isRequired,\r\n\r\n    /** Wenn true, wird der Dialog gerendert */\r\n    show: PropTypes.bool.isRequired,\r\n\r\n    /** Handler Funktion welche aufgerufen wird, wenn der Dialog geschlossen ist.*/\r\n    onClose: PropTypes.func.isRequired,\r\n  }\r\n  \r\n  export default withStyles(styles)(ProjectInEvaluationForm);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProjectAPI  from '../../api/ProjectAPI';\r\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\n\r\n//Entfernen eines Projektes aus Adminsicht\r\n\r\nclass ProjectDeleteDialog extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init the state\r\n    this.state = {\r\n      deletingInProgress: false,\r\n      deletingError: null\r\n    };\r\n  }\r\n\r\n  /** Löschen des Projekts */\r\n  deleteProject = () => {\r\n    ProjectAPI.getAPI().deleteProject(this.props.project.getID()).then(project => {\r\n      this.setState({\r\n        deletingInProgress: false,                      //Ladeanzeige deaktivieren  \r\n        deletingError: null                             //keine Fehlermeldung\r\n      });\r\n      this.props.onClose(this.props.project);           // Die übergeordnete Komponente mit dem gelöschten Project aufrufen\r\n    }).catch(e =>\r\n      this.setState({\r\n        deletingInProgress: false,                      //Ladeanzeige deaktivieren \r\n        deletingError: e                                //Anzeigen der Fehlermeldung\r\n      })\r\n    );\r\n\r\n    // setzen des Ladens auf true\r\n    this.setState({\r\n      deletingInProgress: true,                       //Ladeanzeige anzeigen\r\n      deletingError: null                             //Fehlermeldung deaktivieren\r\n    });\r\n  }\r\n\r\n  /** Auszuführende Anweisung beim Schließen des Dialogs */\r\n  handleClose = () => {\r\n    this.props.onClose(null);\r\n  }\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes, show, project } = this.props;\r\n    const { deletingInProgress, deletingError } = this.state;\r\n\r\n    return (\r\n      <div>\r\n      { show ?\r\n        <Dialog open={show} onClose={this.handleClose}>\r\n          <DialogTitle id='delete-dialog-title'>Löschen des Projektes\r\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Sind Sie sicher, dass Sie das Projekt '{project.getName()} ' (ID: {project.getID()}) löschen möchten?\r\n            </DialogContentText>\r\n            <LoadingProgress show={deletingInProgress} />\r\n            <ContextErrorMessage error={deletingError} contextErrorMsg={`Das Projekt '${project.getName()} '(ID: ${project.getID()}) konnte nicht gelöscht werden.`}\r\n              onReload={this.deleteProject} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color='secondary'>\r\n              Abbrechen\r\n            </Button>\r\n            <Button variant='contained' onClick={this.deleteProject} color='primary'>\r\n              Löschen\r\n            </Button> \r\n          </DialogActions>\r\n        </Dialog>\r\n      : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nProjectDeleteDialog.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n\r\n//Ein Projekt, welches gelöscht werden soll\r\n  project: PropTypes.object.isRequired,\r\n\r\n//Anzeigen des Dialog-Fensters\r\n  show: PropTypes.bool.isRequired,\r\n\r\n//Schließen des Dialog-Fensters\r\n  onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(ProjectDeleteDialog);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid, Button } from '@material-ui/core';\r\nimport { List, ListItem, ButtonGroup, Box } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ProjectAPI  from '../api/ProjectAPI';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport ProjectInEvaluationForm from './dialogs/ProjectInEvaluationForm';\r\nimport ProjectDeleteDialog from './dialogs/ProjectDeleteDialog';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport red from '@material-ui/core/colors/red';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\n\r\n\r\n/**  \r\n * Hier wird ein Projekt des angemeldeten Dozenten mit den zugehörigen Projektinhalten angezeigt.\r\n */\r\n\r\n\r\nclass LecturerProjectListEntry extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init the state\r\n    this.state = {\r\n      project: props.project,\r\n      showProjectForm: false,\r\n      showProjectInEvaluation: false,\r\n      showProjectDeleteDialog: false,\r\n      disabled: true,\r\n      error: null,\r\n      assignment: null,\r\n      projecttype: null\r\n    };\r\n  }\r\n\r\n  /** Handlerfunktion für Veränderungen des Aufklapp-Panels */\r\n  expansionPanelStateChanged = () => {\r\n    this.props.onExpandedStateChange(this.props.project);\r\n  }\r\n\r\n\r\n  // Projekt in Bewertung senden\r\n  /**Handlerfunktion die aufgerufen wird, wenn der \"In Bewertung senden\" Knopf gedrückt wurde*/\r\n  sendProjectInEvaluationClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showProjectInEvaluation: true,\r\n    });\r\n  }\r\n\r\n\r\n  /** Handlerfunktion die aufgerufen wird, wenn das \"Projekt in Bewertung senden\" Fenster geschlossen werden soll */\r\n  ProjectInEvaluationFormClosed = (project) => {\r\n    if (project) {\r\n      return (this.setState ({\r\n        project: project,\r\n        showProjectInEvaluation: false,\r\n        disabled: false,\r\n      }), this.getStatebyID())\r\n    } else {\r\n      this.setState({\r\n        showProjectInEvaluation: false,\r\n      });\r\n    }\r\n    }\r\n\r\n\r\n  getAssignmentForProject = () => {\r\n    ProjectAPI.getAPI().getAssignmentbyId(this.props.project.getAssignmentID())\r\n      .then (assignmentBO => {\r\n          this.setState({ assignment: assignmentBO });\r\n      }).catch(e =>\r\n        this.setState({ \r\n          error: e\r\n      })\r\n      )\r\n    }\r\n\r\n  getProjecttypeForProject = () => {\r\n    ProjectAPI.getAPI().getProjecttypebyId(this.props.project.getProjectTypeID())\r\n          .then (ProjecttypeBO => {\r\n              this.setState({ projecttype: ProjecttypeBO });\r\n          })\r\n      }\r\n  \r\n\r\n  getLecturer = () => {\r\n    ProjectAPI.getAPI().getUserByGoogleId(firebase.auth().currentUser.uid)   \r\n      .then (UserBO => {\r\n          this.setState({ user: UserBO });\r\n      })\r\n  }\r\n\r\n  getStatebyID = () => {\r\n    ProjectAPI.getAPI().getStatebyId(this.state.project.getStateID())   \r\n      .then (projectBO => {\r\n          this.setState({ state: projectBO });\r\n      }).catch(e =>\r\n        this.setState({ \r\n          error: e\r\n      })\r\n      )\r\n  }\r\n\r\n  /** Handlerfunktion wenn Projekt löschen geklickt wird */\r\n  deleteProjectButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showProjectDeleteDialog: true\r\n    });\r\n  }\r\n\r\n  /** Handlerfunktion zum schließen der deleteForm nach Löschen/ Abbrechen oder Schließen */\r\n  deleteProjectDialogClosed = (project) => {\r\n    if (project) {\r\n      this.props.onProjectDeleted(project);\r\n    };\r\n\r\n    // Das Dialog-Fenster nicht anzeigen\r\n    this.setState({\r\n      showProjectDeleteDialog: false\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /** Lifecycle-Methode, die aufgerufen wird, wenn die Komponente in das DOM des Browsers eingefügt wird */\r\n  componentDidMount() {\r\n    this.getStatebyID();\r\n    this.getLecturer();\r\n    this.getAssignmentForProject();\r\n    this.getProjecttypeForProject();\r\n  }\r\n\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    const { project, state, user, showProjectInEvaluation, assignment, projecttype, showProjectDeleteDialog } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        { assignment && state && user && projecttype && project.getUserID()=== user.getID()? \r\n      \r\n      <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={`project${project.getID()}projectpanel-header`}\r\n          >\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='body1' className={classes.heading}>{project.getName()}\r\n                </Typography>\r\n              </Grid>\r\n              { state.getID() === 1 ?\r\n              <Grid item>\r\n                <ButtonGroup variant='text' size='small'>\r\n                <Button className={classes.root} startIcon={<DeleteIcon />}\r\n                onClick = {this.deleteProjectButtonClicked} />\r\n                </ButtonGroup>\r\n              </Grid>\r\n              : null }\r\n              <Grid item xs />\r\n              <Grid item>\r\n                <Typography variant='body2' color={'textSecondary'}>{state.getName()}</Typography> \r\n              </Grid>\r\n            </Grid>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <List>\r\n            <ListItem>Projektbeschreibung: {project.getProjectDescription()} </ListItem>\r\n            <ListItem>Projektkategorie: {projecttype.getName()} </ListItem>\r\n            <ListItem>Projektart: {assignment.getName()} </ListItem>\r\n            <ListItem>Betreuende Dozenten: {project.getAdditionalLecturer()} </ListItem>  \r\n            <ListItem>Externe Partner: {project.getPartners()} </ListItem>\r\n            <ListItem>Kapazität: {project.getCapacity()} </ListItem>\r\n            <Box p={1}></Box>\r\n            <ListItem className ={classes.font}>Raum- und Ressourenplanung</ListItem>\r\n            <ListItem>Wöchentlicher Kurs: {project.getWeekly() === \"1\" ? 'Ja' : 'Nein'} </ListItem>\r\n            <ListItem>Anzahl der Blocktage vor der Vorlesungszeit: {project.getBDaysPreSchedule()} </ListItem>\r\n            <ListItem>Anzahl der Blocktage in der Prüfungszeit: {project.getBDaysFinale()} </ListItem>            \r\n            <ListItem>Anzahl der Blocktage in der Vorlesungszeit (Samstage): {project.getBDaysSaturdays()} </ListItem>\r\n            <ListItem>Raum: {project.getPreferredRoom()} </ListItem> \r\n\r\n            { this.state.disabled && project.getStateID() === 3 ? \r\n\r\n            <ListItem>\r\n                <Button variant='outlined' color='primary' startIcon={<SendIcon />} onClick = {this.sendProjectInEvaluationClicked} >\r\n                  In Bewertung senden\r\n                </Button>\r\n            </ListItem> \r\n\r\n            : null } \r\n\r\n          </List>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n        \r\n      :null }\r\n      <ProjectInEvaluationForm show={showProjectInEvaluation} project={project} onClose={this.ProjectInEvaluationFormClosed} />\r\n      <ProjectDeleteDialog show={showProjectDeleteDialog} project={project} onClose={this.deleteProjectDialogClosed} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      color: red[500],\r\n    },\r\n    heading: {\r\n      fontSize: 20,\r\n      color: indigo[600],\r\n      fontFamily: '\"Segoe UI\"',\r\n    },\r\n  });\r\n  \r\n  /** PropTypes */\r\nLecturerProjectListEntry.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    expandedState: PropTypes.bool.isRequired,\r\n    onExpandedStateChange: PropTypes.func.isRequired\r\n    }\r\n  \r\nexport default withStyles(styles)(LecturerProjectListEntry);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProjectAPI  from '../../api/ProjectAPI';\r\nimport ProjectBO  from '../../api/ProjectBO';\r\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField } from '@material-ui/core';\r\nimport { MenuItem, FormControl, InputLabel, Select, Typography, Grid, Box} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\n\r\n/**\r\n * Die ProjectForm erlaubt es Dozenten, ein neues Projekt anzulegen.\r\n * Nach Anlegend es Projektes erhält das Projekt den automatisch generierten \r\n * Anfangszustand neu (Projekt ist ein Automat).\r\n * \r\n * Daraufhin muss der Dozent warten, bis der Admin das Projekt bewertet (genehmigen / ablehnen)\r\n * \r\n * Wenn das Projekt genehmigt wird, wird dem Studenten das neue Projekt in der Studentensicht \r\n * angezeigt und er hat die Möglichkeit, sich dafür anzumelden. Wenn sich Studenten anmelden, hat \r\n * das Projekt den Zustand \"in Bewertung\".\r\n * \r\n * Wenn hingegen das Projekt abgelehnt wird, wird das Projekt nicht weiter angezeigt.\r\n * Das Projekt wird dabei aber nicht gelöscht, sondern besteht weiterhin mit dem Zustand \"abgelehnt\".\r\n * Es sind dann keine weiteren Interaktionen mehr mit dem Projekt möglich. Änderungen sind im Anschluss nicht mehr möglich.\r\n * \r\n */\r\n\r\nclass ProjectForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init the state\r\n    this.state = {\r\n      //Projekt spezifische Attribute\r\n      projectName: '',\r\n      projectNameValidationFailed: false,\r\n      projectNameEdited: false,\r\n\r\n      userID: null,\r\n\r\n      projectTypeID: 0,\r\n\r\n      stateID: 1,\r\n\r\n      semester_id: null,\r\n\r\n\r\n      assignmentID: 0,\r\n\r\n      projectDescription: '',\r\n      projectDescriptionValidationFailed: false,\r\n      projectDescriptionEdited: false,\r\n\r\n      partners: '',\r\n\r\n      capacity: 20,\r\n\r\n      preferredRoom: '',\r\n\r\n      bDaysPreSchedule: '',\r\n      \r\n      bDaysFinale: '',\r\n      \r\n      bDaysSaturdays: '',\r\n      \r\n      preferredBDays: '',\r\n      \r\n      additionalLecturer: '',\r\n\r\n      weekly: null,\r\n      weeklyEdited: false,\r\n      \r\n\r\n      // Ladebalken und Error\r\n      addingInProgress: false,\r\n      addingError: null\r\n    };\r\n    \r\n    // Beim Schließen des Dialogs soll der Anfangszustand wieder hergestellt werden\r\n    this.baseState = this.state;\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.getLecturer();\r\n    this.getSemesterbyCurrentSemester();  \r\n  }\r\n\r\n\r\n  getLecturer = () => {\r\n    ProjectAPI.getAPI().getUserByGoogleId(firebase.auth().currentUser.uid)\r\n      .then (userBO => {\r\n          this.setState({ userID: userBO.getID() });\r\n      })\r\n  }\r\n\r\n  \r\n  getSemesterbyCurrentSemester = () => {\r\n    ProjectAPI.getAPI().getSemesterbyCurrentSemester()\r\n      .then (semesterBO => {\r\n          this.setState({ semester_id: semesterBO.getID() });\r\n      })\r\n  }\r\n\r\n\r\n  /** Erstellen eines Projekts */\r\n  addProject = () => {\r\n    let newProject = new ProjectBO(this.state.projectName, this.state.userID, this.state.projectTypeID, this.state.stateID, this.state.semester_id, this.state.assignmentID,\r\n      this.state.projectDescription, this.state.partners, this.state.capacity, this.state.preferredRoom, this.state.bDaysPreSchedule, \r\n      this.state.bDaysFinale, this.state.bDaysSaturdays, this.state.preferredBDays, this.state.additionalLecturer, this.state.weekly); \r\n   \r\n    ProjectAPI.getAPI().addProject(newProject).then(project => {\r\n      // Backend-Aufruf erfolgreich\r\n      // Leeren des Zustandes des Dialogs für das neue leere Projekt\r\n      this.setState(this.baseState);\r\n      this.props.onClose(project); // das übergeordnete Objekt mit dem Project-Objekt aus dem Backend aufrufen\r\n    }).catch(e =>\r\n      this.setState({\r\n        addingInProgress: false,    // Ladeanzeige deaktivieren \r\n        addingError: e              // Fehlermeldung anzeigen\r\n      })\r\n    );\r\n\r\n    // setzen des Ladens auf true\r\n    this.setState({\r\n        addingInProgress: true,       // Ladeanzeige anzeigen\r\n        addingError: null             // Fehlermeldung deaktivieren\r\n    }\r\n    );\r\n  }\r\n  \r\n\r\n  /**  Handlerfunktion für Wertänderungen und deren Validierung in Formulartextfeldern */\r\n  textFieldValueChange = (event) => {\r\n    const value = event.target.value;\r\n\r\n    let error = false;\r\n    if (value.trim().length === 0) {\r\n      error = true;\r\n    }\r\n\r\n    this.setState({\r\n      [event.target.id]: event.target.value,\r\n      [event.target.id + 'ValidationFailed']: error,\r\n      [event.target.id + 'Edited']: true\r\n    });\r\n  } \r\n\r\n  /** Auszuführende Anweisung beim Schließen des Dialogs */\r\n  handleClose = () => {\r\n    // Zurücksetzen des Zustands\r\n    this.setState(this.baseState);\r\n    this.getLecturer();\r\n    this.props.onClose(null);\r\n  }\r\n\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n        weekly: event.target.value\r\n    });}\r\n\r\n  handleChange2 = (event) => {\r\n    this.setState({\r\n      projectTypeID: event.target.value\r\n    });}\r\n\r\n  handleChange3 = (event) => {\r\n    this.setState({\r\n      assignmentID: event.target.value\r\n    });}\r\n\r\n\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes, show } = this.props;\r\n    const { projectName, projectNameValidationFailed, projectNameEdited } = this.state;\r\n    const { projectTypeID } = this.state;\r\n    const { assignmentID } = this.state;\r\n    const { projectDescription, projectDescriptionValidationFailed, projectDescriptionEdited } = this.state;\r\n    const { partners } = this.state;\r\n    const { capacity } = this.state;\r\n    const { preferredRoom } = this.state;\r\n    const { bDaysPreSchedule } = this.state;\r\n    const { bDaysFinale } = this.state;\r\n    const { bDaysSaturdays } = this.state;\r\n    const { preferredBDays } = this.state;\r\n    const { additionalLecturer } = this.state;\r\n    const { weekly } = this.state;\r\n    const { addingInProgress, addingError } = this.state;\r\n\r\n    let title = 'Neues Projekt erstellen';\r\n    let header = 'Füllen Sie das Formular aus';\r\n\r\n\r\n    return (\r\n      show ?\r\n        <Dialog open={show} open={this.getLecturer} onClose={this.handleClose} width='80%'>\r\n          <DialogTitle id='form-dialog-title'>{title}\r\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              {header}\r\n            </DialogContentText>\r\n            <form className={classes.root} noValidate autoComplete='off'>\r\n            <TextField autoFocus type='text' required fullWidth margin='normal' id='projectName' label='Projekttitel:' value={projectName} \r\n                onChange={this.textFieldValueChange} error={projectNameValidationFailed} \r\n                helperText={projectNameValidationFailed ? 'Der Projekttitel muss mindestens ein Zeichen besitzen' : ' '} />\r\n\r\n            <Typography variant=\"h6\">Projektart</Typography>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel required id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                <Select\r\n                  value={projectTypeID}\r\n                  onChange={this.handleChange2}\r\n                >\r\n                  <MenuItem value={1}>Fachspezifisches Projekt</MenuItem>\r\n                  <MenuItem value={2}>Interdisziplinäres Projekt</MenuItem>\r\n                  <MenuItem value={3}>Transdisziplinäres Projekt</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              { projectTypeID === 1 ?\r\n              <Grid className={classes.font}>\r\n                <Box p={1}></Box>\r\n                  <Typography> ECTS: 5 </Typography>\r\n                  <Typography>SWS: 3</Typography>\r\n                <Box p={1}></Box>\r\n                  <FormControl className={classes.formControl}>\r\n                      <InputLabel required id=\"open-select-label\">Projekt Kategorie</InputLabel>\r\n                      <Select\r\n                        value={assignmentID}\r\n                        onChange={this.handleChange3}\r\n                      >\r\n                        <MenuItem value={1}>Management</MenuItem>\r\n                        <MenuItem value={2}>IT</MenuItem>\r\n                        <MenuItem value={3}>Medienproduktion</MenuItem>\r\n                        <MenuItem value={4}>Medien/Kultur</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n              </Grid>\r\n\r\n              : projectTypeID === 2 ?\r\n              <Grid className={classes.font}>\r\n                <Box p={1}></Box>\r\n                  <Typography> ECTS: 10 </Typography>\r\n                  <Typography>SWS: 5</Typography>\r\n                <Box p={1}></Box>\r\n                  <FormControl className={classes.formControl}>\r\n                      <InputLabel required id=\"open-select-label\">Projekt Kategorie</InputLabel>\r\n                      <Select\r\n                        value={assignmentID}\r\n                        onChange={this.handleChange3}\r\n                      >\r\n                        <MenuItem value={5}>Management und IT</MenuItem>\r\n                        <MenuItem value={6}>Management und Medienproduktion</MenuItem>\r\n                        <MenuItem value={7}>Management und Medien/Kultur</MenuItem>\r\n                        <MenuItem value={8}>IT und Medienproduktion</MenuItem>\r\n                        <MenuItem value={9}>IT und Medien/Kultur</MenuItem>\r\n                        <MenuItem value={10}>Medienproduktion und Medien/Kultur</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n              </Grid> \r\n              \r\n              : projectTypeID === 3 ?\r\n              <Grid className={classes.font}>\r\n                <Box p={1}></Box>\r\n                  <Typography> ECTS: 20 </Typography>\r\n                  <Typography>SWS: 10</Typography>\r\n                <Box p={1}></Box>\r\n                  <FormControl className={classes.formControl}>\r\n                      <InputLabel required id=\"open-select-label\">Projekt Kategorie</InputLabel>\r\n                      <Select\r\n                        value={assignmentID}\r\n                        onChange={this.handleChange3}\r\n                      >\r\n                        <MenuItem value={11}>Transdisziplinäres Projekt</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n              </Grid> \r\n              \r\n              : null }\r\n\r\n            <Box p={2}></Box>\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='projectDescription' label='Projektbeschreibung (Inhalt):' value={projectDescription} \r\n                onChange={this.textFieldValueChange} error={projectDescriptionValidationFailed} \r\n                helperText={projectDescriptionValidationFailed ? 'Die Projektbeschreibung muss mindestens ein Zeichen besitzen' : ' '} />\r\n\r\n            <TextField type='text' fullWidth margin='normal' id='partners' label='Partners' value={partners} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n            <TextField type='text' fullWidth margin='normal' id='additionalLecturer' label='Betreuende(r) ProfessorInnen:' value={additionalLecturer} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n            <TextField type='number' required fullWidth margin='normal' id='capacity' label='Kapazität:' value={capacity} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n            <Box p={2}></Box>\r\n\r\n            <Typography variant=\"h5\">Raum- und Ressourcenplanung</Typography>\r\n\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel required id=\"open-select-label\">Wöchentlicher Kurs?</InputLabel>\r\n                <Select\r\n                  value={weekly}\r\n                  onChange={this.handleChange}\r\n                >\r\n                  <MenuItem value={1}>Ja</MenuItem>\r\n                  <MenuItem value={0}>Nein</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            \r\n            <Box p={1}></Box>\r\n\r\n\r\n            <TextField type='text' fullWidth margin='normal' id='preferredRoom' label='Besonderer Raum notwendig:' value={preferredRoom} \r\n            onChange={this.textFieldValueChange} />\r\n\r\n\r\n            <TextField type='text' fullWidth margin='normal' id='bDaysPreSchedule' label='Blocktage vor Beginn der Vorlesungszeit:' value={bDaysPreSchedule} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n\r\n            <TextField type='text' fullWidth margin='normal' id='bDaysFinale' label='Blocktage in der Prüfungszeit (nur inter-/trans. Projekte!!!):' value={bDaysFinale} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n\r\n            <TextField type='text' fullWidth margin='normal' id='bDaysSaturdays' label='Blocktage (Samstage) in der Vorlesungszeit:' value={bDaysSaturdays} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n\r\n            <TextField type='text' fullWidth margin='normal' id='preferredBDays' label='Präferierte Tage:' value={preferredBDays} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n\r\n            </form>\r\n\r\n            <LoadingProgress show={addingInProgress} />\r\n            <ContextErrorMessage error={addingError} contextErrorMsg={`Das Projekt konnte nicht erstellt werden. Überprüfen Sie, ob Sie alle Pflichtfelder ausgefüllt haben.`} onReload={this.addProject} />\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color='secondary'>\r\n              Abbrechen\r\n            </Button>\r\n\r\n            <Button disabled={projectNameValidationFailed |!projectNameEdited | projectDescriptionValidationFailed | !projectDescriptionEdited   } variant='contained' onClick={this.addProject} color='primary'>\r\n              Einsenden\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        : null\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 300,\r\n  },\r\n  font: {\r\n    top: theme.spacing(1),\r\n  },\r\n});\r\n\r\n/** PropTypes */\r\nProjectForm.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** Wenn dies \"true\" ist, wird die Komponente gerendert */\r\n  show: PropTypes.bool.isRequired,\r\n  /**  \r\n   * Handlerfunktion die aufgerufen wird, wenn das Dialogfenster geschlossen wird\r\n   */\r\n  onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(ProjectForm);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, List, ListItem, Button } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ProjectAPI  from '../api/ProjectAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport LecturerProjectListEntry from './LecturerProjectListEntry';\r\nimport ProjectForm from './dialogs/ProjectForm';\r\n\r\n\r\n/**  \r\n * Hier wird die Liste aus Dozentensicht angezeigt. Dozenten sehen die eigenen Projekte mit dem Status\r\n * und können weitere Projekte erstellen.\r\n * \r\n * Außerdem können sie eigene Projekte in Bewertung senden.\r\n */\r\n\r\nclass LecturerProjectList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let expandedID = null;\r\n\r\n    if (this.props.location.expandCustomer) {\r\n      expandedID = this.props.location.expandCustomer.getID();\r\n    }\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n        projects: [],\r\n        error: null,\r\n        loadingInProgress: false,\r\n        expandedProjectID: expandedID,\r\n        showProjectForm: false,\r\n    };\r\n  }\r\n\r\n  onExpandedStateChange = project => {\r\n    let newID = null;\r\n\r\n    if (project.getID() !== this.state.expandedProjectID) {\r\n      newID = project.getID();\r\n    }\r\n\r\n    this.setState({\r\n      expandedProjectID: newID,\r\n    });\r\n  }\r\n\r\n  getProjects = () => {\r\n    ProjectAPI.getAPI().getProjects()\r\n      .then(projectBOs =>\r\n        this.setState({               \r\n          projects: projectBOs,\r\n          loadingInProgress: false,   \r\n          error: null\r\n        })).catch(e =>\r\n          this.setState({           \r\n            projects: [],\r\n            loadingInProgress: false, \r\n            error: e\r\n          })\r\n        );\r\n      \r\n\r\n    // setzen des Ladens auf ture\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      error: null\r\n    });\r\n  }\r\n    \r\n  \r\n\r\n  /** Lifecycle-Methode, die aufgerufen wird, wenn die Komponente in das DOM des Browsers eingefügt wird */\r\n  componentDidMount() {\r\n    this.getProjects();\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n  /** Handlerfunktion die aufgerufen wird, wenn Projekt erstellen geklickt wurde */\r\n  addProjectButtonClicked = event => {\r\n    event.stopPropagation();\r\n    //Anzeigen der ProjectForm\r\n    this.setState({\r\n      showProjectForm: true\r\n    });\r\n\r\n  }\r\n\r\n  /**Handlerfunktion die aufgerufen wird, wenn das \"Projekt erstellen\" Fenster geschlossen werden soll*/\r\n  projectFormClosed = project => {\r\n    // das Projekt ist nicht Null/ False und wird daher neu erstellt\r\n    if (project) {\r\n      return(this.setState({\r\n        projects: [...this.state.projects, project],\r\n        showProjectForm: false\r\n      }), this.getProjects())\r\n    } else {\r\n      this.setState({\r\n        showProjectForm: false\r\n      });\r\n    }\r\n   }\r\n\r\n\r\n  projectDeleted = project => {\r\n    const newProjectList = this.state.projects.filter(projectFromState => projectFromState.getID() !== project.getID());\r\n    this.setState({\r\n      projects: newProjectList,\r\n    });\r\n  }\r\n\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { projects, loadingInProgress, error, showProjectForm, project } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <List className={classes.projectList}>\r\n        <Button variant='contained' color='primary' startIcon={<AddIcon />} onClick={this.addProjectButtonClicked}>\r\n              Projekt erstellen\r\n        </Button>\r\n        \r\n\r\n\r\n        { \r\n          // Anzeigen aller Projekte die einem Dozenten angehören\r\n          projects.map(project => <LecturerProjectListEntry key={project.getID()} project={project}\r\n          show={this.props.show}  \r\n          onProjectDeleted={this.projectDeleted} \r\n          onExpandedStateChange={this.onExpandedStateChange} />)\r\n        }\r\n\r\n          <ListItem>\r\n            <LoadingProgress show={loadingInProgress} />\r\n            <ContextErrorMessage error={error} contextErrorMsg={`The list of projects could not be loaded.`} onReload={this.getProjects} />\r\n            <ProjectForm show={showProjectForm} project={project} onClose={this.projectFormClosed} />\r\n          \r\n          </ListItem>\r\n\r\n        </List>\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '90%',\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(10),\r\n  },\r\n  \r\n\r\n});\r\n\r\n/** PropTypes */\r\nLecturerProjectList.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n\r\n  show: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(LecturerProjectList));","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProjectAPI from '../../api/ProjectAPI';\r\nimport ProjectBO from '../../api/ProjectBO';\r\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\n\r\n//Genehmigen eines Kurses aus Admin Sicht --> Ändern des Status zu \"Genehmigt\"\r\n\r\nclass ProjectApprovalForm extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      // Typzuweisung der Variablen\r\n      let n = \"\";\r\n      let u = 0;\r\n      let p = 0;\r\n      let s = 0;\r\n      let sid = 0;\r\n      let aid = 0;\r\n      let pd = \"\";\r\n      let ps = \"\";\r\n      let c = 0;\r\n      let pr = \"\";\r\n      let b = \"\";\r\n      let bf = \"\";\r\n      let bs = \"\";\r\n      let pb = \"\";\r\n      let a = \"\";\r\n      let w = \"\";\r\n\r\n      if (props.project) {\r\n      //Abruf der Variablen aus dem ProjectBO\r\n        n= props.project.getName();\r\n        u = props.project.getUserID();\r\n        p = props.project.getProjectTypeID();\r\n        s = props.project.getStateID();\r\n        sid = props.project.getSemesterID();\r\n        aid = props.project.getAssignmentID();\r\n        pd = props.project.getProjectDescription();\r\n        ps = props.project.getPartners();\r\n        c = props.project.getCapacity();\r\n        pr = props.project.getPreferredBDays ();\r\n        b = props.project.getBDaysPreSchedule();\r\n        bf = props.project.getBDaysFinale();\r\n        bs = props.project.getBDaysSaturdays();\r\n        pd = props.project.getPreferredBDays();\r\n        a = props.project.getAdditionalLecturer();\r\n        w = props.project.getWeekly();\r\n\r\n      }\r\n    \r\n      // Init the state\r\n      this.state = {\r\n        name: n,\r\n        user_id: u,\r\n        project_type_id: p,\r\n        state_id: s,\r\n        semester_id: sid,\r\n        assignment_id: aid,\r\n        project_description: pd,\r\n        partners: ps,\r\n        capacity: c,\r\n        preferred_room: pr,\r\n        b_days_pre_schedule: b,\r\n        b_days_finale: bf,\r\n        b_days_saturdays: bs,\r\n        preferred_b_days: pb,\r\n        additional_lecturer: a,\r\n        weekly:w,\r\n\r\n        project: this.props.project,\r\n\r\n        // Ladebalken und Error\r\n        updatingInProgress: false,\r\n        updatingError: null\r\n\r\n      };\r\n      //der State wird als Basiszustand gespeichert\r\n      this.baseState = this.state;\r\n    }\r\n\r\n  /** Ändern des States */\r\n  updateStateApproved = () => {\r\n    // Duplizieren des ProjectBOs im Falle eines Fehlerhaften API-Calls\r\n    let updatedState = Object.assign(new ProjectBO(), this.props.project);\r\n    \r\n    // setzen der neuen Attribute vom Dialog\r\n    updatedState.setName(this.state.name);\r\n    updatedState.setUserID(this.state.user_id);\r\n    updatedState.setProjectTypeID(this.state.project_type_id);\r\n    updatedState.setStateID(3);\r\n    updatedState.setSemesterID(this.state.semester_id);\r\n    updatedState.setAssignmentID(this.state.assignment_id);\r\n    updatedState.setProjectDescription(this.state.project_description);\r\n    updatedState.setPartners(this.state.partners);\r\n    updatedState.setCapacity(this.state.capacity);\r\n    updatedState.setPreferredBDays(this.state.preferred_b_days);\r\n    updatedState.setBDaysPreSchedule(this.state.b_days_pre_schedule);\r\n    updatedState.setBDaysFinale(this.state.b_days_finale);\r\n    updatedState.setBDaysSaturdays(this.state.b_days_saturdays);\r\n    updatedState.setPreferredBDays(this.state.preferred_b_days);\r\n    updatedState.setAdditionalLecturer(this.state.additional_lecturer);\r\n    updatedState.setWeekly(this.state.weekly);\r\n\r\n    ProjectAPI.getAPI().updateProject(updatedState).then(project => {\r\n      this.setState({\r\n        updatingInProgress: false,                        //Ladeanzeige deaktivieren \r\n        updatingError: null                               //keine Fehlermeldung\r\n      });\r\n                                                          // den neuen Zustand als Basiszustand beibehalten\r\n      this.baseState.name = this.state.name;\r\n      this.baseState.user_id = this.state.user_id;\r\n      this.baseState.project_type_id = this.state.project_type_id;\r\n      this.baseState.state_id = this.state.state_id;\r\n      this.baseState.semester_id = this.state.semester_id;\r\n      this.baseState.assignment_id = this.state.assignment_id;\r\n      this.baseState.project_description = this.state.project_description;\r\n      this.baseState.partners = this.state.partners;\r\n      this.baseState.capacity = this.state.capacity;\r\n      this.baseState.preferred_b_days = this.state.preferred_b_days;\r\n      this.baseState.b_days_pre_schedule = this.state.b_days_pre_schedule;\r\n      this.baseState.b_days_finale = this.state.b_days_finale;\r\n      this.baseState.b_days_saturdays = this.state.b_days_saturdays;\r\n      this.baseState.preferred_b_days = this.state.preferred_b_days;\r\n      this.baseState.additional_lecturer = this.state.additional_lecturer;\r\n      this.baseState.weekly = this.state.weekly;\r\n      this.props.onClose(updatedState);                     // Die übergeordnete Komponente mit dem State aufrufen\r\n    }).catch(e =>\r\n      this.setState({\r\n        updatingInProgress: false,                          //Ladeanzeige deaktivieren\r\n        updatingError: e                                    // Anzeigen Fehlermeldung\r\n      })\r\n    );\r\n\r\n    // Setzen des Laden auf true\r\n    this.setState({\r\n      updatingInProgress: true,                           // Ladeanzeige anzeigen\r\n      updatingError: null                                 //Fehlermeldung deaktivieren\r\n    });\r\n  } \r\n\r\n\r\n  /** Auszuführende Anweisung beim Schließen des Dialogs */\r\n  handleClose = () => {\r\n    this.props.onClose(null);\r\n  }\r\n\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes, project, show } = this.props;\r\n    const { updatingError, updatingInProgress } = this.state;\r\n\r\n    return ( \r\n       show ? \r\n        <Dialog open={show} onClose={this.handleClose}>\r\n          <DialogTitle id='ProjectApproval-Title'>Projekt genehmigen\r\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Soll das folgende Projekt genehmigt werden: '{project.getName()}' (ID: {project.getID()})?\r\n            </DialogContentText>\r\n            <LoadingProgress show={updatingInProgress} />\r\n            <ContextErrorMessage error={updatingError} contextErrorMsg={`Das Projekt ${project.getID()} konnte nicht genehmigt werden.`} onReload={this.updateStateApproved} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color='secondary'>\r\n              Abbrechen\r\n            </Button>\r\n            <Button variant='contained' onClick={this.updateStateApproved} color='primary'>\r\n              Genehmigen\r\n            </Button> \r\n          </DialogActions>\r\n        </Dialog> \r\n        :null\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  }\r\n});\r\n  \r\n/** PropTypes */\r\nProjectApprovalForm.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  // Das ProjectBO zum Ändern des States\r\n  project: PropTypes.object.isRequired,\r\n\r\n  /** Wenn true, wird der Dialog gerendert */\r\n  show: PropTypes.bool.isRequired,\r\n  \r\n  /** Handler-Funktion, die aufgerufen wird, wenn der Dialog geschlossen wird. */\r\n  onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(ProjectApprovalForm);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ProjectAPI from '../../api/ProjectAPI';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\nimport ProjectBO from '../../api/ProjectBO';\r\n\r\n//Ablehnen eines Kurses aus Admin Sicht --> Ändern des Status zu \"Abgelehnt\"\r\n\r\nclass ProjectRejectionForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //Typzuweisung der Variablen\r\n    let n = \"\";\r\n    let u = 0;\r\n    let p = 0;\r\n    let s = 0;\r\n    let sid = 0;\r\n    let aid = 0;\r\n    let pd = \"\";\r\n    let ps = \"\";\r\n    let c = 0;\r\n    let pr = \"\";\r\n    let b = \"\";\r\n    let bf = \"\";\r\n    let bs = \"\";\r\n    let pb = \"\";\r\n    let a = \"\";\r\n    let w = \"\";\r\n\r\n    if (props.project) {\r\n      n = props.project.getName();\r\n      u = props.project.getUserID();\r\n      p = props.project.getProjectTypeID();\r\n      s = props.project.getStateID();\r\n      sid = props.project.getSemesterID();\r\n      aid = props.project.getAssignmentID();\r\n      pd = props.project.getProjectDescription();\r\n      ps = props.project.getPartners();\r\n      c = props.project.getCapacity();\r\n      pr = props.project.getPreferredBDays ();\r\n      b = props.project.getBDaysPreSchedule();\r\n      bf = props.project.getBDaysFinale();\r\n      bs = props.project.getBDaysSaturdays();\r\n      pd = props.project.getPreferredBDays();\r\n      a = props.project.getAdditionalLecturer();\r\n      w = props.project.getWeekly();\r\n\r\n    }\r\n  \r\n\r\n    // Init the state\r\n    this.state = {\r\n      name: n,\r\n      user_id: u,\r\n      project_type_id: p,\r\n      state_id: s,\r\n      semester_id: sid,\r\n      assignment_id: aid,\r\n      project_description: pd,\r\n      partners: ps,\r\n      capacity: c,\r\n      preferred_room: pr,\r\n      b_days_pre_schedule: b,\r\n      b_days_finale: bf,\r\n      b_days_saturdays: bs,\r\n      preferred_b_days: pb,\r\n      additional_lecturer: a,\r\n      weekly:w,\r\n\r\n      project: this.props.project,\r\n\r\n      // Ladebalken und Error\r\n      updatingInProgress: false,\r\n      updatingError: null\r\n\r\n    };\r\n    //der State wird als Basiszustand gespeichert\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  /** Änderung des Zustands von einem Projekt auf abgelehnt */\r\n  updateStateRejected= () => {\r\n    // Duplizieren des ProjectBOs im Falle eines Fehlerhaften API-Calls\r\n    let updatedState = Object.assign(new ProjectBO(), this.props.project);\r\n    // setzen der neuen Attribute vom Dialog\r\n    updatedState.setName(this.state.name);\r\n    updatedState.setUserID(this.state.user_id);\r\n    updatedState.setProjectTypeID(this.state.project_type_id);\r\n    updatedState.setStateID(2);\r\n    updatedState.setSemesterID(this.state.semester_id);\r\n    updatedState.setAssignmentID(this.state.assignment_id);\r\n    updatedState.setProjectDescription(this.state.project_description);\r\n    updatedState.setPartners(this.state.partners);\r\n    updatedState.setCapacity(this.state.capacity);\r\n    updatedState.setPreferredBDays(this.state.preferred_b_days);\r\n    updatedState.setBDaysPreSchedule(this.state.b_days_pre_schedule);\r\n    updatedState.setBDaysFinale(this.state.b_days_finale);\r\n    updatedState.setBDaysSaturdays(this.state.b_days_saturdays);\r\n    updatedState.setPreferredBDays(this.state.preferred_b_days);\r\n    updatedState.setAdditionalLecturer(this.state.additional_lecturer);\r\n    updatedState.setWeekly(this.state.weekly);\r\n\r\n    ProjectAPI.getAPI().updateProject(updatedState).then(project => {\r\n      this.setState({\r\n        updatingInProgress: false,                                                        // Ladeanzeige deaktivieren  \r\n        updatingError: null                                                              // keine Fehlermeldung\r\n      });\r\n                                                                                        // den neuen Zustand als Basiszustand beibehalten\r\n      this.baseState.name = this.state.name;\r\n      this.baseState.user_id = this.state.user_id;\r\n      this.baseState.project_type_id = this.state.project_type_id;\r\n      this.baseState.state_id = this.state.state_id;\r\n      this.baseState.semester_id = this.state.semester_id;\r\n      this.baseState.assignment_id = this.state.assignment_id;\r\n      this.baseState.project_description = this.state.project_description;\r\n      this.baseState.partners = this.state.partners;\r\n      this.baseState.capacity = this.state.capacity;\r\n      this.baseState.preferred_b_days = this.state.preferred_b_days;\r\n      this.baseState.b_days_pre_schedule = this.state.b_days_pre_schedule;\r\n      this.baseState.b_days_finale = this.state.b_days_finale;\r\n      this.baseState.b_days_saturdays = this.state.b_days_saturdays;\r\n      this.baseState.preferred_b_days = this.state.preferred_b_days;\r\n      this.baseState.additional_lecturer = this.state.additional_lecturer;\r\n      this.baseState.weekly = this.state.weekly;\r\n      \r\n      this.props.onClose(updatedState);                                                   // Die übergeordnete Komponente mit dem State aufrufen\r\n    }).catch(e =>\r\n      this.setState({\r\n        updatingInProgress: false,                                                       // Ladeanzeige deaktivieren \r\n        updatingError: e                                                                // Fehlermeldung anzeigen\r\n      })\r\n    );\r\n\r\n    // Laden auf true setzen\r\n    this.setState({\r\n      updatingInProgress: true,                                                        // Ladeanzeige anzeigen\r\n      updatingError: null                                                              //Fehlermeldung abschalten\r\n    });\r\n  } \r\n\r\n\r\n  /** Auszuführende Anweisung beim Schließen des Dialogs */\r\n  handleClose = () => {\r\n    this.props.onClose(null);\r\n  }\r\n\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes, project, show } = this.props;\r\n    const { updatingError, updatingInProgress } = this.state;\r\n\r\n    return ( \r\n       show ? \r\n        <Dialog open={show} onClose={this.handleClose}>\r\n          <DialogTitle id='ProjectRejection-Title'>Projekt ablehnen\r\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Soll das folgende Projekt abgelehnt werden: '{project.getName()}' (ID: {project.getID()})?\r\n            </DialogContentText>\r\n            <LoadingProgress show={updatingInProgress} />\r\n            <ContextErrorMessage error={updatingError} contextErrorMsg={`Das Projekt ${project.getID()} konnte nicht abgelehnt werden.`} onReload={this.updateStateRejected} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color='secondary'>\r\n              Abbrechen\r\n            </Button>\r\n            <Button variant='contained' onClick={this.updateStateRejected} color='primary'>\r\n              Ablehnen\r\n            </Button> \r\n          </DialogActions>\r\n        </Dialog> \r\n        :null\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\n  ProjectRejectionForm.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    /** Projekt welches für den Zustand geändert werden soll*/\r\n    project: PropTypes.object.isRequired,\r\n\r\n    /** Wenn true, wird der Dialog gerendert */\r\n    show: PropTypes.bool.isRequired,\r\n\r\n    /** Handler Funktion welche aufgerufen wird, wenn der Dialog geschlossen ist.*/\r\n    onClose: PropTypes.func.isRequired,\r\n  }\r\n  \r\n  export default withStyles(styles)(ProjectRejectionForm);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\r\nimport { Button, List, ListItem, Box } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ProjectApprovalForm from './dialogs/ProjectApprovalForm';\r\nimport ProjectRejectionForm from './dialogs/ProjectRejectionForm';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { ButtonGroup } from '@material-ui/core';\r\nimport ProjectDeleteDialog from './dialogs/ProjectDeleteDialog';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport red from '@material-ui/core/colors/red';\r\nimport ProjectAPI from '../api/ProjectAPI';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport ProjectInEvaluationForm from './dialogs/ProjectInEvaluationForm';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\n\r\nclass AdminProjectListEntry extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      // Init the state\r\n      this.state = {\r\n        project: props.project,\r\n        showProjectDeleteDialog: false,\r\n        state: null,\r\n        showApprovedForm: false,\r\n        showRejectedForm: false,\r\n        showProjectInEvaluation: false,\r\n        disabled: true,\r\n        assignment: null,\r\n        projecttype: null\r\n      };\r\n    }\r\n\r\n  /** Handler Funktion für das untergeordnete Aufklappprojekt */\r\n  expansionPanelStateChanged = () => {\r\n    this.props.onExpandedStateChange(this.props.project);\r\n  }\r\n\r\n \r\n// Projekt genehmigen\r\n  ApproveProjectClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showApprovedForm : true\r\n    });\r\n  }\r\n\r\n//Dialog-Fenster schließen\r\n  ApprovedFormClosed = (project) => {\r\n    if (project) {\r\n      return (this.setState ({\r\n        project: project,\r\n        showApprovedForm: false,\r\n        disabled: false,\r\n      }), this.getStatebyID())\r\n    } else {\r\n      this.setState({\r\n        showApprovedForm:false\r\n      });\r\n    }\r\n    }\r\n\r\n  getAssignmentForProject = () => {\r\n    ProjectAPI.getAPI().getAssignmentbyId(this.props.project.getAssignmentID())\r\n        .then (assignmentBO => {\r\n            this.setState({ assignment: assignmentBO });\r\n        })\r\n    }\r\n  \r\n  getProjecttypeForProject = () => {\r\n    ProjectAPI.getAPI().getProjecttypebyId(this.props.project.getProjectTypeID())\r\n          .then (ProjecttypeBO => {\r\n              this.setState({ projecttype: ProjecttypeBO });\r\n          })\r\n      }\r\n  \r\n\r\n\r\n// Projekt ablehnen  \r\n  /** Handlerfunktion wenn Projekt ablehnen geklickt wird */\r\n  RejectProjectClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showRejectedForm : true\r\n    });\r\n  } \r\n\r\n\r\n  /** Handlerfunktion zum schließen der RejectForm nach Ablehnen/ Abbrechen oder Schließen */\r\n  RejectFormClosed = (project) => {\r\n    if (project) {\r\n      return (this.setState ({\r\n        project: project,\r\n        showRejectedForm: false,\r\n        disabled: false,\r\n      }), this.getStatebyID())\r\n    } else {\r\n      this.setState({\r\n        showRejectedForm: false\r\n      });\r\n    }\r\n  }\r\n  \r\n\r\n  \r\n  /** Handlerfunktion wenn Projekt löschen geklickt wird */\r\n  deleteProjectButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showProjectDeleteDialog: true\r\n    });\r\n  }\r\n\r\n  /** Handlerfunktion zum schließen der deleteForm nach Löschen/ Abbrechen oder Schließen */\r\n  deleteProjectDialogClosed = (project) => {\r\n    if (project) {\r\n      this.props.onProjectDeleted(project);\r\n    };\r\n\r\n    // Das Dialog-Fenster nicht anzeigen\r\n    this.setState({\r\n      showProjectDeleteDialog: false\r\n    });\r\n  }\r\n\r\n\r\n  // Projekt in Bewertung senden\r\n  /** Handlerfunktion wenn Projekt in Bewertung senden geklickt wird */\r\n  sendProjectInEvaluationClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showProjectInEvaluation: true,\r\n    });\r\n  }\r\n\r\n\r\n  /** Handlerfunktion zum Schließen des \"Projekt in Bewertung setzen\" Fenster nach Klick/ Abbrechen oder Schließen */\r\n  ProjectInEvaluationFormClosed = (project) => {\r\n    if (project) {\r\n      return(this.setState ({\r\n        project: project,\r\n        showProjectInEvaluation: false,\r\n        disabled: false,\r\n      }), this.getStatebyID())\r\n    } else {\r\n      this.setState({\r\n        showProjectInEvaluation: false,\r\n      });\r\n    }\r\n    }\r\n\r\n\r\n  getStatebyID = () => {\r\n    ProjectAPI.getAPI().getStatebyId(this.state.project.getStateID())   //Hier die ID des Studentens aufrufen --> this.state.studentId.getId()....vom StudentBO\r\n    //ProjectAPI.getAPI().getStudentById()\r\n        .then (projectBO => {\r\n            this.setState({ state: projectBO });\r\n        })\r\n  }\r\n\r\n  /** Lifecycle-Methode, die aufgerufen wird, wenn die Komponente in das DOM des Browsers eingefügt wird */\r\n  componentDidMount() {\r\n    this.getStatebyID();\r\n    this.getAssignmentForProject();\r\n    this.getProjecttypeForProject();\r\n  }\r\n\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    // Use the states project\r\n    const { project, state, showProjectDeleteDialog, showApprovedForm, showRejectedForm, showProjectInEvaluation, assignment, projecttype } = this.state;\r\n\r\n \r\n    return (\r\n      <div>\r\n      { assignment && state && projecttype ?\r\n\r\n      <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={`project${project.getID()}projectpanel-header`} \r\n          >\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='body1' className={classes.heading}>{project.getName()} \r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <ButtonGroup variant='text' size='small'>\r\n                <Button className={classes.root} startIcon={<DeleteIcon />}\r\n                onClick = {this.deleteProjectButtonClicked} />\r\n                </ButtonGroup>\r\n              </Grid>\r\n              <Grid item xs />\r\n              <Grid item>\r\n                <Typography variant='body2' color={'textSecondary'}>{state.getName()}</Typography> {/**Ergänzend steht hier die aktuelle Condition des Projektes */}\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <List>\r\n            <ListItem>Projektbeschreibung: {project.getProjectDescription()} </ListItem>\r\n            <ListItem>Projektkategorie: {projecttype.getName()} </ListItem>\r\n            <ListItem>Projektart: {assignment.getName()} </ListItem>\r\n            <ListItem>Betreuende Dozenten: {project.getAdditionalLecturer()} </ListItem>  \r\n            <ListItem>Externe Partner: {project.getPartners()} </ListItem>\r\n            <ListItem>Kapazität: {project.getCapacity()} </ListItem>\r\n            <Box p={1}></Box>\r\n            <ListItem className ={classes.font}>Raum- und Ressourenplanung</ListItem>\r\n            <ListItem>Wöchentlicher Kurs: {project.getWeekly() === \"1\" ? 'Ja' : 'Nein'} </ListItem>\r\n            <ListItem>Anzahl der Blocktage vor der Vorlesungszeit: {project.getBDaysPreSchedule()} </ListItem>\r\n            <ListItem>Anzahl der Blocktage in der Prüfungszeit: {project.getBDaysFinale()} </ListItem>            \r\n            <ListItem>Anzahl der Blocktage in der Vorlesungszeit (Samstage): {project.getBDaysSaturdays()} </ListItem>\r\n            <ListItem>Raum: {project.getPreferredRoom()} </ListItem> \r\n\r\n            { this.state.disabled && project.getStateID() === 1 ? \r\n\r\n            <ListItem>\r\n                <Button  color='primary' startIcon={<AddIcon />} onClick = {this.ApproveProjectClicked} >\r\n                  Genehmigen\r\n                </Button>\r\n                <Button  color='secondary' startIcon={<AddIcon />} onClick = {this.RejectProjectClicked}>\r\n                  Ablehnen\r\n                </Button>\r\n            </ListItem> \r\n\r\n            : null } \r\n\r\n            { this.state.disabled && project.getStateID() === 3 ? \r\n\r\n            <ListItem>\r\n              <Button variant='outlined' color='primary' startIcon={<SendIcon />} onClick = {this.sendProjectInEvaluationClicked} >\r\n                In Bewertung senden\r\n              </Button>\r\n            </ListItem> \r\n\r\n            : null } \r\n\r\n          </List>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n        : null }\r\n        <ProjectDeleteDialog show={showProjectDeleteDialog} project={project} onClose={this.deleteProjectDialogClosed} />\r\n        <ProjectApprovalForm show={showApprovedForm} project={project} onClose={this.ApprovedFormClosed} />\r\n        <ProjectRejectionForm show={showRejectedForm} project={project} onClose={this.RejectFormClosed} /> \r\n        <ProjectInEvaluationForm show={showProjectInEvaluation} project={project} onClose={this.ProjectInEvaluationFormClosed} />\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      color: red[500],\r\n    },\r\n    heading: {\r\n      fontSize: 20,\r\n      color: indigo[600],\r\n      fontFamily: '\"Segoe UI\"',\r\n    },\r\n  });\r\n  \r\n  /** PropTypes */\r\nAdminProjectListEntry.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    state: PropTypes.object.isRequired,\r\n    expandedState: PropTypes.bool.isRequired,\r\n    onExpandedStateChange: PropTypes.func.isRequired,\r\n    onProjectDeleted: PropTypes.func.isRequired\r\n    }\r\n  \r\nexport default withStyles(styles)(AdminProjectListEntry);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, List, ListItem } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ProjectAPI  from '../api/ProjectAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport AdminProjectListEntry from './AdminProjectListEntry';\r\n\r\n\r\n/**  \r\n * Hier wird die Liste aus Adminsicht angezeigt.\r\n */\r\n\r\nclass AdminProjectList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let expandedID = null;\r\n\r\n    if (this.props.location.expandProject) {\r\n      expandedID = this.props.location.expandProject.getID();\r\n    }\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n        projects: [],\r\n        error: null,\r\n        loadingInProgress: false,\r\n        expandedProjectID: expandedID,\r\n    };\r\n  }\r\n\r\n  onExpandedStateChange = project => {\r\n    //Expandierenden Projekteintrag standardmäßig auf Null setzen\r\n    let newID = null;\r\n\r\n    //Wenn derselbe Projekteintrag angeklickt wird, wird er zugeklappt, andernfalls wird ein neuer Eintrag expandiert\r\n    if (project.getID() !== this.state.expandedProjectID) {\r\n      newID = project.getID();\r\n    }\r\n\r\n    this.setState({\r\n      expandedProjectID: newID,\r\n    });\r\n  }\r\n\r\n  getProjects = () => {\r\n    ProjectAPI.getAPI().getProjects()\r\n      .then(projectBOs =>\r\n        this.setState({                                                          //Neuen Zustand setzen, wenn ProjectBOs fetched wurde\r\n          projects: projectBOs,\r\n          loadingInProgress: false,                                             //Ladeanzeige deaktivieren \r\n          error: null\r\n        })).catch(e =>\r\n          this.setState({                                                      // Zustand zurücksetzen nach dem Fehlercatch \r\n            projects: [],\r\n            loadingInProgress: false,                                         //Ladeanzeige deaktivieren \r\n            error: e\r\n          })\r\n        );\r\n\r\n    // setzen des Ladens auf true\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      error: null\r\n    });\r\n  }\r\n\r\n  /** Lifecycle-Methode, die aufgerufen wird, wenn die Komponente in das DOM des Browsers eingefügt wird */\r\n  componentDidMount() {\r\n    this.getProjects();\r\n  }\r\n\r\n   \r\n  projectDeleted = project => {\r\n    const newProjectList = this.state.projects.filter(projectFromState => projectFromState.getID() !== project.getID());\r\n    this.setState({\r\n      projects: newProjectList,\r\n    });\r\n  }\r\n\r\n\r\n    /** Rendern der Komponente */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { projects, loadingInProgress, error, } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <List className={classes.projectList}>\r\n        { \r\n          projects.map(project => <AdminProjectListEntry key={project.getID()} project={project} \r\n          show={this.props.show}  \r\n          onExpandedStateChange={this.onExpandedStateChange}\r\n          onProjectDeleted={this.projectDeleted} \r\n          show={this.props.show}/>)\r\n        }\r\n\r\n          <ListItem>\r\n            <LoadingProgress show={loadingInProgress} />\r\n            <ContextErrorMessage error={error} contextErrorMsg={`The list of projects could not be loaded.`} onReload={this.getProjects} />\r\n          </ListItem>\r\n\r\n        </List>\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '90%',\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(10),\r\n  },\r\n\r\n});\r\n\r\n/** PropTypes */\r\nAdminProjectList.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n\r\n  show: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(AdminProjectList));","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\r\nimport { List, ListItem, Paper } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\n\r\nclass StudentListEntry extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      // Init the state\r\n      this.state = {\r\n        student: props.student,\r\n        \r\n      };\r\n    }\r\n\r\n  /** Handler Funktion für das untergeordnete Aufklappprojekt */\r\n  expansionPanelStateChanged = () => {\r\n    this.props.onExpandedStateChange(this.props.student);\r\n  }\r\n\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    const { student } = this.state;\r\n\r\n \r\n    return (\r\n\r\n      student ?\r\n\r\n      <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n        \r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={`student${student.getID()}studentpanel-header`}\r\n          >\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='body1' className={classes.heading}>{student.getName()}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <List>\r\n              <Zoom in={true} style={{ transitionDelay: true ? '1200ms' : '0ms' }}><ListItem>ID: {student.getID()} </ListItem></Zoom>\r\n              <Zoom in={true} style={{ transitionDelay: true ? '1700ms' : '0ms' }}><ListItem>Matrikelnummer: {student.getMatriculationNumber()} </ListItem></Zoom> \r\n              <Zoom in={true} style={{ transitionDelay: true ? '2200ms' : '0ms' }}><ListItem>Studiengang: {student.getCourse()} </ListItem></Zoom>\r\n            </List>\r\n            </AccordionDetails>\r\n         \r\n        </Accordion>\r\n\r\n       \r\n\r\n        : null \r\n    );\r\n  }\r\n}\r\n\r\n\r\n/** Komponentenspezifisches Styeling */\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\nStudentListEntry.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    StudentListEntry: PropTypes.object.isRequired,\r\n    expandedState: PropTypes.bool.isRequired,\r\n    onExpandedStateChange: PropTypes.func.isRequired,\r\n    }\r\n  \r\nexport default withStyles(styles)(StudentListEntry);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, List, ListItem } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ProjectAPI  from '../api/ProjectAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport StudentListEntry from './StudentListEntry';\r\n\r\n/**  \r\n * Hier wird die Liste aller Studenten (für Dozenten und Admins) angezeigt.\r\n */\r\n\r\nclass StudentList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let expandedID = null;\r\n\r\n    if (this.props.location.expandProject) {\r\n      expandedID = this.props.location.expandProject.getID();\r\n    }\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n        students: [],\r\n        error: null,\r\n        loadingInProgress: false,\r\n        expandedProjectID: expandedID,\r\n    };\r\n  }\r\n\r\n  onExpandedStateChange = project => {\r\n    //Expandierenden Projekteintrag standardmäßig auf Null setzen\r\n    let newID = null;\r\n\r\n    //Wenn derselbe Projekteintrag angeklickt wird, wird er zugeklappt, andernfalls wird ein neuer Eintrag expandiert\r\n    if (project.getID() !== this.state.expandedProjectID) {\r\n      newID = project.getID();\r\n    }\r\n\r\n    this.setState({\r\n      expandedProjectID: newID,\r\n    });\r\n  }\r\n\r\n  getStudents = () => {\r\n    ProjectAPI.getAPI().getStudents()\r\n      .then(studentBOs =>\r\n        this.setState({                                                          //Neuen Zustand setzen, wenn ProjectBOs fetched wurde\r\n          students: studentBOs,\r\n          loadingInProgress: false,                                             //Ladeanzeige deaktivieren \r\n          error: null\r\n        })).catch(e =>\r\n          this.setState({                                                      // Zustand zurücksetzen nach dem Fehlercatch \r\n            students: [],\r\n            loadingInProgress: false,                                         //Ladeanzeige deaktivieren \r\n            error: e\r\n          })\r\n        );\r\n\r\n    // setzen des Ladens auf true\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      error: null\r\n    });\r\n  }\r\n\r\n  /** Lifecycle-Methode, die aufgerufen wird, wenn die Komponente in das DOM des Browsers eingefügt wird */\r\n  componentDidMount() {\r\n    this.getStudents();\r\n  }\r\n\r\n\r\n\r\n    /** Rendern der Komponente */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { students, loadingInProgress, error } = this.state;\r\n\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        \r\n        <List className={classes.studentList}>\r\n        \r\n        { \r\n          students.map(student => <StudentListEntry key={student.getID()} student={student} \r\n          show={this.props.show}  \r\n          onExpandedStateChange={this.onExpandedStateChange}\r\n          show={this.props.show}/>)\r\n        }\r\n        \r\n\r\n          <ListItem>\r\n            <LoadingProgress show={loadingInProgress} />\r\n            <ContextErrorMessage error={error} contextErrorMsg={`Die Studenten können nicht angezeigt werden.`} onReload={this.getStudents} />\r\n          </ListItem>\r\n\r\n        </List>\r\n        \r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '90%',\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(10),\r\n  },\r\n\r\n});\r\n\r\n/** PropTypes */\r\nStudentList.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n\r\n  show: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(StudentList));","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ProjectAPI  from '../../api/ProjectAPI';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\n\r\n/*Das Dialog Fenster um einzelne Studenten aus der Teilnehmerliste zu entfernen\r\n\r\nDiese Funktion ist möglich, solange das Projekt die State ID 3 (genehmigt), 4 (in Bewertung) \r\nund gegebenenfalls 5 (Bewertung abgeschlossen) hat.*/\r\n\r\n\r\nclass ParticipantDeleteDialog extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init the state\r\n    this.state = {\r\n      deletingInProgress: false,\r\n      deletingError: null,\r\n    };\r\n  }\r\n\r\n  /** Löschen der Teilnahme */\r\n  deleteParticipation = () => {\r\n    ProjectAPI.getAPI().deleteParticipation(this.props.participation.getID()).then(participation => {\r\n      this.setState({\r\n        deletingInProgress: false,                              // Ladeanzeige deaktivieren  \r\n        deletingError: null                                     // keine Fehlermeldung\r\n      });\r\n      this.props.onClose(this.props.participation);             // Die übergeordnete Komponente mit der gelöschten Teilnahme aufrufen\r\n    }).catch(e =>\r\n      this.setState({\r\n        deletingInProgress: false,                              // Ladeanzeige deaktivieren \r\n        deletingError: e                                        // Anzeigen der Fehlermeldung\r\n      })\r\n    );\r\n\r\n    \r\n    //Laden auf true setzen\r\n    this.setState({\r\n      deletingInProgress: true,                                 // Anzeigen des Ladestates  \r\n      deletingError: null                                       // Fehlermeldung deaktivieren \r\n    });\r\n  }\r\n\r\n  /** Auszuführende Anweisung beim Schließen des Dialogs */\r\n  handleClose = () => {\r\n    this.props.onClose(null);\r\n  }\r\n\r\n\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes, show, participation } = this.props;\r\n    const { deletingInProgress, deletingError } = this.state;\r\n\r\n    return (\r\n      <div>\r\n      { show ?\r\n        <Dialog open={show} onClose={this.handleClose}>\r\n          <DialogTitle id='delete-dialog-title'>Teilnehmer entfernen\r\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Sind Sie sicher, dass Sie den Teilnehmer (ID: {participation.getStudentID()}) löschen möchten?\r\n            </DialogContentText>\r\n            <LoadingProgress show={deletingInProgress} />\r\n            <ContextErrorMessage error={deletingError} contextErrorMsg={`The participant (ID: ${participation.getStudentID()}) could not be deleted.`}\r\n              onReload={this.getParticipant} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color='secondary'>\r\n              Abbrechen\r\n            </Button>\r\n            <Button variant='contained' onClick={this.deleteParticipation} color='primary'>\r\n              Entfernen\r\n            </Button> \r\n          </DialogActions>\r\n        </Dialog>\r\n      : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nParticipantDeleteDialog.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  /**Ein Teilnahme-Objekt welches entfernt werden soll*/\r\n  participation: PropTypes.object.isRequired,\r\n\r\n  /** Anzeigen des Dialog-Fensters */\r\n  show: PropTypes.bool.isRequired,\r\n\r\n  /** Schließen des Dialog-Fensters */\r\n  onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(ParticipantDeleteDialog);\r\n","//Feld um den Studenten als Dozent/ Admin zu bewerten\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField } from '@material-ui/core';\r\nimport { MenuItem, FormControl, InputLabel, Select, Typography, Grid} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ProjectAPI  from '../../api/ProjectAPI';\r\nimport ParticipationBO  from '../../api/ParticipationBO';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\n\r\n\r\n\r\nclass ValidationForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //Typzuweisung der Variablen\r\n    let v = 0;\r\n    let m = 0;\r\n    let s = 0;\r\n    let p = 0;\r\n    \r\n\r\n    //Abruf der Variablen aus dem ProjectBO\r\n    if (props.participation) {\r\n        v = props.participation.getValidationID();\r\n        m = props.participation.getModuleID();\r\n        s = props.participation.getStudentID();\r\n        p = props.participation.getProjectID();\r\n      }\r\n\r\n    // Init the state\r\n    this.state = {\r\n      validation: v,\r\n      module: m,\r\n      student: s,\r\n      project: p,\r\n      participation: this.props.participation,\r\n\r\n      \r\n      // Ladebalken und Error\r\n      updatingInProgress: false,\r\n      updatingError: null\r\n    };\r\n\r\n    // Beim Schließen des Dialogs soll der Anfangszustand wieder hergestellt werden\r\n    this.baseState = this.state;\r\n  }\r\n\r\n\r\n\r\n  /** Änderung der Bewertung */\r\n  updateValidation = () => {\r\n    let updatedValidation = Object.assign(new ParticipationBO(), this.props.participation);\r\n  // setzen der neuen Attribute vom Dialog\r\n  updatedValidation.setModuleID(this.state.module);\r\n    updatedValidation.setProjectID(this.state.project);\r\n    updatedValidation.setStudentID(this.state.student);\r\n    updatedValidation.setValidationID(this.state.validation);\r\n    ProjectAPI.getAPI().updateValidation(updatedValidation).then(participation => {\r\n      this.setState({\r\n        updatingInProgress: false,                                  // Ladeanzeige deaktivieren   \r\n        updatingError: null                                         // Keine Fehlermeldung\r\n      });\r\n      // den neuen Zustand als Basiszustand beibehalten\r\n      this.baseState.validation = this.state.validation;\r\n      this.baseState.module = this.state.module;\r\n      this.baseState.student = this.state.student;\r\n      this.baseState.project = this.state.project;\r\n      this.props.onClose(updatedValidation);                        // Die übergeordnete Komponente mit dem State aufrufen\r\n    }).catch(e =>\r\n      this.setState({\r\n        updatingInProgress: false,                                  // Ladeanzeige deaktivieren \r\n        updatingError: e                                            // Fehlermeldung anzeigen\r\n      })\r\n    );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      updatingInProgress: true,                                   // Ladeanzeige anzeigen\r\n      updatingError: null                                         // Fehlermeldung deaktivieren\r\n    });\r\n  } \r\n\r\n  \r\n\r\n  /** Auszuführende Anweisung beim Schließen des Dialogs */\r\n  handleClose = () => {\r\n    // Zurücksetzen des Zustands\r\n    this.setState(this.baseState);\r\n    this.props.onClose(null);\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n        validation: event.target.value\r\n    });}\r\n\r\n  \r\n\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes, show } = this.props;\r\n    const { validation } = this.state;\r\n    const { updatingInProgress, updatingError } = this.state;\r\n\r\n\r\n    let title = 'Notenvergabe';\r\n    let header = 'Tragen Sie eine Note ein';\r\n\r\n    return (\r\n      show ?\r\n        <Dialog open={show} onClose={this.handleClose} maxWidth='xs'>\r\n          <DialogTitle id='form-dialog-title'>{title}\r\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              {header}\r\n            </DialogContentText>\r\n            <form className={classes.root} noValidate autoComplete='off'>\r\n\r\n            <Typography>Note</Typography>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                <Select\r\n                  value={validation}\r\n                  onChange={this.handleChange}\r\n                >\r\n                  <MenuItem value={2}>1,0</MenuItem>\r\n                  <MenuItem value={3}>1,3</MenuItem>\r\n                  <MenuItem value={4}>1,7</MenuItem>\r\n                  <MenuItem value={5}>2,0</MenuItem>\r\n                  <MenuItem value={6}>2,3</MenuItem>\r\n                  <MenuItem value={7}>2,7</MenuItem>\r\n                  <MenuItem value={8}>3,0</MenuItem>\r\n                  <MenuItem value={9}>3,3</MenuItem>\r\n                  <MenuItem value={10}>3,7</MenuItem>\r\n                  <MenuItem value={11}>4,0</MenuItem>\r\n                  <MenuItem value={12}>4,7</MenuItem>\r\n                  <MenuItem value={13}>5,0</MenuItem>\r\n                  <MenuItem value={14}>bestanden</MenuItem>\r\n                  <MenuItem value={15}>nicht bestanden</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n          \r\n\r\n          \r\n            </form>\r\n\r\n            <Typography>Dozenten müssen je nach Kurs (1) eine Benotung (gängig) (2) bestanden / nicht bestanden (z. B. in den Schlüsselkompetenzen) angeben\r\n            </Typography>\r\n\r\n            <LoadingProgress show={updatingInProgress} />\r\n            <ContextErrorMessage error={updatingError} contextErrorMsg={`Es ist ein Fehler aufgetreten.`} onReload={this.updateValidation} />\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color='secondary'>\r\n              Abbrechen\r\n            </Button>\r\n\r\n            <Button variant='contained' onClick={this.updateValidation} color='primary'>\r\n              Speichern\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        : null\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 300,\r\n  },\r\n});\r\n\r\n/** PropTypes */\r\nValidationForm.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  show: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(ValidationForm);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, Typography, Grid, ButtonGroup } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\nimport  ProjectAPI  from '../api/ProjectAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport ParticipantDeleteDialog from './dialogs/ParticipantDeleteDialog';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport red from '@material-ui/core/colors/red';\r\nimport ValidationForm from './dialogs/ValidationForm';\r\n\r\n\r\n\r\n\r\n/**  \r\n * Hier wird ein einzelner Student in der Teilnehmerliste eines Projekts angezeigt, um diesen gegebenenfalls Bewerten/ Entfernen zu können\r\n */\r\n\r\nclass ParticipantList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n        project: props.project,\r\n        participation: props.participation,\r\n        student: null,\r\n        showParticipationDeleteDialog: false,\r\n        showValidationForm: false,\r\n        error: null,\r\n        loadingInProgress: false,\r\n\r\n    };\r\n  }\r\n\r\n\r\n  getParticipant = () => {\r\n    ProjectAPI.getAPI().getStudentbyId(this.state.participation.getStudentID())\r\n        .then (StudentBO => {\r\n            this.setState({ student: StudentBO });\r\n        })\r\n      }\r\n\r\n\r\n  getValidationbyId = () => {\r\n    ProjectAPI.getAPI().getValidationbyId(this.state.participation.getValidationID())\r\n        .then(validationBO => \r\n          this.setState({ validation: validationBO }))\r\n        .catch(e =>\r\n          this.setState({ \r\n            error: e\r\n        })\r\n        )}\r\n\r\n  /** Lifecycle-Methode, die aufgerufen wird, wenn die Komponente in das DOM des Browsers eingefügt wird */\r\n  componentDidMount() {\r\n    this.getParticipant();\r\n    this.getValidationbyId();\r\n  }\r\n\r\n  /** Handlerfunktion die aufgerufen wird, wenn der \"Teilnehmer entfernen\" Knopf gedrückt wird */\r\n  deleteParticipationButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showParticipationDeleteDialog: true\r\n    });\r\n  }\r\n\r\n  /** Handlerfunktion die aufgerufen wird, wenn das \"Teilnehmer entfernen\" Fenster geschlossen werden soll */\r\n  deleteParticipationDialogClosed = (participation) => {\r\n    if (participation) {\r\n      this.props.onParticipationDeleted(participation);\r\n    };\r\n\r\n    // Das Dialog-Fenster nicht anzeigen\r\n    this.setState({\r\n      showParticipationDeleteDialog: false\r\n    });\r\n  }\r\n\r\n\r\n  /** Handlerfunktion die aufgerufen wird, wenn der \"Teilnehmer bewerten\" Knopf gedrückt wird */\r\n  validateParticipantButtonClicked = event => {\r\n    // Do not toggle the expanded state\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showValidationForm: true\r\n    });\r\n  }\r\n\r\n  /** Handlerfunktion die aufgerufen wird, wenn das \"Teilnehmer bewerten\" Fenster geschlossen werden soll */\r\n  validationFormClosed = (participation) => {\r\n    // validation is not null and therefor changed\r\n    if (participation) {\r\n      return(this.setState({\r\n        participation: participation,\r\n        showValidationForm: false,\r\n      }),\r\n      this.getValidationbyId())\r\n    } else {\r\n      this.setState({\r\n        showValidationForm: false\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { loadingInProgress, student, participation, error, showParticipationDeleteDialog, validation, showValidationForm, project } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        { student && participation && validation ?\r\n        \r\n        <Grid className = {classes.root} container spacing={1} justify='flex-start'>\r\n\r\n            <Grid item>\r\n                <Typography className = {classes.font} > {student.getName()} </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              { project.getStateID() === 4 ?\r\n              <ButtonGroup variant='text' size='small'>\r\n                <Button size='small' className={classes.validate} onClick = {this.validateParticipantButtonClicked}>\r\n                  Bewerten\r\n                </Button>\r\n                <Button size='small' className={classes.delete} onClick = {this.deleteParticipationButtonClicked}>\r\n                  Entfernen\r\n                </Button>\r\n              </ButtonGroup>\r\n              : null }\r\n                \r\n              <LoadingProgress show={loadingInProgress} />\r\n            <ContextErrorMessage error={error} contextErrorMsg={`The list of participations could not be loaded.`} onReload={this.getParticipant} />\r\n            </Grid>\r\n            <Grid item = {3} />\r\n            <Grid>\r\n                <Button display=\"flex\" justifyContent=\"flex-end\" className = {classes.box} size='small' variant=\"outlined\"  >\r\n                {validation.getGrade()}\r\n                </Button>  \r\n            </Grid>\r\n            \r\n        </Grid>\r\n\r\n        : null}\r\n\r\n      <ValidationForm show={showValidationForm} participation={participation} onClose={this.validationFormClosed} />\r\n      <ParticipantDeleteDialog show={showParticipationDeleteDialog} participation={participation} onClose={this.deleteParticipationDialogClosed} />\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '90%',\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  font: {\r\n    fontSize: 15,\r\n  },\r\n  validate: {\r\n    width: '100%',\r\n    color: indigo[300],\r\n    fontSize: 10,\r\n  },\r\n  delete: {\r\n    width: '100%',\r\n    color: red[500],\r\n    fontSize: 10,\r\n  },\r\n  replay: {\r\n    color: indigo[500],\r\n  },\r\n  box: {\r\n    width: '100%',\r\n    color: indigo[500],\r\n    borderColor: indigo[500],\r\n    \r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nParticipantList.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n\r\n  show: PropTypes.bool.isRequired,\r\n\r\n  student: PropTypes.object.isRequired,\r\n  onParticipationDeleted: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(ParticipantList));","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProjectAPI from '../../api/ProjectAPI';\r\nimport ProjectBO from '../../api/ProjectBO';\r\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\n\r\n//Wenn ein Dozent alle Teilnehmer bewertet hat, muss er die Bewertung abschließen. Dies kann auch der Admin machen.\r\n\r\nclass ProjectEvaluatedForm extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      //Typzuweisung der Variablen\r\n      let n = \"\";\r\n      let u = 0;\r\n      let p = 0;\r\n      let s = 0;\r\n      let sid = 0;\r\n      let aid = 0;\r\n      let pd = \"\";\r\n      let ps = \"\";\r\n      let c = 0;\r\n      let pr = \"\";\r\n      let b = \"\";\r\n      let bf = \"\";\r\n      let bs = \"\";\r\n      let pb = \"\";\r\n      let a = \"\";\r\n      let w = \"\";\r\n\r\n      //Abruf der Variablen aus dem ProjectBO\r\n      if (props.project) {\r\n        n = props.project.getName();\r\n        u = props.project.getUserID();\r\n        p = props.project.getProjectTypeID();\r\n        s = props.project.getStateID();\r\n        sid = props.project.getSemesterID();\r\n        aid = props.project.getAssignmentID();\r\n        pd = props.project.getProjectDescription();\r\n        ps = props.project.getPartners();\r\n        c = props.project.getCapacity();\r\n        pr = props.project.getPreferredBDays ();\r\n        b = props.project.getBDaysPreSchedule();\r\n        bf = props.project.getBDaysFinale();\r\n        bs = props.project.getBDaysSaturdays();\r\n        pd = props.project.getPreferredBDays();\r\n        a = props.project.getAdditionalLecturer();\r\n        w = props.project.getWeekly();\r\n\r\n      }\r\n    \r\n  \r\n      // Init the state\r\n      this.state = {\r\n        name: n,\r\n        user_id: u,\r\n        project_type_id: p,\r\n        state_id: s,\r\n        semester_id: sid,\r\n        assignment_id: aid,\r\n        project_description: pd,\r\n        partners: ps,\r\n        capacity: c,\r\n        preferred_room: pr,\r\n        b_days_pre_schedule: b,\r\n        b_days_finale: bf,\r\n        b_days_saturdays: bs,\r\n        preferred_b_days: pb,\r\n        additional_lecturer: a,\r\n        weekly:w,\r\n\r\n        project: this.props.project,\r\n\r\n        // Ladebalken und Error\r\n        updatingInProgress: false,\r\n        updatingError: null\r\n\r\n      };\r\n      //der State wird als Basiszustand gespeichert\r\n      this.baseState = this.state;\r\n    }\r\n\r\n/** Setzen des Zustands auf Bewertung abgeschlossen*/\r\nsaveProjectEvaluation= () => {\r\n  // Duplizieren des ProjectBOs im Falle eines Fehlerhaften API-Calls\r\n  let updatedState = Object.assign(new ProjectBO(), this.props.project);\r\n\r\n  // setzen der neuen Attribute vom Dialog\r\n  updatedState.setName(this.state.name);\r\n  updatedState.setUserID(this.state.user_id);\r\n  updatedState.setProjectTypeID(this.state.project_type_id);\r\n  updatedState.setStateID(5);\r\n  updatedState.setSemesterID(this.state.semester_id);\r\n  updatedState.setAssignmentID(this.state.assignment_id);\r\n  updatedState.setProjectDescription(this.state.project_description);\r\n  updatedState.setPartners(this.state.partners);\r\n  updatedState.setCapacity(this.state.capacity);\r\n  updatedState.setPreferredBDays(this.state.preferred_b_days);\r\n  updatedState.setBDaysPreSchedule(this.state.b_days_pre_schedule);\r\n  updatedState.setBDaysFinale(this.state.b_days_finale);\r\n  updatedState.setBDaysSaturdays(this.state.b_days_saturdays);\r\n  updatedState.setPreferredBDays(this.state.preferred_b_days);\r\n  updatedState.setAdditionalLecturer(this.state.additional_lecturer);\r\n  updatedState.setWeekly(this.state.weekly);\r\n\r\n  ProjectAPI.getAPI().updateProject(updatedState).then(project => {\r\n    this.setState({\r\n      updatingInProgress: false,                                        //Ladeanzeige deaktivieren \r\n      updatingError: null                                               //Keine Fehlermeldung\r\n    });\r\n                                                                        //Den neuen Zustand als Basiszustand beibehalten\r\n    this.baseState.name = this.state.name;\r\n    this.baseState.user_id = this.state.user_id;\r\n    this.baseState.project_type_id = this.state.project_type_id;\r\n    this.baseState.state_id = this.state.state_id;\r\n    this.baseState.semester_id = this.state.semester_id;\r\n    this.baseState.assignment_id = this.state.assignment_id;\r\n    this.baseState.project_description = this.state.project_description;\r\n    this.baseState.partners = this.state.partners;\r\n    this.baseState.capacity = this.state.capacity;\r\n    this.baseState.preferred_b_days = this.state.preferred_b_days;\r\n    this.baseState.b_days_pre_schedule = this.state.b_days_pre_schedule;\r\n    this.baseState.b_days_finale = this.state.b_days_finale;\r\n    this.baseState.b_days_saturdays = this.state.b_days_saturdays;\r\n    this.baseState.preferred_b_days = this.state.preferred_b_days;\r\n    this.baseState.additional_lecturer = this.state.additional_lecturer;\r\n    this.baseState.weekly = this.state.weekly;\r\n    \r\n    this.props.onClose(updatedState);                                     // Die übergeordnete Komponente mit dem State aufrufen\r\n  }).catch(e =>\r\n    this.setState({\r\n      updatingInProgress: false,                                          //Ladeanzeige deaktivieren \r\n      updatingError: e                                                    // Anzeigen der Fehlermeldung \r\n    })\r\n  );\r\n\r\n  // Setzen des Ladens auf true\r\n  this.setState({\r\n    updatingInProgress: true,                                           //Ladeanzeige anzeigen\r\n    updatingError: null                                                 //Fehlermeldung deaktivieren \r\n  });\r\n} \r\n\r\n  /** Auszuführende Anweisung beim Schließen des Dialogs */\r\n  handleClose = () => {\r\n    this.props.onClose(null);\r\n  }\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes, project, show } = this.props;\r\n    const { updatingError, updatingInProgress } = this.state;\r\n\r\n    return ( \r\n       show ? \r\n        <Dialog open={show} onClose={this.handleClose}>\r\n          <DialogTitle id='ProjectEvaluated-Title'>Notenvergabe abschließen\r\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Ist die Bewertung zu folgendem Projekt abgeschlossen: '{project.getName()}' (ID: {project.getID()})?\r\n              Bei Bestätigung sind Änderungen nur durch Rücksprache mit einem Admin möglich.\r\n            </DialogContentText>\r\n            <LoadingProgress show={updatingInProgress} />\r\n            <ContextErrorMessage error={updatingError} contextErrorMsg={`Die Bewertung für das Projekt ${project.getID()} konnte nicht bestätigt werden.`} onReload={this.saveProjectEvaluation} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color='secondary'>\r\n              Abbrechen\r\n            </Button>\r\n            <Button variant='contained' onClick={this.saveProjectEvaluation} color='primary'>\r\n              Bestätigen\r\n            </Button> \r\n          </DialogActions>\r\n        </Dialog> \r\n        :null\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\n  ProjectEvaluatedForm.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n\r\n    /** Projekt welches für den Zustand geändert werden soll*/\r\n    project: PropTypes.object.isRequired,\r\n    /** Wenn true, wird der Dialog gerendert */\r\n\r\n    show: PropTypes.bool.isRequired,\r\n    /** Handler Funktion welche aufgerufen wird, wenn der Dialog geschlossen ist.*/\r\n    onClose: PropTypes.func.isRequired,\r\n  }\r\n  \r\n  export default withStyles(styles)(ProjectEvaluatedForm);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ProjectAPI  from '../../api/ProjectAPI';\r\nimport ParticipationBO  from '../../api/ParticipationBO';\r\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport { MenuItem, FormControl, InputLabel, Select, Typography, Grid, TextField } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\n\r\n/*Das Fenster um Teilnehmer einem Projekt hinzuzufügen.\r\nDabei werden Studenten ID und Modul ID erfordert. */\r\n\r\n\r\nclass ParticipationForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let pid = 0;\r\n\r\n    //Abruf der Variablen aus dem ProjectBO\r\n    if (props.project) {\r\n      pid = props.project.getID();\r\n    }\r\n      \r\n    // Init the state\r\n      this.state = {\r\n          module_id: 0,\r\n\r\n          student_id: 0,\r\n          studentIDValidationFailed: false,\r\n\r\n          project_id: pid,\r\n\r\n          // Ladebalken und Error\r\n          addingInProgress: false,\r\n          addingError: null\r\n      };\r\n      \r\n      this.baseState = this.state;\r\n  }\r\n\r\n\r\n  /** Hinzufügen einer Teilnahme für ein Projekt */\r\n  addParticipation = () => {\r\n    let newParticipation = new ParticipationBO( this.state.module_id, this.state.project_id, this.state.student_id, 1 ); \r\n   \r\n    ProjectAPI.getAPI().addParticipation(newParticipation).then(participation => {\r\n      // Backend-Aufruf erfolgreich\r\n      // Leeren des Zustandes des Dialogs für die neue leere Participation\r\n      this.setState(this.baseState);\r\n      this.props.onClose(participation); // das übergeordnete Objekt mit der Teilnahme aus dem Backend aufrufen\r\n    }).catch(e =>\r\n      this.setState({\r\n        addingInProgress: false,    // Ladeanzeige deaktivieren \r\n        addingError: e              // Fehlermeldung anzeigen\r\n      })\r\n    );\r\n\r\n    // setzen des Status auf true\r\n    this.setState({\r\n        addingInProgress: true,       // Ladeanzeige anzeigen\r\n        addingError: null             // Fehlermeldung deaktivieren\r\n    }\r\n    );\r\n  }\r\n\r\n  /** Auszuführende Anweisung beim Schließen des Dialogs */\r\n  handleClose = () => {\r\n    // Zurücksetzen des Zustands\r\n    this.setState(this.baseState);\r\n    this.props.onClose(null);\r\n  }\r\n\r\n  /**  Handlerfunktion für Wertänderungen und deren Validierung in Formulartextfeldern */\r\n  textFieldValueChange = (event) => {\r\n    const value = event.target.value;\r\n\r\n    let error = false;\r\n    if (value.trim().length === 0) {\r\n      error = true;\r\n    }\r\n\r\n    this.setState({\r\n      [event.target.id]: event.target.value,\r\n      [event.target.id + 'ValidationFailed']: error,\r\n      [event.target.id + 'Edited']: true\r\n    });\r\n  } \r\n\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n        module_id: event.target.value\r\n    });}\r\n\r\n\r\n/** Rendern der Komponente */\r\nrender() {\r\n  const { classes, show, project } = this.props;\r\n  const { module_id, student_id, studentIDValidationFailed } = this.state;\r\n  const { addingInProgress, addingError } = this.state;\r\n\r\n  let title = 'Neuen Teilnehmer hinzufügen';\r\n  let header = 'Füllen Sie das Formular aus';\r\n\r\n  return (\r\n    show && project ?\r\n      <Dialog open={show} onClose={this.handleClose} maxWidth='xs'>\r\n        <DialogTitle id='form-dialog-title'>{title}\r\n          <IconButton className={classes.closeButton} onClick={this.handleClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {header}\r\n          </DialogContentText>\r\n          <form className={classes.root} noValidate autoComplete='off'>\r\n          \r\n          { project.getAssignmentID() === 1 ?\r\n          <Grid>\r\n            <Typography>Modul</Typography>\r\n              <FormControl className={classes.formControl}>\r\n                  <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                  <Select\r\n                    value={module_id}\r\n                    onChange={this.handleChange}\r\n                  > \r\n                    <MenuItem value={1}>338005</MenuItem>\r\n                    <MenuItem value={2}>338006</MenuItem>\r\n                    <MenuItem value={3}>338007</MenuItem>\r\n                    <MenuItem value={4}>338008</MenuItem>\r\n                    <MenuItem value={5}>338009</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n            : project.getAssignmentID() === 2 ?\r\n            <Grid>\r\n            <Typography>Modul</Typography>\r\n              <FormControl className={classes.formControl}>\r\n                  <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                  <Select\r\n                    value={module_id}\r\n                    onChange={this.handleChange}\r\n                  > \r\n                    <MenuItem value={6}>338010</MenuItem>\r\n                    <MenuItem value={7}>338011</MenuItem>\r\n                    <MenuItem value={8}>338012</MenuItem>\r\n                    <MenuItem value={9}>338013</MenuItem>\r\n                    <MenuItem value={10}>338014</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              : project.getAssignmentID() === 3 ?\r\n              <Grid>\r\n              <Typography>Modul</Typography>\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                    <Select\r\n                      value={module_id}\r\n                      onChange={this.handleChange}\r\n                    > \r\n                      <MenuItem value={11}>338015</MenuItem>\r\n                      <MenuItem value={12}>338016</MenuItem>\r\n                      <MenuItem value={13}>338017</MenuItem>\r\n                      <MenuItem value={14}>338018</MenuItem>\r\n                      <MenuItem value={15}>338019</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                : project.getAssignmentID() === 4 ?\r\n                <Grid>\r\n                <Typography>Modul</Typography>\r\n                  <FormControl className={classes.formControl}>\r\n                      <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                      <Select\r\n                        value={module_id}\r\n                        onChange={this.handleChange}\r\n                      > \r\n                        <MenuItem value={16}>338020</MenuItem>\r\n                        <MenuItem value={17}>338021</MenuItem>\r\n                        <MenuItem value={18}>338022</MenuItem>\r\n                        <MenuItem value={19}>338023</MenuItem>\r\n                        <MenuItem value={20}>338024</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  : project.getAssignmentID() === 5 ?\r\n                  <Grid>\r\n                  <Typography>Modul</Typography>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                        <Select\r\n                          value={module_id}\r\n                          onChange={this.handleChange}\r\n                        > \r\n                          <MenuItem value={21}>338025</MenuItem>\r\n                          <MenuItem value={22}>338026</MenuItem>\r\n                          <MenuItem value={23}>338027</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Grid>\r\n                    : project.getAssignmentID() === 6 ?\r\n                    <Grid>\r\n                    <Typography>Modul</Typography>\r\n                      <FormControl className={classes.formControl}>\r\n                          <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                          <Select\r\n                            value={module_id}\r\n                            onChange={this.handleChange}\r\n                          > \r\n                            <MenuItem value={24}>338028</MenuItem>\r\n                            <MenuItem value={25}>338029</MenuItem>\r\n                            <MenuItem value={26}>338030</MenuItem>\r\n                          </Select>\r\n                        </FormControl>\r\n                      </Grid>\r\n                      : project.getAssignmentID() === 7 ?\r\n                      <Grid>\r\n                      <Typography>Modul</Typography>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                            <Select\r\n                              value={module_id}\r\n                              onChange={this.handleChange}\r\n                            > \r\n                              <MenuItem value={27}>338031</MenuItem>\r\n                              <MenuItem value={28}>338032</MenuItem>\r\n                              <MenuItem value={29}>338033</MenuItem>\r\n                            </Select>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        : project.getAssignmentID() === 8 ?\r\n                        <Grid>\r\n                        <Typography>Modul</Typography>\r\n                          <FormControl className={classes.formControl}>\r\n                              <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                              <Select\r\n                                value={module_id}\r\n                                onChange={this.handleChange}\r\n                              > \r\n                                <MenuItem value={30}>338034</MenuItem>\r\n                                <MenuItem value={31}>338035</MenuItem>\r\n                                <MenuItem value={32}>338036</MenuItem>\r\n                              </Select>\r\n                            </FormControl>\r\n                          </Grid>\r\n                          : project.getAssignmentID() === 9 ?\r\n                          <Grid>\r\n                          <Typography>Modul</Typography>\r\n                            <FormControl className={classes.formControl}>\r\n                                <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                                <Select\r\n                                  value={module_id}\r\n                                  onChange={this.handleChange}\r\n                                > \r\n                                  <MenuItem value={33}>338037</MenuItem>\r\n                                  <MenuItem value={34}>338038</MenuItem>\r\n                                  <MenuItem value={35}>338039</MenuItem>\r\n                                </Select>\r\n                              </FormControl>\r\n                            </Grid>\r\n                            : project.getAssignmentID() === 10 ?\r\n                            <Grid>\r\n                            <Typography>Modul</Typography>\r\n                              <FormControl className={classes.formControl}>\r\n                                  <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                                  <Select\r\n                                    value={module_id}\r\n                                    onChange={this.handleChange}\r\n                                  > \r\n                                    <MenuItem value={36}>338040</MenuItem>\r\n                                    <MenuItem value={37}>338041</MenuItem>\r\n                                    <MenuItem value={38}>338042</MenuItem>\r\n                                  </Select>\r\n                                </FormControl>\r\n                              </Grid>\r\n                              : project.getAssignmentID() === 11 ?\r\n                              <Grid>\r\n                              <Typography>Modul</Typography>\r\n                                <FormControl className={classes.formControl}>\r\n                                    <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                                    <Select\r\n                                      value={module_id}\r\n                                      onChange={this.handleChange}\r\n                                    > \r\n                                      <MenuItem value={39}>338043</MenuItem>\r\n                                      <MenuItem value={40}>338044</MenuItem>\r\n                                      <MenuItem value={41}>338045</MenuItem>\r\n                                      <MenuItem value={42}>338046</MenuItem>\r\n                                    </Select>\r\n                                  </FormControl>\r\n                                </Grid>\r\n                                : null }\r\n\r\n\r\n          <TextField autoFocus type='number' required fullWidth margin='normal' id='student_id' label='Studenten ID:' value={student_id}\r\n          onChange={this.textFieldValueChange} error={studentIDValidationFailed} \r\n          helperText={studentIDValidationFailed ? 'Es muss eine Studenten ID eingegeben werden' : ' '} />\r\n\r\n          </form>\r\n\r\n          <LoadingProgress show={addingInProgress} />\r\n          <ContextErrorMessage error={addingError} contextErrorMsg={`Der Teilnehmer konnte nicht hinzugefügt werden. Überprüfen Sie, ob Sie alle Pflichtfelder ausgefüllt haben.`} onReload={this.addParticipation} />\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={this.handleClose} color='secondary'>\r\n            Abbrechen\r\n          </Button>\r\n\r\n          <Button disabled={studentIDValidationFailed} variant='contained' onClick={this.addParticipation} color='primary'>\r\n            Hinzufügen\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      : null\r\n  );\r\n}\r\n}\r\n  \r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 300,\r\n  },\r\n});\r\n\r\n/** PropTypes */\r\nParticipationForm.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  show: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(ParticipationForm);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\r\nimport { Button, ListItem, ButtonGroup } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ProjectAPI  from '../api/ProjectAPI';\r\nimport ParticipantList from './ParticipantList';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport ProjectEvaluatedForm from './dialogs/ProjectEvaluatedForm';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ParticipationForm from './dialogs/ParticipationForm';\r\n\r\n\r\nclass ProjectListEntryParticipants extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      // Init the state\r\n      this.state = {\r\n        project: props.project,\r\n        participations: [],\r\n        showEvaluatedProject: false,\r\n        disabled: true,\r\n        showParticipationForm: false,\r\n      };\r\n    }\r\n\r\n  /** Handlerfunktion für Veränderungen des Aufklapp-Panels */\r\n  expansionPanelStateChanged = () => {\r\n    this.props.onExpandedStateChange(this.props.project);\r\n  }\r\n\r\n\r\n  getParticipations = () => {\r\n    ProjectAPI.getAPI().getParticipationForProject(this.state.project.getID())\r\n        .then (participationBOs => {\r\n            this.setState({ participations: participationBOs });\r\n        })\r\n      }\r\n\r\n  getLecturer = () => {\r\n    ProjectAPI.getAPI().getUserByGoogleId(firebase.auth().currentUser.uid)   \r\n        .then (UserBO => {\r\n            this.setState({ user: UserBO });\r\n        })\r\n\r\n    }\r\n  \r\n  /** Lifecycle-Methode, die aufgerufen wird, wenn die Komponente in das DOM des Browsers eingefügt wird */\r\n  componentDidMount() {\r\n    this.getParticipations();\r\n    this.getLecturer();\r\n  }\r\n\r\n\r\n  participationDeleted = participant => {\r\n    const newParticipationList = this.state.participations.filter(participationFromState => participationFromState.getID() !== participant.getID());\r\n    this.setState({\r\n      participations: newParticipationList,\r\n    });\r\n  }\r\n\r\n\r\n  /** Handlerfunktion die aufgerufen wird, wenn der \"Bewertung abschließen\" Knopf gedrückt wird */\r\n  evaluatedProjectButtonClicked = event => {\r\n  event.stopPropagation();\r\n  this.setState({\r\n    showEvaluatedProject: true\r\n  });\r\n}\r\n\r\n  /** Handlerfunktion die aufgerufen wird, wenn das \"Bewertung abschließen\" Fenster geschlossen werden soll */\r\n  evaluatedProjectFormClosed = (participation) => {\r\n    if (participation) {\r\n      this.setState({\r\n        participation: participation,\r\n        showEvaluatedProject: false,\r\n        disabled: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showEvaluatedProject: false\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  /** Handlerfunktion die aufgerufen wird, wenn der \"Teilnehmer hinzufügen\" Knopf gedrückt wird */\r\n  addParticipantButtonClicked = event => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showParticipationForm: true\r\n    });\r\n  }\r\n\r\n  /** Handlerfunktion die aufgerufen wird, wenn das \"Teilnehmer hinzufügen\" Fenster geschlossen werden soll */\r\n  participationFormClosed = participation => {\r\n    // project is not null and therefore created\r\n    if (participation) {\r\n      return(this.setState({\r\n        participations: [...this.state.participations, participation],\r\n        showParticipationForm: false\r\n      }), this.getParticipations())\r\n    } else {\r\n      this.setState({\r\n        showParticipationForm: false\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    const { project, participations, user, showEvaluatedProject, showParticipationForm } = this.state;\r\n\r\n    return (\r\n\r\n      <div>\r\n      { participations && user && project.getUserID() === user.getID() && project.getStateID() === 1 ?\r\n      <Grid>\r\n      <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n                <Typography variant='body1' className={classes.font}>{project.getName()}\r\n                </Typography>\r\n            </Grid>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n              <Grid item xs = {10}>\r\n              <ListItem className={classes.heading}>Sie müssen auf eine Rückmeldung vom Admin warten.</ListItem>\r\n              </Grid>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n        </Grid>\r\n\r\n      : participations && user && project.getUserID() === user.getID() && project.getStateID() >= 3 ?\r\n      <Grid>\r\n      <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={`project${project.getID()}projectpanel-header`}\r\n          >\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='body1' className={classes.font}>{project.getName()}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            { project.getStateID() <= 4 && this.state.disabled ?\r\n            <Grid item>\r\n              <ButtonGroup variant='text' size='small'>\r\n                <Button color='secondary' startIcon={<AddIcon />} onClick={this.addParticipantButtonClicked}>\r\n                  Teilnehmer\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Grid>\r\n            : null }\r\n\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n              <Grid item xs = {10}>\r\n              \r\n              <ListItem className={classes.heading}>Teilnehmer</ListItem>\r\n              { \r\n                participations.map(participation => <ParticipantList key={participation.getID()} \r\n                project = {project}\r\n                participation={participation} \r\n                show={this.props.show}  \r\n                onExpandedStateChange={this.onExpandedStateChange}\r\n                onParticipationDeleted={this.participationDeleted}/>)\r\n              }\r\n\r\n            { this.state.disabled && project.getStateID() === 4 ?\r\n              <ListItem className={classes.button}>\r\n                <Button variant='outlined' color='primary' startIcon={<SendIcon />} onClick = {this.evaluatedProjectButtonClicked} >\r\n                  Bewertung abschließen\r\n                </Button>\r\n              </ListItem> \r\n            : null }\r\n\r\n              </Grid>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n        </Grid>\r\n      : null }\r\n      <ProjectEvaluatedForm show={showEvaluatedProject} project={project} onClose={this.evaluatedProjectFormClosed} />\r\n      <ParticipationForm show={showParticipationForm} project={project} onClose={this.participationFormClosed} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    font: {\r\n      fontSize: 23,\r\n      fontFamily: '\"Segoe UI\"',\r\n      color: indigo[700],\r\n    },\r\n    heading: {\r\n      fontSize: 17,\r\n      color: indigo[500],\r\n    },\r\n    button: {\r\n      marginTop: theme.spacing(3),\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\nProjectListEntryParticipants.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    expandedState: PropTypes.bool.isRequired,\r\n    onExpandedStateChange: PropTypes.func.isRequired\r\n    }\r\n  \r\nexport default withStyles(styles)(ProjectListEntryParticipants);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, List, ListItem} from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\nimport  ProjectAPI  from '../api/ProjectAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport ProjectListEntryParticipants from './ProjectListEntryParticipants';\r\n\r\n\r\n/**  \r\n * Hier wird die gesamte Liste aus Dozenten Sicht angezeigt. Man sieht die Projekte des angemeldeten Dozenten und deren Teilnehmer.\r\n */\r\n\r\nclass ProjectListParticipants extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let expandedID = null;\r\n\r\n    if (this.props.location.expandProject) {\r\n      expandedID = this.props.location.expandProject.getID();\r\n    }\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n        projects: [],\r\n        error: null,\r\n        loadingInProgress: false,\r\n        expandedProjectID: expandedID,\r\n    };\r\n  }\r\n\r\n  onExpandedStateChange = project => {\r\n    let newID = null;\r\n    if (project.getID() !== this.state.expandedProjectID) {\r\n      newID = project.getID();\r\n    }\r\n   \r\n    this.setState({\r\n      expandedProjectID: newID,\r\n    });\r\n  }\r\n\r\n  getProjects = () => {\r\n    ProjectAPI.getAPI().getProjects()\r\n      .then(projectBOs =>\r\n        this.setState({            \r\n          projects: projectBOs,\r\n          loadingInProgress: false,   \r\n          error: null\r\n        })).catch(e =>\r\n          this.setState({            \r\n            projects: [],\r\n            loadingInProgress: false, \r\n            error: e\r\n          })\r\n        );\r\n\r\n\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      error: null\r\n    });\r\n  }\r\n\r\n  /** Lifecycle-Methode, die aufgerufen wird, wenn die Komponente in das DOM des Browsers eingefügt wird */\r\n  componentDidMount() {\r\n    this.getProjects();\r\n  }\r\n\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { projects, loadingInProgress, error } = this.state;\r\n\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <List className={classes.projectList}>\r\n        { \r\n         \r\n          projects.map(project => <ProjectListEntryParticipants key={project.getID()} project={project} \r\n          show={this.props.show}  onExpandedStateChange={this.onExpandedStateChange}/>)\r\n        }\r\n\r\n          <ListItem>\r\n            <LoadingProgress show={loadingInProgress} />\r\n            <ContextErrorMessage error={error} contextErrorMsg={`The list of projects could not be loaded.`} onReload={this.getProjects} />\r\n          </ListItem>\r\n\r\n        </List>\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  customerFilter: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(1),\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nProjectListParticipants.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n\r\n  show: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(ProjectListParticipants));","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, Typography, Grid, ButtonGroup } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\nimport  ProjectAPI  from '../api/ProjectAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport ParticipantDeleteDialog from './dialogs/ParticipantDeleteDialog';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport red from '@material-ui/core/colors/red';\r\nimport ValidationForm from './dialogs/ValidationForm';\r\n\r\n\r\nclass AllParticipantList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n        project: props.project,\r\n        participation: props.participation,\r\n        student: null,\r\n        showParticipationDeleteDialog: false,\r\n        showValidationForm: false,\r\n        error: null,\r\n        loadingInProgress: false,\r\n\r\n    };\r\n  }\r\n\r\n\r\n  getParticipant = () => {\r\n    ProjectAPI.getAPI().getStudentbyId(this.state.participation.getStudentID())\r\n        .then (StudentBO => {\r\n            this.setState({ student: StudentBO });\r\n        })\r\n      }\r\n\r\n\r\n  getValidationbyId = () => {\r\n    ProjectAPI.getAPI().getValidationbyId(this.state.participation.getValidationID())   //Hier die ID des Studentens aufrufen --> this.state.studentId.getId()....vom StudentBO\r\n        .then(validationBO => \r\n          this.setState({ validation: validationBO }))\r\n        .catch(e =>\r\n          this.setState({ \r\n            error: e\r\n        })\r\n        )}\r\n\r\n  /** Lifecycle-Methode, die aufgerufen wird, wenn die Komponente in das DOM des Browsers eingefügt wird */\r\n  componentDidMount() {\r\n    this.getParticipant();\r\n    this.getValidationbyId();\r\n  }\r\n\r\n  /** Handlerfunktion die aufgerufen wird, wenn Teilnehmer Löschen geklickt wird */\r\n  deleteParticipationButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showParticipationDeleteDialog: true\r\n    });\r\n  }\r\n\r\n\r\n  /** Handlerfunktion die aufgerufen wird, wenn das Teilnehmer Löschen Fenster geschlossen werden soll */\r\n  deleteParticipationDialogClosed = (participation) => {\r\n\r\n    if (participation) {\r\n      this.props.onParticipationDeleted(participation);\r\n    };\r\n\r\n    // Der Dialog soll nicht angezeigt werden\r\n    this.setState({\r\n      showParticipationDeleteDialog: false\r\n    });\r\n  }\r\n\r\n\r\n  /** Handlerfunktion die aufgerufen wird, wenn Teilnehmer Bewerten geklickt wird */\r\n  validateParticipantButtonClicked = event => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showValidationForm: true\r\n    });\r\n  }\r\n\r\n  /** Handlerfunktion die aufgerufen wird, wenn das Teilnehmer Bewerten Fenster geschlossen werden soll */\r\n  validationFormClosed = (participation) => {\r\n    if (participation) {\r\n      return(this.setState({\r\n        participation: participation,\r\n        showValidationForm: false,\r\n      }),\r\n      this.getValidationbyId())\r\n    } else {\r\n      this.setState({\r\n        showValidationForm: false\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { loadingInProgress, student, participation, error, showParticipationDeleteDialog, validation, showValidationForm, project } = this.state;\r\n    console.log(this.state);\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        { student && participation && validation ?\r\n        \r\n        <Grid className = {classes.root} container spacing={1} justify='flex-start'>\r\n\r\n            <Grid item>\r\n                <Typography className = {classes.font} > {student.getName()} </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              { project.getStateID() >= 4 ?\r\n              <ButtonGroup variant='text' size='small'>\r\n                <Button size='small' className={classes.validate} onClick = {this.validateParticipantButtonClicked}>\r\n                  Bewerten\r\n                </Button>\r\n                <Button size='small' className={classes.delete} onClick = {this.deleteParticipationButtonClicked}>\r\n                  Entfernen\r\n                </Button>\r\n              </ButtonGroup>\r\n              : null }\r\n                \r\n              <LoadingProgress show={loadingInProgress} />\r\n            <ContextErrorMessage error={error} contextErrorMsg={`The list of participations could not be loaded.`} onReload={this.getParticipant} />\r\n            </Grid>\r\n            <Grid item = {3} />\r\n            <Grid>\r\n                <Button display=\"flex\" justifyContent=\"flex-end\" className = {classes.box} size='small' variant=\"outlined\"  >\r\n                {validation.getGrade()}\r\n                </Button>  \r\n            </Grid>\r\n            \r\n        </Grid>\r\n\r\n        : null}\r\n\r\n      <ValidationForm show={showValidationForm} participation={participation} onClose={this.validationFormClosed} />\r\n      <ParticipantDeleteDialog show={showParticipationDeleteDialog} participation={participation} onClose={this.deleteParticipationDialogClosed} />\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '90%',\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  font: {\r\n    fontSize: 15,\r\n  },\r\n  validate: {\r\n    width: '100%',\r\n    color: indigo[300],\r\n    fontSize: 10,\r\n  },\r\n  delete: {\r\n    width: '100%',\r\n    color: red[500],\r\n    fontSize: 10,\r\n  },\r\n  replay: {\r\n    color: indigo[500],\r\n  },\r\n  box: {\r\n    width: '100%',\r\n    color: indigo[500],\r\n    borderColor: indigo[500],\r\n    \r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nAllParticipantList.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n\r\n  show: PropTypes.bool.isRequired,\r\n\r\n  student: PropTypes.object.isRequired,\r\n  onParticipationDeleted: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(AllParticipantList));","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\r\nimport { Button, ListItem, ButtonGroup } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ProjectAPI  from '../api/ProjectAPI';\r\nimport AllParticipantList from './AllParticipantList';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport ProjectEvaluatedForm from './dialogs/ProjectEvaluatedForm';\r\nimport ParticipationForm from './dialogs/ParticipationForm';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\n/**  \r\n * Die Liste aller Projekte aus Admin Sicht. Hier werden in den Projekten deren Teilnehmer entsprechend des Projektstatus eingefügt\r\n */\r\n\r\n\r\nclass AllProjectListEntryParticipants extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      // Init the state\r\n      this.state = {\r\n        project: props.project,\r\n        participations: [],\r\n        showEvaluatedProject: false,\r\n        disabled: true,\r\n        showParticipationForm: false,\r\n      };\r\n    }\r\n\r\n\r\n  /** Handlerfunktion für Veränderungen des Aufklapp-Panels */\r\n  expansionPanelStateChanged = () => {\r\n    this.props.onExpandedStateChange(this.props.project);\r\n  }\r\n\r\n\r\n  getParticipations = () => {\r\n    ProjectAPI.getAPI().getParticipationForProject(this.state.project.getID())\r\n        .then (participationBOs => {\r\n            this.setState({ participations: participationBOs });\r\n        })\r\n      }\r\n\r\n  getLecturer = () => {\r\n    ProjectAPI.getAPI().getUserByGoogleId(firebase.auth().currentUser.uid)   \r\n        .then (UserBO => {\r\n            this.setState({ user: UserBO });\r\n        })\r\n\r\n    }\r\n  \r\n  /** Lifecycle-Methode, die aufgerufen wird, wenn die Komponente in das DOM des Browsers eingefügt wird */\r\n  componentDidMount() {\r\n    this.getParticipations();\r\n    this.getLecturer();\r\n  }\r\n\r\n\r\n  participationDeleted = participant => {\r\n    const newParticipationList = this.state.participations.filter(participationFromState => participationFromState.getID() !== participant.getID());\r\n    this.setState({\r\n      participations: newParticipationList,\r\n    });\r\n  }\r\n\r\n\r\n    /** Handlerfunktion die aufgerufen wird, wenn Bewertung abschließen geklickt wurde */\r\n    evaluatedProjectButtonClicked = event => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showEvaluatedProject: true\r\n    });\r\n  }\r\n\r\n    /** Handlerfunktion die aufgerufen wird, wenn das \"Bewertung abschließen\" Fenster geschlossen werden soll */\r\n    evaluatedProjectFormClosed = (participation) => {\r\n    if (participation) {\r\n      this.setState({\r\n        participation: participation,\r\n        showEvaluatedProject: false,\r\n        disabled: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showEvaluatedProject: false\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n    /** Handlerfunktion die aufgerufen wird, wenn Teilnehmer hinzufügen geklickt wurde */\r\n    addParticipantButtonClicked = event => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showParticipationForm: true\r\n    });\r\n  }\r\n\r\n    /** Handlerfunktion die aufgerufen wird, wenn das \"Teilnehmer hinzufügen\" Fenster geschlossen werden soll */\r\n    participationFormClosed = participation => {\r\n    if (participation) {\r\n      return(this.setState({\r\n        participations: [...this.state.participations, participation],\r\n        showParticipationForm: false\r\n      }), this.getParticipations())\r\n    } else {\r\n      this.setState({\r\n        showParticipationForm: false\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    const { project, participations, user, showEvaluatedProject, showParticipationForm } = this.state;\r\n\r\n    return (\r\n\r\n      <div>\r\n      { participations && user && project.getStateID() === 1 ?\r\n      <Grid>\r\n      <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n                <Typography variant='body1' className={classes.font}>{project.getName()} \r\n                </Typography>\r\n            </Grid>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n              <Grid item xs = {10}>\r\n              <ListItem className={classes.heading}>Es handelt sich hierbei um ein neues Projekt. Sie müssen das Projekt genehmigen oder ablehnen.</ListItem>\r\n              </Grid>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n        </Grid>\r\n\r\n      : participations && user && project.getStateID() >= 3 ?\r\n      <Grid>\r\n      <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={`project${project.getID()}projectpanel-header`} \r\n          >\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='body1' className={classes.font}>{project.getName()} {/** Angabe des Dozenten (UserBO?)*/}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n      { project.getStateID() <= 4 && this.state.disabled?\r\n            <Grid item>\r\n              <ButtonGroup variant='text' size='small'>\r\n                <Button color='secondary' startIcon={<AddIcon />} onClick={this.addParticipantButtonClicked}>\r\n                  Teilnehmer\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Grid>\r\n            : null}\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n              <Grid item xs = {10}>\r\n              \r\n              <ListItem className={classes.heading}>Teilnehmer</ListItem>\r\n              { \r\n                participations.map(participation => <AllParticipantList key={participation.getID()} \r\n                project = {project}\r\n                participation={participation} \r\n                show={this.props.show}  \r\n                onExpandedStateChange={this.onExpandedStateChange}\r\n                onParticipationDeleted={this.participationDeleted}/>)\r\n              }\r\n\r\n            {this.state.disabled && project.getStateID() === 4 ?\r\n              <ListItem className={classes.button}>\r\n                <Button variant='outlined' color='primary' startIcon={<SendIcon />} onClick = {this.evaluatedProjectButtonClicked} >\r\n                  Bewertung abschließen\r\n                </Button>\r\n              </ListItem> \r\n            : null }\r\n\r\n              </Grid>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n        </Grid>\r\n      : null }\r\n      <ProjectEvaluatedForm show={showEvaluatedProject} project={project} onClose={this.evaluatedProjectFormClosed} />\r\n      <ParticipationForm show={showParticipationForm} project={project} onClose={this.participationFormClosed} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    font: {\r\n      fontSize: 23,\r\n      fontFamily: '\"Segoe UI\"',\r\n      color: indigo[700],\r\n    },\r\n    heading: {\r\n      fontSize: 17,\r\n      color: indigo[500],\r\n    },\r\n    button: {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    replay: {\r\n      color: indigo[500],\r\n    },\r\n  });\r\n  \r\n  /** PropTypes */\r\n  AllProjectListEntryParticipants.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    expandedState: PropTypes.bool.isRequired,\r\n    onExpandedStateChange: PropTypes.func.isRequired\r\n    }\r\n  \r\nexport default withStyles(styles)(AllProjectListEntryParticipants);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, List, ListItem } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\nimport  ProjectAPI  from '../api/ProjectAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport AllProjectListEntryParticipants from './AllProjectListEntryParticipants';\r\n\r\n\r\n/**  \r\n * Hier wird die gesamte Liste aus Admin Sicht angezeigt. Man sieht alle Projekte und deren Teilnehmer.\r\n */\r\n\r\nclass AllProjectListParticipants extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let expandedID = null;\r\n\r\n    if (this.props.location.expandProject) {\r\n      expandedID = this.props.location.expandProject.getID();\r\n    }\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n        projects: [],\r\n        error: null,\r\n        loadingInProgress: false,\r\n        expandedProjectID: expandedID,\r\n    };\r\n  }\r\n\r\n  onExpandedStateChange = project => {\r\n    // Das aufklappbare Projekt wird standardgemäß auf null gesetzt\r\n    let newID = null;\r\n    if (project.getID() !== this.state.expandedProjectID) {\r\n      // Öffne den Projekteintrag mit deren ID\r\n      newID = project.getID();\r\n    }\r\n    this.setState({\r\n      expandedProjectID: newID,\r\n    });\r\n  }\r\n\r\n  getProjects = () => {\r\n    ProjectAPI.getAPI().getProjects()\r\n      .then(projectBOs =>\r\n        this.setState({            \r\n          projects: projectBOs,\r\n          loadingInProgress: false,   \r\n          error: null\r\n        })).catch(e =>\r\n          this.setState({            \r\n            projects: [],\r\n            loadingInProgress: false, \r\n            error: e\r\n          })\r\n        );\r\n\r\n\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      error: null\r\n    });\r\n  }\r\n\r\n  /** Lifecycle-Methode, die aufgerufen wird, wenn die Komponente in das DOM des Browsers eingefügt wird */\r\n  componentDidMount() {\r\n    this.getProjects();\r\n  }\r\n\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { projects, loadingInProgress, error } = this.state;\r\n\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <List className={classes.projectList}>\r\n        { \r\n         \r\n          projects.map(project => <AllProjectListEntryParticipants key={project.getID()} project={project} \r\n          show={this.props.show}  onExpandedStateChange={this.onExpandedStateChange}/>)\r\n        }\r\n\r\n          <ListItem>\r\n            <LoadingProgress show={loadingInProgress} />\r\n            <ContextErrorMessage error={error} contextErrorMsg={`The list of projects could not be loaded.`} onReload={this.getProjects} />\r\n          </ListItem>\r\n\r\n        </List>\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  customerFilter: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(1),\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nAllProjectListParticipants.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n\r\n  show: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(AllProjectListParticipants));","import React, { Component } from 'react';\r\nimport { Paper, Typography, Tabs, Tab } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport ProfileDropDown from '../dialogs/ProfileDropDown'; \r\n\r\n//Erstellt den Titel und ein Verweis zur Rolechoice \r\nclass Header extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tabindex: 0\r\n    };\r\n  }\r\n\r\n  /*\r\n  handleTabChange = (e, newIndex) => {\r\n    this.setState({\r\n      tabindex: newIndex\r\n    })\r\n  };*/\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    return (\r\n      <Paper variant='outlined' >\r\n        <ProfileDropDown user={user} />\r\n        <Typography variant='h3' component='h1' align='center'>\r\n          HdManagement\r\n        </Typography>\r\n        <Typography variant='h4' component='h2' align='center'>\r\n          Home\r\n        </Typography>\r\n\r\n      </Paper>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, List, ListItem, Grid, Paper } from '@material-ui/core';\r\nimport ProjectAPI from '../api/ProjectAPI';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\n//Student kann Einblick in seine persönliche Daten nehmen\r\n\r\nclass StudentReportIndividualTitle extends Component{\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      var today = new Date(),\r\n      date = today.getDate() + '.' + (today.getMonth() + 1) + '.' + today.getFullYear();\r\n\r\n      this.state = {\r\n        student: null,\r\n        studentId: this.props.studentId,\r\n        currentDate: date,\r\n        googleUID: firebase.auth().currentUser.uid\r\n\r\n      };\r\n  }\r\n\r\n  /** Lifecycle-Methode, die aufgerufen wird, wenn die Komponente in das DOM des Browsers eingefügt wird */\r\n  componentDidMount() {\r\n    this.getStudent();\r\n  }\r\n\r\n  getStudent = () => {\r\n      ProjectAPI.getAPI().getStudentbyId(firebase.auth().currentUser.uid)  \r\n          .then (studentBO => {\r\n              this.setState({ student: studentBO });\r\n          })\r\n\r\n  }\r\n\r\n  /** Rendern der Komponente*/\r\n  render() {\r\n    const { classes } = this.props;\r\n    const student = this.state.student;\r\n\r\n    return (\r\n        <div> \r\n        \r\n        { student ?\r\n\r\n        <Grid className = {classes.root}>\r\n          <Paper>\r\n            <List>\r\n            <ListItem>Name: {student.getName()} </ListItem>\r\n            <ListItem>Matrikelnummer: {student.getMatriculationNumber()} </ListItem>\r\n            <Grid container spacing={1}> \r\n                <Grid item>\r\n                  <ListItem>Studiengangskürzel: {student.getCourse()} </ListItem>  \r\n                </Grid>\r\n                <Grid item xs = {8} />\r\n                <Grid item>\r\n                  <ListItem>Datum: { this.state.currentDate }</ListItem>  \r\n                </Grid>\r\n            </Grid>\r\n            </List>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        : null }\r\n\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '90%',\r\n      marginTop: theme.spacing(3),\r\n      marginLeft: theme.spacing(10),\r\n    }\r\n  });\r\n  \r\n/** PropTypes */\r\nStudentReportIndividualTitle.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  student: PropTypes.object.isRequired,\r\n  }\r\n  \r\nexport default withStyles(styles)(StudentReportIndividualTitle);\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Grid } from '@material-ui/core';\r\nimport { List, ListItem, Paper } from '@material-ui/core';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport  ProjectAPI  from '../api/ProjectAPI';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\n\r\n\r\nclass StudentReportListEntry extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      // Init the state\r\n      this.state = {\r\n        participation: props.participation,\r\n        project: null,\r\n        module: null,\r\n        validation: null,\r\n        googleUID: firebase.auth().currentUser.uid,\r\n        projecttype: null\r\n      };\r\n    }\r\n\r\n    \r\n    getProjectbyID = () => {\r\n      ProjectAPI.getAPI().getProjectbyId(this.state.participation.getProjectID())\r\n          .then (participationBOs => {\r\n              return (this.setState({ project: participationBOs }),\r\n              this.getProjecttypeForProject())\r\n          })\r\n        }\r\n\r\n    getProjecttypeForProject = () => {\r\n        ProjectAPI.getAPI().getProjecttypebyId(this.state.project.getProjectTypeID())\r\n            .then (ProjecttypeBO => {\r\n                this.setState({ projecttype: ProjecttypeBO });\r\n            })\r\n        }\r\n        \r\n\r\n\r\n    getModulebyID = () => {\r\n      ProjectAPI.getAPI().getModulebyId(this.state.participation.getModuleID())\r\n          .then (participationBOs => {\r\n              this.setState({ module: participationBOs });\r\n          })\r\n        }\r\n\r\n\r\n    getValidationbyID = () => {\r\n      ProjectAPI.getAPI().getValidationbyId(this.state.participation.getValidationID())\r\n          .then (participationBOs => {\r\n              this.setState({ validation: participationBOs });\r\n          })\r\n        }\r\n\r\n    getStudent = () => {\r\n      ProjectAPI.getAPI().getStudentbyId(firebase.auth().currentUser.uid)   //Hier die ID des Studentens aufrufen --> this.state.studentId.getId()....vom StudentBO\r\n          .then (studentBO => {\r\n              this.setState({ student: studentBO });\r\n          })\r\n\r\n  }\r\n  \r\n    /** Lifecycle-Methode, die aufgerufen wird, wenn die Komponente in das DOM des Browsers eingefügt wird */\r\n    componentDidMount() {\r\n      this.getProjectbyID();\r\n      this.getModulebyID();\r\n      this.getValidationbyID();\r\n      this.getStudent();\r\n    }\r\n\r\n\r\n  /** Rendern der Komponente*/\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { participation, project, module, validation, student, projecttype} = this.state;\r\n\r\n\r\n    return (\r\n      <div>\r\n\r\n      { project && projecttype && module && validation && student && participation.getStudentID()=== student.getID()? \r\n\r\n      <Grid>\r\n          <Paper elevation={3} >\r\n            <List>\r\n                <ListItem className = {classes.font}>{project.getName()}</ListItem>\r\n                <ListItem>Projektbeschreibung: {project.getProjectDescription()}</ListItem> \r\n                <ListItem>Projektkategorie: {projecttype.getName()} </ListItem>\r\n                <ListItem>Modul: {module.getEDV_number()} {module.getName()}</ListItem> \r\n\r\n                { participation.getValidationID() !== 1 && participation.getValidationID() !== 14 && participation.getValidationID() !== 15 ? <ListItem>Note: {validation.getGrade()}</ListItem> : null }\r\n              \r\n\r\n                { participation.getValidationID() === 1 ?\r\n                <ListItem>Status: angemeldet </ListItem> :\r\n                \r\n                participation.getValidationID() > 1 && participation.getValidationID() <= 11  ?\r\n                  <ListItem>Status: bestanden </ListItem> :\r\n\r\n                participation.getValidationID() >= 12 && participation.getValidationID() <= 13 ?\r\n                  <ListItem>Status: nicht bestanden </ListItem> : \r\n\r\n                participation.getValidationID() === 14 ?\r\n                <ListItem>Status: bestanden </ListItem> :\r\n\r\n                participation.getValidationID() === 15 ?\r\n                <ListItem>Status: nicht bestanden </ListItem> \r\n                  \r\n              : null }\r\n\r\n            </List>\r\n          </Paper>\r\n        </Grid>\r\n\r\n      : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    font: {\r\n        fontSize: 23,\r\n        fontFamily: '\"Segoe UI\"',\r\n        color: indigo[700],\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\nStudentReportListEntry.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    participation: PropTypes.object.isRequired,\r\n    expandedState: PropTypes.bool.isRequired,\r\n    onExpandedStateChange: PropTypes.func.isRequired\r\n    }\r\n  \r\nexport default withStyles(styles)(StudentReportListEntry);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, List, ListItem } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\nimport  ProjectAPI  from '../api/ProjectAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport StudentReportListEntry from './StudentReportListEntry';\r\n\r\n\r\n/**   Hier sieht der Student all seine angemeldeten Projekte und dessen Bewertungen */\r\n\r\nclass StudentReportList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n        participations: [],\r\n        error: null,\r\n        loadingInProgress: false,\r\n    };\r\n  }\r\n\r\n    getParticipations = () => {\r\n    ProjectAPI.getAPI().getParticipations()\r\n      .then(participationBOs =>\r\n        this.setState({              \r\n          participations: participationBOs,\r\n          loadingInProgress: false,   \r\n          error: null\r\n        })).catch(e =>\r\n          this.setState({            \r\n            participations: [],\r\n            loadingInProgress: false, \r\n            error: e\r\n          })\r\n        );\r\n\r\n    // setzen des Ladens auf true\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      error: null\r\n    });\r\n  }\r\n  \r\n\r\n\r\n\r\n  /** Lifecycle-Methode, die aufgerufen wird, wenn die Komponente in das DOM des Browsers eingefügt wird */\r\n  componentDidMount() {\r\n    this.getParticipations(); \r\n  }\r\n\r\n\r\n\r\n  /** Rendern der Komponente */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { participations, loadingInProgress, error} = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <List>\r\n            \r\n        { \r\n          \r\n          participations.map(participation => <StudentReportListEntry key={participation.getID()} participation={participation} \r\n          show={this.props.show}/>)\r\n        }\r\n\r\n          <ListItem>\r\n            <LoadingProgress show={loadingInProgress} />\r\n            <ContextErrorMessage error={error} contextErrorMsg={`The list of participations could not be loaded.`} onReload={this.getParticipations} />\r\n          </ListItem>\r\n\r\n        </List>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponentenspezifisches Styling */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '90%',\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(10),\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nStudentReportList.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n\r\n  show: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(StudentReportList));","import { withStyles, Typography, Grid } from '@material-ui/core';\r\nimport { Button, ButtonGroup, List, ListItem } from '@material-ui/core';\r\nimport { Hidden, Paper } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom';\r\nimport StudentHeader from '../layout/StudentHeader';\r\nimport LecturerAdminHeader from '../layout/LecturerAdminHeader';\r\nimport Header from '../layout/Header';\r\nimport StudentProjectList from '../StudentProjectList';\r\nimport LecturerProjectList from '../LecturerProjectList';\r\nimport AdminProjectList from '../AdminProjectList';\r\nimport ProjectListParticipants from '../ProjectListParticipants';\r\nimport Impressum from './Impressum';\r\nimport StudentReportIndividualTitle from '../StudentReportIndividualTitle';\r\nimport StudentReportList from '../StudentReportList';\r\nimport UserBO from '../../api/UserBO';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport ProjectAPI from '../../api/ProjectAPI';\r\nimport ContextErrorMessage from '../dialogs/ContextErrorMessage';\r\nimport LoadingProgress from '../dialogs/LoadingProgress';\r\nimport AllProjectListParticipants from '../AllProjectListParticipants';\r\nimport StudentList from '../StudentList';\r\n\r\n\r\nclass RoleChoice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let m = firebase.auth().currentUser.email;\r\n        let g = firebase.auth().currentUser.uid;\r\n\r\n        this.state = { \r\n            StudentClicked: false, \r\n            LecturerClicked: false,\r\n            AdminClicked: false,\r\n            AlwaysTrue: true,\r\n            disabled: true,\r\n            mail: m,\r\n            googleid: g,\r\n\r\n            // Ladebalken und Error\r\n            updatingInProgress: false,\r\n            updatingError: null\r\n\r\n        };\r\n\r\n        this.baseState = this.state;\r\n    }\r\n    \r\n\r\n    handleStudentButtonClicked = () => {\r\n        this.setState ({StudentClicked: true});\r\n        this.setState ({disabled:false});\r\n        this.updateStudentRole();\r\n    \r\n    }\r\n\r\n    handleLecturerButtonClicked = () => {\r\n        this.setState ({LecturerClicked: true});\r\n        this.setState ({disabled:false});\r\n        this.updateLecturerRole();\r\n       \r\n    }\r\n \r\n    handleAdminButtonClicked = () => {\r\n        this.setState ({AdminClicked: true});\r\n        this.setState ({disabled:false});\r\n        this.updateAdminRole();\r\n\r\n    }\r\n\r\n    handleDisable = () => {\r\n        this.setState({ disabled: false });\r\n    }\r\n\r\n\r\n    getCurrentUser = () => {\r\n        ProjectAPI.getAPI().getUserByGoogleId(firebase.auth().currentUser.uid)   //Hier die ID des Studentens aufrufen --> this.state.studentId.getId()....vom StudentBO\r\n        //ProjectAPI.getAPI().getStudentById()\r\n            .then (UserBO => {\r\n                this.setState({ user: UserBO });\r\n            })\r\n    \r\n    }\r\n\r\n    updateLecturerRole = () => {\r\n        let updatedRole = Object.assign(new UserBO(), this.state.user);\r\n\r\n\r\n        updatedRole.setMail(this.state.mail);\r\n        updatedRole.setGoogleId(this.state.googleid);\r\n        updatedRole.setRoleId(2);\r\n\r\n        ProjectAPI.getAPI().updateUser(updatedRole).then(user => {\r\n            this.setState({\r\n                updatingInProgress: false,              // disable loading indicator  \r\n                updatingError: null  \r\n            });\r\n            this.baseState.mail = this.state.mail;\r\n            this.baseState.googleid = this.state.googleid;\r\n            this.baseState.roleid = this.state.roleid;\r\n        })\r\n\r\n    }\r\n\r\n    updateAdminRole = () => {\r\n        let updatedRole = Object.assign(new UserBO(), this.state.user);\r\n\r\n\r\n        updatedRole.setMail(this.state.mail);\r\n        updatedRole.setGoogleId(this.state.googleid);\r\n        updatedRole.setRoleId(3);\r\n\r\n        ProjectAPI.getAPI().updateUser(updatedRole).then(user => {\r\n            this.setState({\r\n                updatingInProgress: false,              // disable loading indicator  \r\n                updatingError: null  \r\n            });\r\n            this.baseState.mail = this.state.mail;\r\n            this.baseState.googleid = this.state.googleid;\r\n            this.baseState.roleid = this.state.roleid;\r\n        })\r\n\r\n    }\r\n\r\n    updateStudentRole = () => {\r\n        let updatedRole = Object.assign(new UserBO(), this.state.user);\r\n\r\n\r\n        updatedRole.setMail(this.state.mail);\r\n        updatedRole.setGoogleId(this.state.googleid);\r\n        updatedRole.setRoleId(1);\r\n\r\n        ProjectAPI.getAPI().updateUser(updatedRole).then(user => {\r\n            this.setState({\r\n                updatingInProgress: false,              // disable loading indicator  \r\n                updatingError: null  \r\n            });\r\n            this.baseState.mail = this.state.mail;\r\n            this.baseState.googleid = this.state.googleid;\r\n            this.baseState.roleid = this.state.roleid;\r\n        })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCurrentUser();\r\n        //this.updateRole();\r\n      }\r\n\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { StudentClicked, LecturerClicked, AdminClicked, AlwaysTrue, user  } = this.state;\r\n        const { disabled } = this.props;\r\n        const { updatingInProgress, updatingError } = this.state;\r\n        \r\n\r\n        return (\r\n            <div>\r\n        {this.state.disabled && user ?\r\n          \r\n            <Grid container justify='center'>\r\n            <ButtonGroup className = 'buttons' disabled = {disabled} >\r\n                <Grid item>\r\n                <Button variant='contained' color='primary' onClick={this.handleStudentButtonClicked} >\r\n                    Student\r\n                </Button>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                <Button variant='contained' color='primary' onClick={this.handleLecturerButtonClicked}>\r\n                    Dozent\r\n                </Button>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                <Button variant='contained' color='primary' onClick={this.handleAdminButtonClicked} >\r\n                    Admin\r\n                </Button>\r\n                </Grid>\r\n            </ButtonGroup>\r\n            <LoadingProgress show={updatingInProgress} />\r\n            <ContextErrorMessage error={updatingError} contextErrorMsg={`Es ist ein Fehler aufgetreten, lol.`} />\r\n            </Grid>\r\n\r\n            : null }\r\n\r\n            {\r\n                StudentClicked ?\r\n                    <>\r\n                        <Router>\r\n                            <Redirect exact from='/' to='projects' />\r\n                            <StudentHeader/> \r\n\r\n                            <Route exact path='/projects'>\r\n                                <StudentProjectList />\r\n                            </Route>\r\n\r\n                            <Route exact path = '/report'>\r\n                                <StudentReportIndividualTitle />\r\n                                <StudentReportList />\r\n                            </Route>\r\n\r\n                            <Route path='/impressum' component={Impressum} />\r\n                        </Router>                      \r\n                    </>\r\n                    : LecturerClicked ?\r\n                    <>\r\n                        <Router>\r\n                            <Redirect from='/' to='projects' />\r\n                            <LecturerAdminHeader/> \r\n                            \r\n                            <Route exact path='/projects'>\r\n                                <LecturerProjectList/>\r\n                            </Route>\r\n\r\n                            <Route path = '/grade'>\r\n                                <ProjectListParticipants/>\r\n                            </Route>\r\n\r\n                            <Route path='/students'>\r\n                                <StudentList/>\r\n                            </Route>\r\n\r\n                            <Route path='/impressum' component={Impressum} />\r\n                        </Router>\r\n                    </>\r\n                    : AdminClicked ?\r\n                    <>\r\n                        <Router>\r\n                            <Redirect from='/' to='projects' />\r\n                            <LecturerAdminHeader/>\r\n                            \r\n                            <Route exact path='/projects'>\r\n                                <AdminProjectList/>\r\n                            </Route>\r\n\r\n                            <Route path = '/grade'>\r\n                                <AllProjectListParticipants/>\r\n                            </Route>\r\n\r\n                            <Route path='/students'>\r\n                                <StudentList/>\r\n                            </Route>\r\n\r\n                            <Route path='/impressum' component={Impressum} />\r\n\r\n                        </Router>\r\n                    </>\r\n                    : AlwaysTrue\r\n                }   \r\n                        \r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(2)\r\n    }\r\n});\r\n\r\n/** PropTypes */\r\nRoleChoice.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n  }\r\n  \r\n\r\nexport default withStyles(styles)(RoleChoice);\r\n    \r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport { ThemeProvider, CssBaseline } from '@material-ui/core';\r\nimport Theme from './Theme';\r\nimport SignIn from './components/pages/SignIn';\r\nimport LoadingProgress from './components/dialogs/LoadingProgress';\r\nimport ContextErrorMessage from './components/dialogs/ContextErrorMessage';\r\nimport Impressum from './components/pages/Impressum';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport StudentHeader from './components/layout/StudentHeader';\r\nimport LecturerAdminHeader from './components/layout/LecturerAdminHeader';\r\nimport StudentProjectList from './components/StudentProjectList';\r\nimport LecturerProjectList from './components/LecturerProjectList';\r\nimport AdminProjectList from './components/AdminProjectList';\r\nimport StudentList from './components/StudentList';\r\nimport ProjectListParticipants from './components/ProjectListParticipants';\r\nimport AllProjectListParticipants from './components/AllProjectListParticipants';\r\nimport Header from './components/layout/Header';\r\nimport RoleChoice from './components/pages/RoleChoice';\r\nimport ProjectAPI from './api/ProjectAPI';\r\nimport StudentReportIndividualTitle from './components/StudentReportIndividualTitle';\r\nimport StudentReportList from './components/StudentReportList';\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n\r\n  #firebaseConfig = {\r\n    apiKey: \"AIzaSyBBfP9L6_37Hn0nngH2q4UPwW4RvZPMbzM\",\r\n    authDomain: \"hdmanagement12.firebaseapp.com\",\r\n    databaseURL: \"https://hdmanagement12-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"hdmanagement12\",\r\n    storageBucket: \"hdmanagement12.appspot.com\",\r\n    messagingSenderId: \"562026439297\",\r\n    appId: \"1:562026439297:web:327a47fb90d7f0c92f6380\"\r\n    \r\n      };\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    this.state = {\r\n      currentUser: null,\r\n      appError: null,\r\n      authError: null,\r\n      authLoading: false\r\n    };\r\n  }\r\n\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { appError: error };\r\n  }\r\n\r\n  handleAuthStateChange = user => {\r\n    if (user) {\r\n      this.setState({\r\n        authLoading: true\r\n      });\r\n\r\n      user.getIdToken().then(token => {\r\n\r\n        document.cookie = `token=${token};path=/`;\r\n\r\n        this.setState({\r\n          currentUser: user,\r\n          authError: null,\r\n          authLoading: false,\r\n        });\r\n        this.getCurrentUser();\r\n      }).catch(e => {\r\n        this.setState({\r\n          authError: e,\r\n          authLoading: false\r\n        });\r\n      });\r\n    } else {\r\n\r\n      document.cookie = 'token=;path=/';\r\n\r\n\r\n      this.setState({\r\n        currentUser: null,\r\n        authLoading: false\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  handleSignIn = () => {\r\n    this.setState({\r\n      authLoading: true\r\n    });\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    firebase.auth().signInWithRedirect(provider);\r\n  }\r\n\r\n\r\n  /** Lifecycle-Methode, die aufgerufen wird, wenn die Komponente in das DOM des Browsers eingefügt wird */\r\n  componentDidMount() {\r\n    firebase.initializeApp(this.#firebaseConfig);\r\n    firebase.auth().languageCode = 'en';\r\n    firebase.auth().onAuthStateChanged(this.handleAuthStateChange);\r\n\r\n  }\r\n\r\n\r\n  getCurrentUser = () => {\r\n    ProjectAPI.getAPI().getUserByGoogleId(firebase.auth().currentUser.uid)   //Hier die ID des Studentens aufrufen --> this.state.studentId.getId()....vom StudentBO\r\n        .then (UserBO => {\r\n            this.setState({ currUser: UserBO });\r\n        })\r\n\r\n}\r\n\r\n\r\n  render() {\r\n    \r\n    const { currentUser, appError, authError, authLoading, currUser } = this.state;\r\n\r\n    return (\r\n      <ThemeProvider theme={Theme}>\r\n        <CssBaseline />\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <div className=\"App\">\r\n          <Header user={currentUser}/>\r\n            {\r\n\r\n              currentUser && currUser && currUser.getRoleId() === 4 ?\r\n                  <>\r\n                    <Redirect from = '/' to = '/rolechoice' />\r\n                    <Route exact path=\"/rolechoice\">\r\n                      <RoleChoice/>\r\n                    </Route>\r\n                  </>\r\n                  :\r\n                  currentUser && currUser && currUser.getRoleId() === 1 ?\r\n                        <>\r\n                            <Router>\r\n                                <Redirect exact from='/' to='projects' />\r\n                                <StudentHeader/> \r\n    \r\n                                <Route exact path='/projects'>\r\n                                    <StudentProjectList />\r\n                                </Route>\r\n    \r\n                                <Route exact path = '/report'>\r\n                                    <StudentReportIndividualTitle />\r\n                                    <StudentReportList />\r\n                                </Route>\r\n    \r\n                                <Route path='/impressum' component={Impressum} />\r\n                            </Router>                      \r\n                        </>\r\n                        : \r\n                        currentUser && currUser && currUser.getRoleId() === 2 ?\r\n                        <>\r\n                            <Router>\r\n                                <Redirect from='/' to='projects' />\r\n                                <LecturerAdminHeader/> \r\n                                \r\n                                <Route exact path='/projects'>\r\n                                    <LecturerProjectList/>\r\n                                </Route>\r\n    \r\n                                <Route path = '/grade'>\r\n                                    <ProjectListParticipants/>\r\n                                </Route>\r\n\r\n                                <Route path='/students'>\r\n                                    <StudentList/>\r\n                                </Route>\r\n    \r\n                                <Route path='/impressum' component={Impressum} />\r\n                            </Router>\r\n                        </>\r\n                        :\r\n                        currentUser && currUser && currUser.getRoleId() === 3 ?\r\n                        <>\r\n                            <Router>\r\n                                <Redirect from='/' to='projects' />\r\n                                <LecturerAdminHeader/>\r\n                                \r\n                                <Route exact path='/projects'>\r\n                                    <AdminProjectList/>\r\n                                </Route>\r\n    \r\n                                <Route path = '/grade'>\r\n                                    <AllProjectListParticipants/>\r\n                                </Route>\r\n\r\n                                <Route path='/students'>\r\n                                    <StudentList/>\r\n                                </Route>\r\n    \r\n                                <Route path='/impressum' component={Impressum} />\r\n    \r\n                            </Router>\r\n                        </>\r\n                        :\r\n                  <>\r\n                    <Redirect to='/index.html' />\r\n                    <SignIn onSignIn={this.handleSignIn} />\r\n                  </>\r\n\r\n            }\r\n\r\n            <LoadingProgress show={authLoading} />\r\n            <ContextErrorMessage error={authError} contextErrorMsg={`Something went wrong during sign in process.`} onReload={this.handleSignIn} />\r\n            <ContextErrorMessage error={appError} contextErrorMsg={`Something went wrong inside the app. Please reload the page.`} />\r\n          \r\n          </div>\r\n        </Router>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","/*import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();*/\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}
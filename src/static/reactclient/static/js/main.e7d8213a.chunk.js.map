{"version":3,"sources":["Theme.js","components/pages/SignIn.js","components/dialogs/LoadingProgress.js","components/dialogs/ContextErrorMessage.js","components/pages/Impressum.js","components/dialogs/ProfileDropDown.js","components/layout/StudentHeader.js","components/layout/LecturerAdminHeader.js","api/BusinessObject.js","api/NamedBusinessObject.js","api/StateBO.js","api/ProjectBO.js","api/ProjectTypeBO.js","api/UserBO.js","api/StudentBO.js","api/ParticipationBO.js","api/ValidationBO.js","api/ModuleBO.js","api/ProjectAPI.js","components/dialogs/StudentProjectSignIn.js","components/dialogs/StudentProjectSignOut.js","components/StudentProjectListEntry.js","components/StudentProjectList.js","components/dialogs/ProjectDeleteDialog.js","components/LecturerProjectListEntry.js","components/dialogs/ProjectForm.js","components/dialogs/ProjectTypeForm.js","components/LecturerProjectList.js","components/AdminProjectListEntry.js","components/AdminProjectList.js","components/dialogs/ParticipantDeleteDialog.js","components/StudentReportListEntry.js","components/ParticipantList.js","components/ProjectListEntryParticipants.js","components/ProjectListParticipants.js","components/layout/Header.js","components/StudentReportIndividualTitle.js","components/StudentReportList.js","components/pages/RoleChoice.js","App.js","index.js"],"names":["white","theme","createMuiTheme","palette","black","primary","contrastText","dark","colors","indigo","main","light","secondary","blue","success","green","info","warning","orange","error","red","text","blueGrey","link","background","default","paper","icon","divider","grey","SignIn","handleSignInButtonClicked","props","onSignIn","classes","this","Typography","className","root","align","variant","Grid","container","justify","item","Button","color","onClick","Component","withStyles","margin","spacing","LoadingProgress","show","LinearProgress","width","marginTop","ContextErrorMessage","contextErrorMsg","onReload","Alert","severity","AlertTitle","margins","message","startIcon","useStyles","makeStyles","marginBottom","padding","content","Impressum","Paper","elevation","Link","href","ProfileDropDown","createRef","handleAvatarButtonClick","setState","open","state","handleClose","handleSignOutButtonClicked","firebase","auth","signOut","user","IconButton","avatarButton","ref","Popover","anchorEl","current","onClose","anchorOrigin","vertical","horizontal","transformOrigin","ClickAwayListener","onClickAway","profileBox","Divider","float","Header","handleTabChange","e","newIndex","tabindex","Box","p","component","Tabs","indicatorColor","textColor","centered","value","onChange","Tab","label","RouterLink","to","BusinessObject","id","create_time","Date","aId","creation_time","result","prop","NamedBusinessObject","aName","name","StateBO","aState","states","Array","isArray","forEach","sta","Object","setPrototypeOf","prototype","push","ProjectBO","aUserID","aProjectTypeID","aStateID","aProjectDescription","aPartners","aCapacity","aPreferredRoom","aBDaysPreSchedule","aBDaysFinale","aBDaysSaturdays","aPreferredBDays","aProjectCategory","aAdditionalLecturer","aWeekly","user_id","project_type_id","state_id","project_description","partners","capacity","preferred_room","b_days_pre_schedule","b_days_finale","b_days_saturdays","preferred_b_days","project_category","additional_lecturer","weekly","room_preference","aRoomPreference","projects","pr","ProjectTypeBO","aEcts","aSws","ects","sws","projecttypes","pt","UserBO","aFirstname","aMail","aGoogleId","aRoleId","firstname","google_id","role_id","mail","users","u","StudentBO","aLastname","aCourse","aMatriculation_number","aProject_id","lastname","course","matriculation_number","project_id","students","st","ParticipationBO","aModuleID","aProjectID","aStudentID","aValidationID","aStatus","module_id","student_id","validation_id","status","participations","ValidationBO","aGrade","grade","validations","v","ModuleBO","aEDV_number","edv_number","modules","m","ProjectAPI","url","init","fetch","then","res","ok","Error","statusText","json","responseJSON","projectBOs","fromJSON","Promise","resolve","projectID","responseProjectBO","attributeBOs","projectBO","method","headers","body","JSON","stringify","projecttypeBO","console","log","responseProjectTypeBO","studentID","responseStudentBO","studentBO","stateID","responseStateBO","validationID","responseValidationBO","participationBOs","participationID","responseParticipationBO","moduleID","responseModuleBO","userBO","responseUserBO","StudentProjectSignIn","addStudent","getAPI","addStudentForProject","project","getID","SignInInProgress","SignInError","catch","Dialog","DialogTitle","closeButton","DialogContent","DialogContentText","getName","DialogActions","position","right","top","StudentProjectSignOut","SignOutStudent","deleteStudentFromProject","SignOutInProgress","SignOutError","StudentProjectListEntry","expansionPanelStateChanged","onExpandedStateChange","StudentProjectSignInClicked","event","stopPropagation","showStudentProjectSignIn","StudentProjectSignInClosed","onStudentProjectSignIn","StudentProjectSignOutClicked","showStudentProjectSignOut","StudentProjectSignOutClosed","onStudentProjectSignOut","expandedState","getStateID","Accordion","defaultExpanded","expanded","AccordionSummary","expandIcon","alignItems","heading","AccordionDetails","List","ListItem","getCapacity","getProjectDescription","getAdditionalLecturer","getPartners","getWeekly","getBDaysPreSchedule","getBDaysFinale","getBDaysSaturdays","getPreferredRoom","StudentProjectList","newID","expandedProjectID","getProjects","loadingInProgress","expandedID","location","expandProject","projectList","map","withRouter","marginLeft","customerFilter","ProjectDeleteDialog","deleteProject","deletingInProgress","deletingError","LecturerProjectListEntry","getStatebyID","getStatebyId","xs","ProjectForm","addProject","newProject","projectName","additionalSupervisor","externalPartners","projectDescription","projectCategory","bDaysPreSchedule","bDaysFinale","bDaysSaturdays","preferredBDays","roomPreference","preferredRoom","newProjectType","projectTypeName","baseState","addingInProgress","addingError","textFieldValueChange","target","trim","length","handleChange","handleChange2","value2","projectNameValidationFailed","additionalSupervisorValidationFailed","externalPartnersValidationFailed","projectDescriptionValidationFailed","projectCategoryValidationFailed","weeklyValidationFailed","capacityValidationFailed","bDaysPreScheduleValidationFailed","bDaysFinaleValidationFailed","bDaysSaturdaysValidationFailed","preferredBDaysValidationFailed","roomPreferenceValidationFailed","preferredRoomValidationFailed","projectTypeNameValidationFailed","maxWidth","noValidate","autoComplete","TextField","autoFocus","type","required","fullWidth","helperText","FormControl","formControl","InputLabel","Select","MenuItem","disabled","minWidth","ProjectTypeForm","addProjectType","projecttype","LecturerProjectList","addProjectButtonClicked","showProjectForm","projectFormClosed","newProjectList","addProjectTypeButtonClicked","showProjectTypeForm","projectTypeFormClosed","expandCustomer","AdminProjectListEntry","deleteProjectButtonClicked","showProjectDeleteDialog","deleteProjectDialogClosed","onProjectDeleted","ButtonGroup","size","borderColor","AdminProjectList","projectDeleted","filter","projectFromState","ParticipantDeleteDialog","deleteParticipation","participation","getStudentID","getParticipant","StudentReportListEntry","getProjectbyID","getProjectbyId","getProjectID","getModulebyID","getModulebyId","getModuleID","module","getValidationbyID","getValidationbyId","getValidationID","validation","font","getEDV_number","getGrade","fontSize","fontFamily","ParticipantList","getStudentbyId","student","deleteParticipationButtonClicked","showParticipationDeleteDialog","deleteParticipationDialogClosed","onParticipationDeleted","getFirstName","validate","delete","ProjectListEntryParticipants","getParticipations","getParticipationForProject","participationDeleted","participant","newParticipationList","participationFromState","ProjectListParticipants","StudentReportIndividualTitle","getStudent","currentUser","uid","today","date","getDate","getMonth","getFullYear","studentId","currentDate","googleUID","getMatriculationNumber","getCourse","StudentReportList","RoleChoice","handleStudentButtonClicked","StudentClicked","handleLecturerButtonClicked","LecturerClicked","handleAdminButtonClicked","AdminClicked","handleDisable","AlwaysTrue","exact","from","StudentHeader","path","LecturerAdminHeader","App","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","handleAuthStateChange","authLoading","getIdToken","token","document","cookie","authError","handleSignIn","provider","GoogleAuthProvider","signInWithRedirect","appError","initializeApp","languageCode","onAuthStateChanged","ThemeProvider","Theme","CssBaseline","basename","process","React","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e7d8213a.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { colors } from '@material-ui/core';\r\n\r\nconst white = '#FFFFFF';\r\nconst black = '#000000';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    black,\r\n    white,\r\n    primary: {\r\n      contrastText: white,\r\n      dark: colors.indigo[900],\r\n      main: colors.indigo[500],\r\n      light: colors.indigo[100]\r\n    },\r\n    secondary: {\r\n      contrastText: white,\r\n      dark: colors.blue[900],\r\n      main: colors.blue['A400'],\r\n      light: colors.blue['A400']\r\n    },\r\n    success: {\r\n      contrastText: white,\r\n      dark: colors.green[900],\r\n      main: colors.green[600],\r\n      light: colors.green[400]\r\n    },\r\n    info: {\r\n      contrastText: white,\r\n      dark: colors.blue[900],\r\n      main: colors.blue[600],\r\n      light: colors.blue[400]\r\n    },\r\n    warning: {\r\n      contrastText: white,\r\n      dark: colors.orange[900],\r\n      main: colors.orange[600],\r\n      light: colors.orange[400]\r\n    },\r\n    error: {\r\n      contrastText: white,\r\n      dark: colors.red[900],\r\n      main: colors.red[600],\r\n      light: colors.red[400]\r\n    },\r\n    text: {\r\n      primary: colors.blueGrey[800],\r\n      secondary: colors.blueGrey[600],\r\n      link: colors.blue[600]\r\n    },\r\n    background: {\r\n      default: '#F4F6F8',\r\n      paper: white\r\n    },\r\n    icon: colors.blueGrey[600],\r\n    divider: colors.grey[200]\r\n  }, \r\n});\r\n\r\n\r\n// A custom theme for this app\r\n// const theme = createMuiTheme({\r\n//   palette: {\r\n//     primary: {\r\n//       main: '#556cd6',\r\n//     },\r\n//     secondary: {\r\n//       main: '#19857b',\r\n//     },\r\n//     error: {\r\n//       main: red.A400,\r\n//     },\r\n//     background: {\r\n//       default: '#fff',\r\n//     },\r\n//   },\r\n// });\r\n\r\n\r\nexport default theme;","import React, {Component} from 'react';\r\nimport {Button, Grid, Typography, withStyles}from '@material-ui/core';\r\n\r\n \r\nclass SignIn extends Component {\r\n  \r\n  \r\n  handleSignInButtonClicked = () => {\r\n\t\tthis.props.onSignIn();\r\n  }\r\n\r\n  \r\n  render() {\r\n    const { classes } = this.props;\r\n    \r\n    return (\r\n      <div>\r\n        <Typography className={classes.root} align='center' variant='h6'>Willkommen zum HdManagement System!</Typography>\r\n        <Typography className={classes.root} align='center'>Es scheint, als wären Sie nicht angemeldet.</Typography>\r\n        <Typography className={classes.root} align='center'>Um den Service des Projektverwaltungssystems nutzen zu können, melden Sie sich über Google an.</Typography>\r\n        <Grid container justify='center'>\r\n          <Grid item>\r\n            <Button variant='contained' color='primary' onClick={this.handleSignInButtonClicked}>\r\n             Anmelden\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n\troot: {\r\n\t\tmargin: theme.spacing(2)\r\n\t}\r\n});\r\n\r\n\r\nexport default withStyles(styles)(SignIn)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\nclass SignIn extends Component{\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                    Hello World\r\n                </Button>\r\n            \r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default (SignIn)\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Button variant=\"contained\" color=\"primary\">\r\n      Hello World\r\n    </Button>\r\n  );\r\n}\r\n \r\nReactDOM.render(<App />, document.querySelector('#app'));\r\n*/\r\n\r\n","import React, { Component } from 'react';\r\nimport { withStyles, LinearProgress } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass LoadingProgress extends Component {\r\n\r\n\r\n  render() {\r\n    const { classes, show } = this.props;\r\n\r\n    return (\r\n      show ?\r\n        <div className={classes.root}>\r\n          <LinearProgress color='secondary' />\r\n        </div>\r\n        : null\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(2),\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nLoadingProgress.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** If true, the loading progress is rendered */\r\n  show: PropTypes.bool.isRequired,\r\n}\r\n\r\n\r\nexport default withStyles(styles)(LoadingProgress);\r\n","import React, { Component } from 'react';\r\n\r\nimport { withStyles, Button } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass ContextErrorMessage extends Component {\r\n  #standardText = 'This should not have happend. Soooo sorry...';\r\n\r\n\r\n  render() {\r\n    const { classes, error, contextErrorMsg, onReload } = this.props;\r\n\r\n    return (\r\n      (error !== null) ?\r\n        <Alert severity='error' className={classes.root}>\r\n          <div>\r\n            {this.#standardText}\r\n          </div>\r\n          <AlertTitle>\r\n            {contextErrorMsg}\r\n          </AlertTitle>\r\n          <div className={classes.margins}>\r\n            Error message (for debugging only) is:\r\n        </div>\r\n          <div>\r\n            {error.message}\r\n          </div>\r\n          {\r\n            onReload ?\r\n              <div className={classes.margins}>\r\n                <Button variant='contained' color='primary' startIcon={<AutorenewIcon />} onClick={onReload}>\r\n                  Reload\r\n            </Button>\r\n              </div>\r\n              : null\r\n          }\r\n        </Alert>\r\n        : null\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst styles = theme => ({\r\n  margins: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n});\r\n\r\n/** PropTypes */ \r\nContextErrorMessage.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** \r\n   * The error object, which drives the error message \r\n   * If not null, the error message is shown \r\n   */\r\n  error: PropTypes.object,\r\n  /**  A contextual error message to be shown */\r\n  contextErrorMsg: PropTypes.string,\r\n  /** \r\n   * A reload handler for the onReload event, which occurs if the reload button is clicked. \r\n   * If given a reload button is shown \r\n   */\r\n  onReload: PropTypes.func\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(ContextErrorMessage);\r\n","import React from 'react'\r\nimport { makeStyles, Paper, Typography, Link } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n  },\r\n  content: {\r\n    margin: theme.spacing(1),\r\n  }\r\n}));\r\n\r\n\r\nfunction Impressum() {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper elevation={0} className={classes.root}>\r\n      <div className={classes.content}>\r\n        <Typography variant='h6'>\r\n          HdManagement\r\n        </Typography>\r\n        <br />\r\n        <Typography>\r\n          Das HdManagement System ist ein Projektverwaltungssystem, welches im Rahmen der Lehrveranstaltung \"SW-Praktikum\" erstellt wurde.\r\n        </Typography>\r\n        <br />\r\n        <Typography>\r\n          Team Frontend: <Link href='https://github.com/LukasOrlando'>Lukas-Orlando Ulmer</Link>, \r\n          <Link href='https://github.com/Sania-Zeidan'> Sania Jasmin Zeidan</Link>,\r\n          <Link href='https://github.com/RahelUen'> Rahel Ün</Link>\r\n        </Typography>\r\n        <Typography>\r\n          Team Datenbank und Backend: <Link href='https://github.com/Tolga-Haybat'>Tolga Haybat</Link>,\r\n          <Link href='https://github.com/mariaweinberger'> Maria Weinberger</Link>, \r\n          <Link href='https://github.com/William-Zhang-26'> William Zhang</Link>\r\n        </Typography>\r\n        <br />\r\n        <Typography variant='body2'>\r\n          © Hochschule der Medien WS 2020 / 2021, all rights reserved.\r\n        </Typography>\r\n      </div>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Impressum;","//Google PB und Logout Option\r\n\r\nimport React, { Component, createRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Popover, IconButton, Avatar, ClickAwayListener, withStyles, Typography, Paper, Button, Grid, Divider } from '@material-ui/core';\r\nimport firebase from 'firebase/app';\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\n\r\n\r\nclass ProfileDropDown extends Component {\r\n\r\n    // Hier wird der Avatar Button referiert\r\n    #avatarButtonRef = createRef();\r\n  \r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        open: false,\r\n      }\r\n    }\r\n  \r\n    //Material-UI: Click away listener\r\n    handleAvatarButtonClick = () => {\r\n      this.setState({\r\n        open: !this.state.open\r\n      });\r\n    }\r\n\r\n    handleClose = () => {\r\n      this.setState({\r\n        open: false\r\n      });\r\n    }\r\n  \r\n    \r\n    handleSignOutButtonClicked = () => {\r\n      firebase.auth().signOut();\r\n    }\r\n  \r\n\r\n    render() {\r\n      const { classes, user } = this.props;\r\n      const { open } = this.state;\r\n  \r\n      return (\r\n        user ?\r\n          <div>\r\n            <IconButton className={classes.avatarButton} ref={this.#avatarButtonRef} onClick={this.handleAvatarButtonClick}>\r\n              <EmojiEmotionsIcon />\r\n            </IconButton>\r\n  \r\n            <Popover open={open} anchorEl={this.#avatarButtonRef.current} onClose={this.handleClose}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}>\r\n              <ClickAwayListener onClickAway={this.handleClose}>\r\n                <Paper className={classes.profileBox}>\r\n                  <Typography align='center'>Hallo</Typography>\r\n                  <Divider className={classes.divider} />\r\n                  {\r\n                  //<Typography align='center' variant='body2'>{user.displayName}</Typography>\r\n                  //<Typography align='center' variant='body2'>{user.email}</Typography>\r\n                  }\r\n                  <Divider className={classes.divider} />\r\n                  <Grid container justify='center'>\r\n                    <Grid item>\r\n                      <Button color='primary' onClick={this.handleSignOutButtonClicked}>Abmelden</Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Paper>\r\n              </ClickAwayListener>\r\n            </Popover>\r\n          </div>\r\n          : null\r\n      )\r\n    }\r\n  }\r\n  \r\n  const styles = theme => ({\r\n    avatarButton: {\r\n      float: 'right'\r\n    },\r\n    divider: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    profileBox: {\r\n      padding: theme.spacing(1),\r\n      background: theme.palette.background.default,\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\n  ProfileDropDown.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    /** The logged in firesbase user */\r\n    user: PropTypes.object,\r\n  }\r\n  \r\n  export default withStyles(styles)(ProfileDropDown)\r\n  ","//Der Studenten spezifische Header (Tabs: Projekte, Bericht, Impressum)\r\n\r\nimport React, { Component } from 'react';\r\nimport { Paper, Typography, Tabs, Tab, Box } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport ProfileDropDown from '../dialogs/ProfileDropDown';     //Zeile 30:<ProfileDropDown user={user} />\r\n\r\n\r\nclass Header extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tabindex: 0\r\n    };\r\n  }\r\n\r\n\r\n  handleTabChange = (e, newIndex) => {\r\n    this.setState({\r\n      tabindex: newIndex\r\n    })\r\n  };\r\n\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    return (\r\n      <Paper variant='outlined' >\r\n        <ProfileDropDown user={user} />\r\n        <Box p = {3}/>\r\n        <Typography variant='h4' component='h1' align='center'>\r\n          Willkommen\r\n        </Typography>\r\n \r\n            <Tabs indicatorColor='primary' textColor='primary' centered value={this.state.tabindex} onChange={this.handleTabChange} >\r\n              <Tab label='Projekte' component={RouterLink} to={`/projects`} />\r\n              <Tab label='Bericht' component={RouterLink} to={`/report`} />\r\n              <Tab label='Impressum' component={RouterLink} to={`/impressum`} />\r\n            </Tabs>\r\n     \r\n      </Paper>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Header;","//Der Admin und Dozenten spezifische Header (Tabs: Projekte, Noten, Impressum)\r\n\r\nimport React, { Component } from 'react';\r\nimport { Paper, Typography, Tabs, Tab, Box } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport ProfileDropDown from '../dialogs/ProfileDropDown';\r\n\r\n\r\nclass Header extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tabindex: 0\r\n    };\r\n  }\r\n\r\n\r\n  handleTabChange = (e, newIndex) => {\r\n    this.setState({\r\n      tabindex: newIndex\r\n    })\r\n  };\r\n\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    return (\r\n      <Paper variant='outlined' >\r\n        <ProfileDropDown user={user} />\r\n        <Box p = {3}/>\r\n        <Typography variant='h4' component='h1' align='center'>\r\n          Willkommen\r\n        </Typography>\r\n        \r\n            <Tabs indicatorColor='primary' textColor='primary' centered value={this.state.tabindex} onChange={this.handleTabChange} >\r\n              <Tab label='Projekte' component={RouterLink} to={`/projects`} />\r\n              <Tab label='Noten' component={RouterLink} to={`/grade`} />\r\n              <Tab label='Impressum' component={RouterLink} to={`/impressum`} />\r\n            </Tabs>\r\n            \r\n      </Paper>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Header;\r\n","/**\r\n * Base class for all BusinessObjects, which has an ID field by default.\r\n */\r\n\r\nexport default class BusinessObject {\r\n\r\n    constructor() {\r\n        this.id = 0;\r\n        this.create_time = new Date() //wird hier der Datentyp \"Date\" gesetzt, oder eine Variable wie \"aCreationTime\" o.Ä.\r\n    }\r\n\r\n    getID() {\r\n        return this.id;\r\n    }\r\n    \r\n    setID(aId) {\r\n        this.id = aId;\r\n    }\r\n\r\n    get_creation_time() {\r\n        return this.creation_time\r\n    }\r\n\r\n    toString() {\r\n        let result = '';\r\n        for (var prop in this) {\r\n          result += prop + ': ' + this[prop] + ' ';\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n    ","import BusinessObject from './BusinessObject';\r\n\r\nexport default class NamedBusinessObject extends BusinessObject {\r\n\r\n    constructor(aName) {\r\n        super();\r\n        this.name = aName;\r\n\r\n    }\r\n\r\n    getName() {\r\n        return this.name;\r\n    }\r\n    \r\n    setName(aName) {\r\n        this.name = aName;\r\n    }\r\n\r\n}\r\n\r\n    ","import NamedBusinessObject from './NamedBusinessObject';\r\n\r\n\r\nexport default class StateBO extends NamedBusinessObject /*extends NamedBusinessObject*/ {\r\n\r\n    //Konstruktorklasse, welche ein Modul BO erstellt mit den abgebildeten Attributen\r\n    constructor(aState = \"New\") {\r\n        super();\r\n        this.state = aState;\r\n    }\r\n\r\n    // dundermethod übetragen: Wie geht das?\r\n\r\n\r\n\r\n\r\n    //Array von StudentBOs aus einem JSON herraus mittels der setPrototypeOf fkt\r\n    static fromJSON(states) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(states)) {\r\n            states.forEach((sta) => {\r\n                Object.setPrototypeOf(sta, StateBO.prototype);\r\n                result.push(sta);\r\n            })\r\n        } else {\r\n            let sta = states;\r\n            Object.setPrototypeOf(sta, StateBO.prototype);\r\n            result.push(sta)\r\n        }\r\n        \r\n        return result;\r\n}\r\n\r\n}","import NamedBusinessObject from './NamedBusinessObject';\r\nimport AutomatBO from './AutomatBO';\r\nimport StateBO from './StateBO';\r\n\r\n/** Unstimmigkeiten mit dem Backend:\r\n * \r\n * - weekly muss ein bool sein\r\n * - preferred room muss ein bool sein\r\n * - Project_category gibt es gar nicht?\r\n * \r\n */\r\n\r\nexport default class ProjectBO extends NamedBusinessObject {\r\n\r\n    /*static s_new = \"neu\"\r\n    static s_approved = \"genehmigt\"\r\n    static s_dismissed = \"abgelehnt\"\r\n    static s_inreview = \"in Bewertung\"\r\n    static s_reviewed = \"Bewertung abgeschlossen\"*/\r\n\r\n    //Konstruktorklasse, welche ein Projekttypen BO erstellt mit den abgebildeten Attributen\r\n    constructor(aUserID, aProjectTypeID, aStateID,  aProjectDescription, aPartners, aCapacity, aPreferredRoom, aBDaysPreSchedule,\r\n        aBDaysFinale, aBDaysSaturdays, aPreferredBDays,  \r\n        aProjectCategory, aAdditionalLecturer, aWeekly) {\r\n\r\n        super();\r\n        this.user_id = aUserID;\r\n        this.project_type_id = aProjectTypeID;\r\n        this.state_id = aStateID;\r\n        this.project_description = aProjectDescription;        \r\n        this.partners = aPartners;\r\n        this.capacity = aCapacity;\r\n        this.preferred_room = aPreferredRoom;\r\n        this.b_days_pre_schedule = aBDaysPreSchedule;\r\n        this.b_days_finale = aBDaysFinale;\r\n        this.b_days_saturdays = aBDaysSaturdays;\r\n        this.preferred_b_days = aPreferredBDays;\r\n        this.project_category = aProjectCategory;\r\n        this.additional_lecturer = aAdditionalLecturer;\r\n        this.weekly = aWeekly;\r\n    }\r\n\r\n    /**setFirstEvent(first_event) {\r\n        this.current_state = this.current_state.first_event(first_event)\r\n    }\r\n\r\n    setSecEvent(sec_event) {\r\n        this.current_state = this.current_state.sec_event(sec_event)\r\n    }\r\n\r\n    setThirdEvent(third_event) {\r\n        this.current_state = this.current_state.third_event(third_event)\r\n    }\r\n\r\n    setFourthEvent(fourth_event) {\r\n        this.current_state = this.current_state.fourth_event(fourth_event)\r\n    }\r\n\r\n    setFifthEvent(fifth_event) {\r\n        this.current_state = this.current_state.fifth_event(fifth_event)\r\n    }\r\n\r\n\r\n    getFirstEvent(first_event) {\r\n        let result\r\n        if (first_event === \"neu\") {\r\n            result = \"neu\";\r\n        } else {\r\n            //pass\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getSecEvent(sec_event) {\r\n        let result\r\n        if (sec_event === \"genehmigt\") {\r\n            result = \"genehmigt\";\r\n        } else {\r\n            //pass\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getThirdEvent(third_event) {\r\n        let result\r\n        if (third_event === \"abgelehnt\") {\r\n            result = \"abgelehnt\";\r\n        } else {\r\n            //pass\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getFourthEvent(fourth_event) {\r\n        let result\r\n        if (fourth_event === \"in Bewertung\") {\r\n            result = \"in Bewertung\";\r\n        } else {\r\n            //pass\r\n        }\r\n        return result;    \r\n    }\r\n\r\n    getFifthEvent(fifth_event) {\r\n        let result\r\n        if (fifth_event === \"Bewertung abgeschlossen\") {\r\n            result = \"Bewertung abgeschlossen\";\r\n        } else {\r\n            //pass\r\n        }\r\n        return result;\r\n    }*/\r\n\r\n    //AutomatID\r\n    getUserID() {\r\n        return this.user_id;\r\n    }\r\n\r\n    setUserID(aUserID) {\r\n        this.user_id = aUserID;\r\n    }\r\n\r\n\r\n    //ProjectTypeID\r\n    getProjectTypeID() {\r\n        return this.project_type_id;\r\n    }\r\n\r\n    setProjectTypeID(aProjectTypeID) {\r\n        this.project_type_id = aProjectTypeID;\r\n    }\r\n\r\n\r\n    //StateID\r\n    getStateID() {\r\n        return this.state_id;\r\n    }\r\n\r\n    setStateID(aStateID) {\r\n        this.state_id = aStateID;\r\n    }\r\n\r\n\r\n    //Kapazität\r\n    getCapacity() {\r\n        return this.capacity;\r\n    }\r\n\r\n    setCapacity(aCapacity) {\r\n        this.capacity = aCapacity;\r\n    }\r\n\r\n    //externe Kooperationspartner\r\n    getPartners() {\r\n        return this.partners;\r\n    }\r\n\r\n    setPartners(aPartners) {\r\n        this.partners = aPartners;\r\n    }\r\n\r\n    //Projektbeschreibung\r\n    getProjectDescription() {\r\n        return this.project_description;\r\n    }\r\n\r\n    setProjectDescription(aProjectDescription) {\r\n        this.project_description = aProjectDescription;\r\n    }\r\n\r\n    //wöchentlich\r\n    getWeekly() {\r\n        return this.weekly;\r\n    }\r\n\r\n    setWeekly(aWeekly) {\r\n        this.weekly = aWeekly;\r\n    }\r\n\r\n    //Blocktage vor Beginn der Vorlesungszeit \r\n    getBDaysPreSchedule () {\r\n        return this.b_days_pre_schedule;\r\n    }\r\n\r\n    setBDaysPreSchedule (aBDaysPreSchedule) {\r\n        this.b_days_pre_schedule = aBDaysPreSchedule;\r\n    }\r\n\r\n    //Blocktage in der Prüfungszeit (nur inter-/transdiziplinäre Projekte)\r\n    getBDaysFinale () {\r\n        return this.b_days_finale;\r\n    }\r\n\r\n    setBDaysFinale (aBDaysFinale) {\r\n        this.b_days_finale = aBDaysFinale;\r\n    }\r\n\r\n    //Blocktage (Samstage) in der Vorlesungszeit\r\n    getBDaysSaturdays () {\r\n        return this.b_days_saturdays;\r\n    }\r\n\r\n    setBDaysSaturdays (aBDaysSaturdays) {\r\n        this.b_days_saturdays = aBDaysSaturdays;\r\n    }\r\n\r\n    //Präferierte Tage\r\n    getPreferredBDays () {\r\n        return this.preferred_b_days;\r\n    }\r\n\r\n    setPreferredBDays (aPreferredBDays) {\r\n        this.preferred_b_days = aPreferredBDays;\r\n    }\r\n\r\n    //Besonderer Raum notwendig (bool)\r\n    getRoomPreference () {\r\n        return this.room_preference;\r\n    }\r\n\r\n    setRoomPreference (aRoomPreference) {\r\n        this.room_preference = aRoomPreference;\r\n    }\r\n\r\n    //Besonderer Raum notwendig (str)\r\n    getPreferredRoom () {\r\n        return this.preferred_room;\r\n    }\r\n\r\n    setPreferredRoom (aPreferredRoom) {\r\n        this.preferred_room = aPreferredRoom;\r\n    }\r\n\r\n    //Projektkategorie\r\n    getProjectCategory () {\r\n        return this.project_category;\r\n    }\r\n\r\n    setProjectCategory (aProjectCategory) {\r\n        this.project_category = aProjectCategory;\r\n    }\r\n\r\n    //Externer Kooperationspartner \r\n    getAdditionalLecturer () {\r\n        return this.additional_lecturer;\r\n    }\r\n\r\n    setAdditionalLecturer (aAdditionalLecturer) {\r\n        this.additional_lecturer = aAdditionalLecturer;\r\n    }\r\n\r\n    //Array von ProjectBOs aus einem JSON herraus mittels der setPrototypeOf fkt\r\n    static fromJSON(projects) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(projects)) {\r\n            projects.forEach((pr) => {\r\n                Object.setPrototypeOf(pr, ProjectBO.prototype);\r\n                result.push(pr);\r\n            })\r\n        } else {\r\n            let pr = projects;\r\n            Object.setPrototypeOf(pr, ProjectBO.prototype);\r\n            result.push(pr)\r\n        }\r\n        \r\n        return result;\r\n    }\r\n}\r\n","import NamedBusinessObject from './NamedBusinessObject';\r\n\r\n\r\nexport default class ProjectTypeBO extends NamedBusinessObject {\r\n\r\n    //Konstruktorklasse, welche ein Projekttypen BO erstellt mit den abgebildeten Attributen\r\n    constructor(aName, aEcts, aSws) {\r\n\r\n        super();\r\n        this.name = aName;\r\n        this.ects = aEcts;\r\n        this.sws = aSws;\r\n\r\n    }\r\n\r\n    //ECTS\r\n    getEcts() {\r\n        return this.ects;\r\n    }\r\n\r\n    setEcts(aEcts) {\r\n        this.ects = aEcts;\r\n    }\r\n\r\n\r\n    //SWS\r\n    getSws() {\r\n        return this.sws;\r\n    }\r\n\r\n    setSws(aSws) {\r\n        this.sws = aSws;\r\n    }\r\n\r\n\r\n    //Array von ProjectTypeBOs aus einem JSON herraus mittels der setPrototypeOf fkt\r\n    static fromJSON(projecttypes) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(projecttypes)) {\r\n            projecttypes.forEach((pt) => {\r\n                Object.setPrototypeOf(pt, ProjectTypeBO.prototype);\r\n                result.push(pt);\r\n            })\r\n        } else {\r\n            let pt = projecttypes;\r\n            Object.setPrototypeOf(pt, ProjectTypeBO.prototype);\r\n            result.push(pt)\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n}","import NamedBusinessObject from './NamedBusinessObject';\r\n\r\nexport default class UserBO extends NamedBusinessObject {\r\n\r\n    //Konstruktorklasse, welche ein User BO erstellt mit den abgebildeten Attributen\r\n    constructor(aFirstname, aMail, aGoogleId, aRoleId) {\r\n        super();\r\n        this.firstname = aFirstname;\r\n        this.google_id = aGoogleId;\r\n        this.role_id = aRoleId;\r\n        this.mail = aMail;\r\n    }\r\n\r\n\r\n\r\n    //Vorname\r\n    setFirstName(aFirstname) {\r\n        this.firstname = aFirstname;\r\n    }\r\n\r\n    getFirstName() {\r\n        return this.firstname;\r\n    }\r\n\r\n\r\n    //Mail\r\n    setMail(aMail) {\r\n        this.mail = aMail;\r\n    }\r\n\r\n    getMail() {\r\n        return this.mail;\r\n    }\r\n\r\n\r\n    //GoogleId\r\n    setGoogleId(aGoogleId) {\r\n        this.google_id = aGoogleId;\r\n    }\r\n\r\n    getGoogleId() {\r\n        return this.google_id;\r\n    }\r\n\r\n\r\n    //RoleId\r\n    setRoleId(aRoleId) {\r\n        this.role_id = aRoleId;\r\n    }\r\n\r\n    getRoleId() {\r\n        return this.role_id;\r\n    }\r\n\r\n    \r\n\r\n\r\n    //Array von StudentBOs aus einem JSON herraus mittels der setPrototypeOf fkt\r\n    static fromJSON(users) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(users)) {\r\n            users.forEach((u) => {\r\n                Object.setPrototypeOf(u, UserBO.prototype);\r\n                result.push(u);\r\n            })\r\n        } else {\r\n            let u = users;\r\n            Object.setPrototypeOf(u, UserBO.prototype);\r\n            result.push(u)\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n\r\n}","import UserBO from './UserBO';\r\n\r\nexport default class StudentBO extends UserBO {\r\n\r\n    //Konstruktorklasse, welche ein Studenten BO erstellt mit den abgebildeten Attributen\r\n    constructor(aLastname, aFirstname, aCourse, aMatriculation_number, aMail, aProject_id) {\r\n        super();\r\n        this.lastname = aLastname;\r\n        this.firstname = aFirstname;\r\n        this.course = aCourse;\r\n        this.matriculation_number = aMatriculation_number;\r\n        this.mail = aMail;\r\n        this.project_id = aProject_id;\r\n    }\r\n\r\n\r\n    //Nachname\r\n    setLastName(aLastname) {\r\n        this.lastname = aLastname;\r\n    }\r\n\r\n    getLastName() {\r\n        return this.lastname;\r\n    }\r\n\r\n\r\n    //Vorname\r\n    setFirstName(aFirstname) {\r\n        this.firstname = aFirstname;\r\n    }\r\n\r\n    getFirstName() {\r\n        return this.firstname;\r\n    }\r\n\r\n\r\n    //Kurs\r\n    setCourse(aCourse) {\r\n        this.course = aCourse;\r\n    }\r\n\r\n    getCourse() {\r\n        return this.course;\r\n    }\r\n\r\n\r\n    //Matrikelnummer\r\n    setMatriculationNumber(aMatriculation_number) {\r\n        this.matriculation_number = aMatriculation_number;\r\n    }\r\n\r\n    getMatriculationNumber() {\r\n        return this.matriculation_number;\r\n    }\r\n\r\n\r\n    //Mail\r\n    setMail(aMail) {\r\n        this.mail = aMail;\r\n    }\r\n\r\n    getMail() {\r\n        return this.mail;\r\n    }\r\n\r\n\r\n    //PeojectID\r\n    setProcectId(aProject_id) {\r\n        this.project_id = aProject_id;\r\n    }\r\n\r\n    getProjectId() {\r\n        return this.project_id;\r\n    }\r\n    \r\n\r\n    //Array von StudentBOs aus einem JSON herraus mittels der setPrototypeOf fkt\r\n    static fromJSON(students) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(students)) {\r\n            students.forEach((st) => {\r\n                Object.setPrototypeOf(st, StudentBO.prototype);\r\n                result.push(st);\r\n            })\r\n        } else {\r\n            let st = students;\r\n            Object.setPrototypeOf(st, StudentBO.prototype);\r\n            result.push(st)\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n\r\n}","import BusinessObject from './BusinessObject';\r\n\r\nexport default class  ParticipationBO extends BusinessObject {\r\n\r\n\r\n    //Konstruktorklasse, welche ein Teilnahme BO erstellt mit den abgebildeten Attributen\r\n    constructor(aModuleID, aProjectID, aStudentID, aValidationID, aStatus) {\r\n        super();\r\n        this.module_id = aModuleID;\r\n        this.project_id = aProjectID;\r\n        this.student_id = aStudentID;\r\n        this.validation_id = aValidationID;\r\n        this.status = aStatus;\r\n    }\r\n\r\n    //Modul ID\r\n    getModuleID() {\r\n        return this.module_id\r\n    }\r\n    \r\n    setModuleID(aModuleID) {\r\n        this.module_id = aModuleID;\r\n    }\r\n\r\n\r\n    //Projekt ID\r\n    getProjectID() {\r\n        return this.project_id\r\n    }\r\n    \r\n    setProjectID(aProjectID) {\r\n        this.project_id = aProjectID;\r\n    }\r\n\r\n\r\n    //Student ID\r\n    getStudentID() {\r\n        return this.student_id\r\n    }\r\n    \r\n    setStudentID(aStudentID) {\r\n        this.student_id = aStudentID;\r\n    }\r\n\r\n\r\n    //Noten ID\r\n    getValidationID() {\r\n        return this.validation_id\r\n    }\r\n    \r\n    setValidationID(aValidationID) {\r\n        this.validation_id = aValidationID;\r\n    }\r\n\r\n\r\n    //Teilnahme Status\r\n    getStatus() {\r\n        return this.status\r\n    }\r\n    \r\n    setStatus(aStatus) {\r\n        this.status = aStatus;\r\n    }\r\n\r\n\r\n    //Array von ParticipationBOs aus einem JSON herraus mittels der setPrototypeOf fkt\r\n    static fromJSON(participations) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(participations)) {\r\n            participations.forEach((p) => {\r\n                Object.setPrototypeOf(p, ParticipationBO.prototype);\r\n                result.push(p);\r\n            })\r\n        } else {\r\n            let p = participations;\r\n            Object.setPrototypeOf(p, ParticipationBO.prototype);\r\n            result.push(p)\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n}","import BusinessObject from './BusinessObject';\r\n\r\nexport default class ValidationBO extends BusinessObject {\r\n\r\n    constructor(aGrade) {\r\n        super();\r\n        this.grade = aGrade;\r\n\r\n    }\r\n\r\n    getGrade() {\r\n        return this.grade;\r\n    }\r\n    \r\n    setGrade(aGrade) {\r\n        this.grade = aGrade;\r\n    }\r\n    \r\n    static fromJSON(validations) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(validations)) {\r\n            validations.forEach((v) => {\r\n                Object.setPrototypeOf(v, ValidationBO.prototype);\r\n                result.push(v);\r\n            })\r\n        } else {\r\n            let v = validations;\r\n            Object.setPrototypeOf(v, ValidationBO.prototype);\r\n            result.push(v)\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n}\r\n\r\n","import NamedBusinessObject from './NamedBusinessObject';\r\n\r\n\r\nexport default class ModuleBO extends NamedBusinessObject {\r\n\r\n    //Konstruktorklasse, welche ein Modul BO erstellt mit den abgebildeten Attributen\r\n    constructor(aEDV_number) {\r\n        super();\r\n        this.edv_number = aEDV_number;\r\n    }\r\n\r\n    //EDV Nummer\r\n    getEDV_number() {\r\n        return this.edv_number;\r\n    }\r\n\r\n    setEDV_number(aEDV_number) {\r\n        this.edv_number = aEDV_number;\r\n    }\r\n\r\n    //Array von ModuleBOs aus einem JSON heraus mittels der setPrototypeOf fkt\r\n    static fromJSON(modules) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(modules)) {\r\n            modules.forEach((m) => {\r\n                Object.setPrototypeOf(m, ModuleBO.prototype);\r\n                result.push(m);\r\n            })\r\n        } else {\r\n            let m = modules;\r\n            Object.setPrototypeOf(m, ModuleBO.prototype);\r\n            result.push(m)\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n}","import ProjectBO from './ProjectBO';\r\nimport ProjectTypeBO from './ProjectTypeBO';\r\nimport StudentBO from './StudentBO';\r\nimport StateBO from './StateBO';\r\nimport ParticipationBO from './ParticipationBO';\r\nimport ValidationBO from './ValidationBO';\r\nimport ModuleBO from './ModuleBO';\r\nimport UserBO from './UserBO';\r\n\r\n\r\nexport default class ProjectAPI {\r\n\r\n    // Singelton instance\r\n    static #api = null;\r\n  \r\n  \r\n    // Local Python backend\r\n    #projectServerBaseURL = '/projectmanager';\r\n  \r\n    //Local http-fake-backend \r\n    //#projectServerBaseURL = '/api/project';\r\n\r\n\r\n    //Project related\r\n    #getProjectsURL = () => `${this.#projectServerBaseURL}/project/`;\r\n    #getProjectbyIdURL = (id) => `${this.#projectServerBaseURL}/project/${id}`;\r\n    #getAttributesForProjectURL = (id) => `${this.#projectServerBaseURL}/projects/${id}/attributes`;\r\n    #addProjectURL = () => `${this.#projectServerBaseURL}/project`;\r\n    #deleteProjectURL = (id) => `${this.#projectServerBaseURL}/project/${id}`;\r\n\r\n    //Projecttype related\r\n    #addProjectTypeURL = () => `${this.#projectServerBaseURL}/project_type`;\r\n\r\n    //Student related\r\n    #getStudentByIdURL = (id) => `${this.#projectServerBaseURL}/student/${id}`;\r\n    #deleteStudentURL = (id) => `${this.#projectServerBaseURL}/students/${id}`;\r\n    #addStudentsForProjectURL = (id) => `${this.#projectServerBaseURL}/project/${id}/student`;\r\n    #getStudentByGoogleIdURL= (google_id) => `${this.#projectServerBaseURL}/student/${google_id}`;\r\n\r\n    //State related\r\n    #getStatebyIdURL = (id) => `${this.#projectServerBaseURL}/state/${id}`;\r\n\r\n    //Validation related\r\n    #getValidationbyIdURL = (id) => `${this.#projectServerBaseURL}/validation/${id}`;\r\n\r\n    //Participation related\r\n    #getParticipationsURL = () => `${this.#projectServerBaseURL}/all_participations/`;\r\n    #getParticipationForProjectURL = (id) => `${this.#projectServerBaseURL}/project/${id}/participation`;\r\n    #deleteParticipationURL = (id) => `${this.#projectServerBaseURL}/participation/${id}`;\r\n    \r\n    //Module related\r\n    #getModulebyIdURL = (id) => `${this.#projectServerBaseURL}/module/${id}`;\r\n\r\n    //User related\r\n    #addUser = () => `${this.#projectServerBaseURL}/user`;\r\n    #getUserByGoogleIdURL= (google_id) => `${this.#projectServerBaseURL}/user/${google_id}`;\r\n\r\n\r\n    static getAPI() {\r\n        if (this.#api == null) {\r\n            this.#api = new ProjectAPI();\r\n        }\r\n        return this.#api;\r\n    }\r\n\r\n\r\n    #fetchAdvanced = (url, init) => fetch(url, init)\r\n        .then(res => {\r\n            // The Promise returned from fetch() won’t reject on HTTP error status even if the response is an HTTP 404 or 500. \r\n            if (!res.ok) {\r\n                throw Error(`${res.status} ${res.statusText}`);\r\n            }\r\n            return res.json();\r\n        }\r\n        )\r\n\r\n    //Project related\r\n    getProjects() {\r\n        return this.#fetchAdvanced(this.#getProjectsURL()).then((responseJSON) => {\r\n            let projectBOs = ProjectBO.fromJSON(responseJSON);\r\n            //console.info(projectBOs);\r\n            return new Promise(function (resolve) {\r\n                resolve(projectBOs);\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    getProjectbyId(projectID) {\r\n      return this.#fetchAdvanced(this.#getProjectbyIdURL(projectID)).then((responseJSON) => {\r\n        // We always get an array of ProjectBOs.fromJSON, but only need one object\r\n        let responseProjectBO = ProjectBO.fromJSON(responseJSON)[0];\r\n        // console.info(responsePtojectBO);\r\n        return new Promise(function (resolve) {\r\n          resolve(responseProjectBO);\r\n        })\r\n      })\r\n    }\r\n\r\n    \r\n    getAttributesForProject(attributeBOs) {\r\n        return this.#fetchAdvanced(this.#getAttributesForProjectURL(attributeBOs))\r\n          .then(responseJSON => {\r\n            // console.log(responseJSON)\r\n            return new Promise(function (resolve) {\r\n              resolve(responseJSON);\r\n            })\r\n          })\r\n      }\r\n      \r\n\r\n    addProject(projectBO) {\r\n      return this.#fetchAdvanced(this.#addProjectURL(), {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json, text/plain',\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(projectBO)\r\n      }).then((responseJSON) => {\r\n        // We always get an array of ProjectBOs.fromJSON, but only need one object\r\n        let responseProjectBO = ProjectBO.fromJSON(responseJSON)[0];\r\n        \r\n        return new Promise(function (resolve) {\r\n          resolve(responseProjectBO);\r\n        })\r\n      })\r\n    }\r\n\r\n    deleteProject(projectID) {\r\n      return this.#fetchAdvanced(this.#deleteProjectURL(projectID), {\r\n        method: 'DELETE'\r\n      }).then((responseJSON) => {\r\n        let responseProjectBO = ProjectBO.fromJSON(responseJSON)[0];\r\n        return new Promise(function (resolve) {\r\n          resolve(responseProjectBO);\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n    //Projecttype related\r\n\r\n    addProjectType(projecttypeBO) {\r\n      console.log('Ich bin hier.')\r\n      console.log(projecttypeBO)\r\n      console.info(projecttypeBO)\r\n      return this.#fetchAdvanced(this.#addProjectTypeURL(), {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json, text/plain',\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(projecttypeBO) \r\n      }).then((responseJSON) => {\r\n        // We always get an array of ProjectBOs.fromJSON, but only need one object\r\n        let responseProjectTypeBO = ProjectTypeBO.fromJSON(responseJSON)[0];\r\n        console.info(responseProjectTypeBO)\r\n        return new Promise(function (resolve) {\r\n          resolve(responseProjectTypeBO);\r\n          console.log('Ich bin zum Schluss hier.')\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n\r\n\r\n    //Student related\r\n    getStudentbyId(studentID) { \r\n        return this.#fetchAdvanced(this.#getStudentByIdURL(studentID)).then((responseJSON) => {\r\n          // We always get an array of StudentBOs.fromJSON, but only need one object\r\n          let responseStudentBO = StudentBO.fromJSON(responseJSON)[0];\r\n        \r\n          return new Promise(function (resolve) {\r\n            resolve(responseStudentBO);\r\n          })\r\n        })\r\n      }\r\n\r\n    addStudentForProject(projectID) {\r\n        return this.#fetchAdvanced(this.#addStudentsForProjectURL(projectID), {\r\n            method: 'POST'\r\n        })\r\n            .then((responseJSON) => {\r\n                // We always get an array of StudentBO.fromJSON, but only need one object\r\n                let studentBO = StudentBO.fromJSON(responseJSON)[0];\r\n            \r\n                return new Promise(function (resolve) {\r\n                    \r\n                    resolve(studentBO);\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n    deleteStudent(studentID) {\r\n        return this.#fetchAdvanced(this.#deleteStudentURL(studentID), {\r\n        method: 'DELETE'\r\n        }).then((responseJSON) => {\r\n        // We always get an array of StudentBOs.fromJSON\r\n        let responseStudentBO = StudentBO.fromJSON(responseJSON)[0];\r\n       \r\n        return new Promise(function (resolve) {\r\n            resolve(responseStudentBO);\r\n        })\r\n        })\r\n    } \r\n\r\n\r\n\r\n    getStudentByGoogleId(google_id) {\r\n      return this.#fetchAdvanced(this.#getStudentByGoogleIdURL(google_id)).then((responseJSON) => {\r\n        // We always get an array of ProjectBOs.fromJSON, but only need one object\r\n        let responseStudentBO = StudentBO.fromJSON(responseJSON)[0];\r\n        // console.info(responsePtojectBO);\r\n        return new Promise(function (resolve) {\r\n          resolve(responseStudentBO);\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n    //State related\r\n    getStatebyId(stateID) {\r\n      return this.#fetchAdvanced(this.#getStatebyIdURL(stateID)).then((responseJSON) => {\r\n        // We always get an array of ProjectBOs.fromJSON, but only need one object\r\n        let responseStateBO = StateBO.fromJSON(responseJSON)[0];\r\n        return new Promise(function (resolve) {\r\n          resolve(responseStateBO);\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n    //Validation related\r\n    getValidationbyId(validationID) {\r\n      return this.#fetchAdvanced(this.#getValidationbyIdURL(validationID)).then((responseJSON) => {\r\n        // We always get an array of ProjectBOs.fromJSON, but only need one object\r\n        let responseValidationBO = ValidationBO.fromJSON(responseJSON)[0];\r\n        // console.info(responsePtojectBO);\r\n        return new Promise(function (resolve) {\r\n          resolve(responseValidationBO);\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n    //Participation related\r\n    getParticipations() {\r\n      return this.#fetchAdvanced(this.#getParticipationsURL()).then((responseJSON) => {\r\n          let participationBOs = ParticipationBO.fromJSON(responseJSON);\r\n          return new Promise(function (resolve) {\r\n              resolve(participationBOs);\r\n          })\r\n      })\r\n    }\r\n\r\n    getParticipationForProject(projectID) { \r\n      return this.#fetchAdvanced(this.#getParticipationForProjectURL(projectID)).then((responseJSON) => {\r\n        // We always get an array of ParticipationBOs.fromJSON, but only need one object\r\n        let participationBOs = ParticipationBO.fromJSON(responseJSON);                                      // hier wurde das [0] entfernt\r\n      \r\n        return new Promise(function (resolve) {\r\n          resolve(participationBOs);\r\n        })\r\n      })\r\n    }\r\n\r\n    deleteParticipation(participationID) {\r\n      return this.#fetchAdvanced(this.#deleteParticipationURL(participationID), {\r\n        method: 'DELETE'\r\n      }).then((responseJSON) => {\r\n        let responseParticipationBO = ParticipationBO.fromJSON(responseJSON)[0];\r\n        return new Promise(function (resolve) {\r\n          resolve(responseParticipationBO);\r\n        })\r\n      })\r\n    }\r\n\r\n    \r\n    //Module related\r\n    getModulebyId(moduleID) {\r\n      return this.#fetchAdvanced(this.#getModulebyIdURL(moduleID)).then((responseJSON) => {\r\n        // We always get an array of ProjectBOs.fromJSON, but only need one object\r\n        let responseModuleBO = ModuleBO.fromJSON(responseJSON)[0];\r\n        // console.info(responsePtojectBO);\r\n        return new Promise(function (resolve) {\r\n          resolve(responseModuleBO);\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n\r\n    //User related\r\n    addUser(userBO) {\r\n      return this.#fetchAdvanced(this.#addProjectURL(), {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json, text/plain',\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(userBO)\r\n      }).then((responseJSON) => {\r\n        // We always get an array of ProjectBOs.fromJSON, but only need one object\r\n        let responseUserBO = UserBO.fromJSON(responseJSON)[0];\r\n        \r\n        return new Promise(function (resolve) {\r\n          resolve(responseUserBO);\r\n        })\r\n      })\r\n    }\r\n\r\n\r\n    \r\n    getUserByGoogleId(google_id) {\r\n      return this.#fetchAdvanced(this.#getUserByGoogleIdURL(google_id)).then((responseJSON) => {\r\n        // We always get an array of ProjectBOs.fromJSON, but only need one object\r\n        let responseUserBO = UserBO.fromJSON(responseJSON)[0];\r\n        // console.info(responsePtojectBO);\r\n        return new Promise(function (resolve) {\r\n          resolve(responseUserBO);\r\n        })\r\n      })\r\n    }\r\n\r\n    \r\n}\r\n","//Button für einen Studenten, um sich in einem Projekt anzumelden\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ProjectAPI from '../../api/ProjectAPI';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\n\r\n\r\nclass StudentProjectSignIn extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      // Init the state\r\n      this.state = {\r\n        SignInInProgress: false,\r\n        SignInError: null\r\n      };\r\n    }\r\n\r\n//get Project ID\r\n\r\n//Folgendes in der API ergänzen:\r\n//get Student ID\r\n//project get ID\r\n\r\n  /** Adds an account for the current customer */\r\n  addStudent = () => {\r\n    ProjectAPI.getAPI().addStudentForProject(this.props.project.getID()).then(studentBO => {\r\n      // console.log(accountBO)\r\n      this.setState({  // Set new state when StudentBOs have been fetched\r\n        students: [...this.state.students, studentBO],\r\n        SignInInProgress: false, // loading indicator \r\n        SignInError: null\r\n      })\r\n    }).catch(e =>\r\n      this.setState({ // Reset state with error from catch \r\n        students: [],\r\n        SignInInProgress: false,\r\n        SignInError: e\r\n      })\r\n    );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      SignInInProgress: true,\r\n      SignInError: null\r\n    });\r\n  }\r\n\r\n\r\n  /** Handles the close / cancel button click event */\r\n    handleClose = () => {\r\n    // console.log(event);\r\n    this.props.onClose(null);\r\n  }\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, project, show } = this.props;\r\n    const { SignInError, SignInInProgress } = this.state;\r\n\r\n    return (\r\n      show ?\r\n        <Dialog open={show} onClose={this.handleClose}>\r\n          <DialogTitle id='StudentSignin-Title'>In Projekt einschreiben\r\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Möchten Sie sich in folgendes Projekt einschreiben: '{project.getName()}' (ID: {project.getID()})?\r\n            </DialogContentText>\r\n            <LoadingProgress show={SignInInProgress} />\r\n            <ContextErrorMessage error={SignInError} contextErrorMsg={`The student could not be added to the project '${project.getName()}' with the ID: '${project.getID()}'`}\r\n              onReload={this.addStudentForProject} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color='secondary'>\r\n              Abbrechen\r\n            </Button>\r\n            <Button variant='contained' onClick={this.addStudent} color='primary'>\r\n              Einschreiben\r\n            </Button> \r\n          </DialogActions>\r\n        </Dialog>\r\n        : null\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\nStudentProjectSignIn.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    /** The CustomerBO to be deleted */\r\n    project: PropTypes.object.isRequired,\r\n    /** If true, the dialog is rendered */\r\n    show: PropTypes.bool.isRequired,\r\n    /**  \r\n     * Handler function which is called, when the dialog is closed.\r\n     * Sends the deleted CustomerBO as parameter or null, if cancel was pressed.\r\n     *  \r\n     * Signature: onClose(CustomerBO customer);\r\n     */\r\n    onClose: PropTypes.func.isRequired,\r\n  }\r\n  \r\n  export default withStyles(styles)(StudentProjectSignIn);\r\n","//Button für Studenten, um sich von Projekten abzumelden\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ProjectAPI from '../../api/ProjectAPI';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\n\r\n\r\nclass StudentProjectSignOut extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      // Init the state\r\n      this.state = {\r\n        SignOutInProgress: false,\r\n        SignOutError: null\r\n      };\r\n    }\r\n\r\n//get Project ID\r\n\r\n//Folgendes in der API ergänzen:\r\n//get Student ID\r\n//project get ID\r\n\r\n  /** Adds an account for the current customer */\r\n  SignOutStudent = () => {\r\n    ProjectAPI.getAPI().deleteStudentFromProject(this.props.project.getID()).then(studentBO => {\r\n      // console.log(accountBO)\r\n      this.setState({  // Set new state when StudentBOs have been fetched\r\n        students: [...this.state.students, studentBO],\r\n        SignOutInProgress: false, // loading indicator \r\n        SignOutError: null\r\n      })\r\n    }).catch(e =>\r\n      this.setState({ // Reset state with error from catch \r\n        students: [],\r\n        SignOutInProgress: false,\r\n        SignOutError: e\r\n      })\r\n    );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      SignOutInProgress: true,\r\n      SignOutError: null\r\n    });\r\n  }\r\n\r\n\r\n  /** Handles the close / cancel button click event */\r\n    handleClose = () => {\r\n    // console.log(event);\r\n    this.props.onClose(null);\r\n  }\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, project, show } = this.props;\r\n    const { SignOutError, SignOutInProgress } = this.state;\r\n\r\n    return (\r\n      show ?\r\n        <Dialog open={show} onClose={this.handleClose}>\r\n          <DialogTitle id='StudentSignOut-Title'>Aus Projekt ausschreiben\r\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Möchten Sie sich aus folgendem Projekt ausschreiben: '{project.getName()}' (ID: {project.getID()})?\r\n            </DialogContentText>\r\n            <LoadingProgress show={SignOutInProgress} />\r\n            <ContextErrorMessage error={SignOutError} contextErrorMsg={`The student could not be deleted from the project '${project.getName()}' with the ID: '${project.getID()}'`}\r\n              onReload={this.deleteStudentFromProject} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color='secondary'>\r\n              Abbrechen\r\n            </Button>\r\n            <Button variant='contained' onClick={this.deleteStudentFromProject} color='primary'>\r\n              Ausschreiben\r\n            </Button> \r\n          </DialogActions>\r\n        </Dialog>\r\n        : null\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\nStudentProjectSignOut.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    /** The CustomerBO to be deleted */\r\n    project: PropTypes.object.isRequired,\r\n    /** If true, the dialog is rendered */\r\n    show: PropTypes.bool.isRequired,\r\n    /**  \r\n     * Handler function which is called, when the dialog is closed.\r\n     * Sends the deleted CustomerBO as parameter or null, if cancel was pressed.\r\n     *  \r\n     * Signature: onClose(CustomerBO customer);\r\n     */\r\n    onClose: PropTypes.func.isRequired,\r\n  }\r\n  \r\n  export default withStyles(styles)(StudentProjectSignOut);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\r\nimport { Button, List, ListItem } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n//import CustomerForm from './dialogs/CustomerForm';\r\nimport StudentProjectSignIn from './dialogs/StudentProjectSignIn';\r\nimport StudentProjectSignOut from './dialogs/StudentProjectSignOut';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n/** Fehlende Inhalte:\r\n *  \r\n * - Aus ProjectTypeBO: Name (Fachspezifisch, Inter-, Transdisziplinär), ECTS und SWS\r\n * - Aus ModuleBO: EDV-Nummer\r\n * \r\n */\r\n\r\n//Condition für alle ergänzen\r\n//Admin Funktionen ergänzen\r\n\r\n\r\nclass StudentProjectListEntry extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      // Init the state\r\n      this.state = {\r\n        project: props.project,\r\n        state: props.state,\r\n        showStudentProjectSignOut: false,\r\n        showStudentProjectSignIn: false,\r\n\r\n        //Admin Attribute für Funktionen\r\n      };\r\n    }\r\n\r\n  /** Handles onChange events of the underlying ExpansionPanel */\r\n  expansionPanelStateChanged = () => {\r\n    this.props.onExpandedStateChange(this.props.project);\r\n  }\r\n\r\n\r\n\r\n  StudentProjectSignInClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showStudentProjectSignIn : true\r\n    });\r\n  }\r\n\r\n  StudentProjectSignInClosed = (project) => {\r\n    if (project) {\r\n      this.props.onStudentProjectSignIn(project);\r\n    };\r\n\r\n    // Don´t show the dialog\r\n    this.setState({\r\n      showStudentProjectSignIn: false\r\n    });\r\n  }\r\n\r\n\r\n  \r\n  StudentProjectSignOutClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showStudentProjectSignOut : true\r\n    });\r\n  }\r\n\r\n  StudentProjectSignOutClosed = (project) => {\r\n    if (project) {\r\n      this.props.onStudentProjectSignOut(project);\r\n    };\r\n\r\n    // Don´t show the dialog\r\n    this.setState({\r\n      showStudentProjectSignOut: false\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    const { project, state, showStudentProjectSignIn, showStudentProjectSignOut } = this.state;\r\n\r\n    // console.log(this.state);\r\n    return (\r\n      <div>\r\n      { project.getStateID() === 3 ?\r\n      <Grid>\r\n      <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={`project${project.getID()}projectpanel-header`} //** Wozu wird hier die Project ID benötigt*/\r\n          >\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='body1' className={classes.heading}>{project.getName()} {/** Angabe des Dozenten (UserBO?)*/}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <List>\r\n            <ListItem>Kapazität: {project.getCapacity()} </ListItem>\r\n            <ListItem>Projektbeschreibung: {project.getProjectDescription()} </ListItem>\r\n            <ListItem>Betreuuende Dozenten: {project.getAdditionalLecturer()} </ListItem>  \r\n            <ListItem>Externe Partner: {project.getPartners()} </ListItem>\r\n            <ListItem>Wöchentlicher Kurs: {project.getWeekly()} </ListItem>\r\n            <ListItem>Anzahl der Blocktage vor der Vorlesungszeit: {project.getBDaysPreSchedule()} </ListItem>\r\n            <ListItem>Anzahl der Blocktage in der Prüfungszeit: {project.getBDaysFinale()} </ListItem>            \r\n            <ListItem>Anzahl der Blocktage in der Vorlesungszeit (Samstage): {project.getBDaysSaturdays()} </ListItem>\r\n            <ListItem>Raum: {project.getPreferredRoom()} </ListItem> \r\n            <ListItem>StateID: {project.getStateID()} </ListItem> \r\n            <ListItem>\r\n              <Button  color='secondary' startIcon={<AddIcon />} onClick={this.StudentProjectSignInClicked}>\r\n                Anmelden\r\n              </Button>\r\n              <Button  color='primary' startIcon={<AddIcon />} onClick={this.StudentProjectSignOutClicked}>\r\n                Abmelden\r\n              </Button>\r\n            </ListItem>  \r\n          </List>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n        <StudentProjectSignIn show={showStudentProjectSignIn} project={project} onClose={this.StudentProjectSignInClosed} /> \r\n        <StudentProjectSignOut show={showStudentProjectSignOut} project={project} onClose={this.StudentProjectSignOutClosed} /> \r\n        {/**<CustomerDeleteDialog show={showCustomerDeleteDialog} customer={customer} onClose={this.deleteCustomerDialogClosed} />   Admin Funktionen*/} \r\n        </Grid>\r\n      : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\nStudentProjectListEntry.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    expandedState: PropTypes.bool.isRequired,\r\n    onExpandedStateChange: PropTypes.func.isRequired\r\n    }\r\n  \r\nexport default withStyles(styles)(StudentProjectListEntry);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, List, ListItem, Button } from '@material-ui/core';\r\n//import AddIcon from '@material-ui/icons/Add';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ProjectAPI  from '../api/ProjectAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport StudentProjectListEntry from './StudentProjectListEntry';\r\n\r\n/**  \r\n * Hier wird die Liste aus Studentensicht angezeigt. Studenten sehen alle genehmigten Projekte\r\n * und können sich dafür An- und Abmelden.\r\n */\r\n\r\nclass StudentProjectList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // console.log(props);\r\n    let expandedID = null;\r\n\r\n    if (this.props.location.expandProject) {\r\n      expandedID = this.props.location.expandProject.getID();\r\n    }\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n        projects: [],\r\n        error: null,\r\n        loadingInProgress: false,\r\n        expandedProjectID: expandedID,\r\n    };\r\n  }\r\n\r\n  onExpandedStateChange = project => {\r\n    // console.log(projectID);\r\n    // Set expandend project entry to null by default\r\n    let newID = null;\r\n\r\n    // If same project entry is clicked, collapse it else expand a new one\r\n    if (project.getID() !== this.state.expandedProjectID) {\r\n      // Expand the project entry with projectID\r\n      newID = project.getID();\r\n    }\r\n    // console.log(newID);\r\n    this.setState({\r\n      expandedProjectID: newID,\r\n    });\r\n  }\r\n\r\n  getProjects = () => {\r\n    ProjectAPI.getAPI().getProjects()\r\n      .then(projectBOs =>\r\n        this.setState({              \r\n          projects: projectBOs,\r\n          loadingInProgress: false,   \r\n          error: null\r\n        })).catch(e =>\r\n          this.setState({            \r\n            projects: [],\r\n            loadingInProgress: false, \r\n            error: e\r\n          })\r\n        );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      error: null\r\n    });\r\n  }\r\n\r\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\r\n  componentDidMount() {\r\n    this.getProjects();\r\n  }\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { projects, expandedProjectID, loadingInProgress, error } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <List className={classes.projectList}>\r\n        { \r\n          // Show the list of ProjectListEntry components\r\n          // Do not use strict comparison, since expandedProjectID maybe a string if given from the URL parameters\r\n          projects.map(project => <StudentProjectListEntry key={project.getID()} project={project} \r\n          show={this.props.show}  onExpandedStateChange={this.onExpandedStateChange}/>)\r\n        }\r\n\r\n          <ListItem>\r\n            <LoadingProgress show={loadingInProgress} />\r\n            <ContextErrorMessage error={error} contextErrorMsg={`The list of projects could not be loaded.`} onReload={this.getProjects} />\r\n          </ListItem>\r\n\r\n        </List>\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '90%',\r\n    marginTop: theme.spacing(3),\r\n    //marginRight: theme.spacing(10),\r\n    marginLeft: theme.spacing(10),\r\n  },\r\n  customerFilter: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(1),\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nStudentProjectList.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n\r\n  show: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(StudentProjectList));","//Entfernen eines Projektes\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ProjectAPI  from '../../api/ProjectAPI';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\n\r\n\r\nclass ProjectDeleteDialog extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init the state\r\n    this.state = {\r\n      deletingInProgress: false,\r\n      deletingError: null\r\n    };\r\n  }\r\n\r\n  /** Delete the Project */\r\n  deleteProject = () => {\r\n    ProjectAPI.getAPI().deleteProject(this.props.project.getID()).then(project => {\r\n      this.setState({\r\n        deletingInProgress: false,              // disable loading indicator  \r\n        deletingError: null                     // no error message\r\n      });\r\n      this.props.onClose(this.props.project);  // call the parent with the deleted customer\r\n    }).catch(e =>\r\n      this.setState({\r\n        deletingInProgress: false,              // disable loading indicator \r\n        deletingError: e                        // show error message\r\n      })\r\n    );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      deletingInProgress: true,                 // show loading indicator\r\n      deletingError: null                       // disable error message\r\n    });\r\n  }\r\n\r\n  /** Handles the close / cancel button click event */\r\n  handleClose = () => {\r\n    // console.log(event);\r\n    this.props.onClose(null);\r\n  }\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, show, project } = this.props;\r\n    const { deletingInProgress, deletingError } = this.state;\r\n\r\n    return (\r\n      <div>\r\n      { show ?\r\n        <Dialog open={show} onClose={this.handleClose}>\r\n          <DialogTitle id='delete-dialog-title'>Löschen des Projektes\r\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Sind Sie sicher, dass Sie das Projekt '{project.getName()} ' (ID: {project.getID()}) löschen möchten?\r\n            </DialogContentText>\r\n            <LoadingProgress show={deletingInProgress} />\r\n            <ContextErrorMessage error={deletingError} contextErrorMsg={`The project '${project.getName()} '(ID: ${project.getID()}) could not be deleted.`}\r\n              onReload={this.deleteProject} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color='secondary'>\r\n              Abbrechen\r\n            </Button>\r\n            <Button variant='contained' onClick={this.deleteProject} color='primary'>\r\n              Löschen\r\n            </Button> \r\n          </DialogActions>\r\n        </Dialog>\r\n      : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nProjectDeleteDialog.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  project: PropTypes.object.isRequired,\r\n\r\n  show: PropTypes.bool.isRequired,\r\n \r\n  onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(ProjectDeleteDialog);\r\n","import ProjectDeleteDialog from './dialogs/ProjectDeleteDialog';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\r\nimport { List, ListItem } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ProjectAPI  from '../api/ProjectAPI';\r\n\r\n/** Fehlende Inhalte:\r\n *  \r\n * - Aus ProjectTypeBO: Name (Fachspezifisch, Inter-, Transdisziplinär), ECTS und SWS\r\n * - Aus ModuleBO: EDV-Nummer\r\n * \r\n */\r\n\r\n//Condition für alle ergänzen\r\n\r\n\r\n\r\nclass LecturerProjectListEntry extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      // Init the state\r\n      this.state = {\r\n        project: props.project,\r\n        state: null,\r\n      };\r\n    }\r\n\r\n  /** Handles onChange events of the underlying ExpansionPanel */\r\n  expansionPanelStateChanged = () => {\r\n    this.props.onExpandedStateChange(this.props.project);\r\n  }\r\n\r\n\r\n  getStatebyID = () => {\r\n    ProjectAPI.getAPI().getStatebyId(this.state.project.getStateID())   //Hier die ID des Studentens aufrufen --> this.state.studentId.getId()....vom StudentBO\r\n    //ProjectAPI.getAPI().getStudentById()\r\n        .then (projectBO => {\r\n            this.setState({ state: projectBO });\r\n        })\r\n  }\r\n\r\n  \r\n  componentDidMount() {\r\n    this.getStatebyID();\r\n  }\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    // Use the states project\r\n    const { project, state } = this.state;\r\n\r\n    // console.log(this.state);\r\n    return (\r\n      <div>\r\n      { state ?\r\n      <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={`project${project.getID()}projectpanel-header`} //** Wozu wird hier die Project ID benötigt*/\r\n          >\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='body1' className={classes.heading}>{project.getName()} {/** Angabe des Dozenten (UserBO?)*/}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs />\r\n              <Grid item>\r\n                <Typography variant='body2' color={'textSecondary'}>{state.getName()}</Typography> {/**Ergänzend steht hier die aktuelle Condition des Projektes */}\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <List>\r\n            <ListItem>Kapazität: {project.getCapacity()} </ListItem>\r\n            <ListItem>Projektbeschreibung: {project.getProjectDescription()} </ListItem>\r\n            <ListItem>Betreuuende Dozenten: {project.getAdditionalLecturer()} </ListItem>  \r\n            <ListItem>Externe Partner: {project.getPartners()} </ListItem>\r\n            <ListItem>Wöchentlicher Kurs: {project.getWeekly()} </ListItem>\r\n            <ListItem>Anzahl der Blocktage vor der Vorlesungszeit: {project.getBDaysPreSchedule()} </ListItem>\r\n            <ListItem>Anzahl der Blocktage in der Prüfungszeit: {project.getBDaysFinale()} </ListItem>            \r\n            <ListItem>Anzahl der Blocktage in der Vorlesungszeit (Samstage): {project.getBDaysSaturdays()} </ListItem>\r\n            <ListItem>Raum: {project.getPreferredRoom()} </ListItem> \r\n          </List>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\nLecturerProjectListEntry.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    state: PropTypes.object.isRequired,\r\n    expandedState: PropTypes.bool.isRequired,\r\n    onExpandedStateChange: PropTypes.func.isRequired\r\n    }\r\n  \r\nexport default withStyles(styles)(LecturerProjectListEntry);\r\n\r\n\r\n","//Erstellen eines Objektes, nach der erstellung ist kein Update/ Edit möglich\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField } from '@material-ui/core';\r\nimport { MenuItem, FormControl, InputLabel, Select, Typography} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ProjectAPI  from '../../api/ProjectAPI';\r\nimport ProjectBO  from '../../api/ProjectBO';\r\nimport ProjectTypeBO  from '../../api/ProjectTypeBO';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\n\r\n\r\n/**\r\n * Die ProjectForm erlaubt es Dozenten, ein neues Projekt anzulegen.\r\n * Nach Anlegend es Projektes erhält das Projekt den automatisch generierten \r\n * Anfangszustand neu (Projekt ist ein Automat).\r\n * \r\n * Daraufhin muss der Dozent warten, bis der Admin das Projekt bewertet (genehmigen / ablehnen)\r\n * \r\n * Wenn das Projekt genehmigt wird, wird dem Studenten das neue Projekt in der Studentensicht \r\n * angezeigt und er hat die Möglichkeit, sich dafür anzumelden. Wenn sich Studenten anmelden, hat \r\n * das Projekt den Zustand \"in Bewertung\".\r\n * \r\n * Wenn hingegen das Projekt abgelehnt wird, wird das Projekt nicht weiter angezeigt.\r\n * Das Projekt wird dabei aber nicht gelöscht, sondern besteht weiterhin mit dem Zustand \"abgelehnt\".\r\n * Es sind dann keine weiteren Interaktionen mehr mit dem Projekt möglich.\r\n * \r\n */\r\n\r\nclass ProjectForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let name = '';\r\n    let as = '';\r\n    let ep = '';\r\n    let pd = '';\r\n    let pc = '';\r\n    let weekly = '';\r\n    let cap = '';\r\n    let bdps = '';\r\n    let bdf = '';\r\n    let bds = '';\r\n    let pbd = '';\r\n    let rp = '';\r\n    let pr = '';\r\n\r\n    let typeName = '';\r\n    let ects = '';\r\n    let sws = '';\r\n\r\n\r\n    // Init the state\r\n    this.state = {\r\n      //Project spezifische Attribute\r\n      projectName: name,\r\n      projectNameValidationFailed: false,\r\n      additionalSupervisor: as,\r\n      additionalSupervisorValidationFailed: false,\r\n      externalPartners: ep,\r\n      externalPartnersValidationFailed: false,\r\n      projectDescription: pd,\r\n      projectDescriptionValidationFailed: false,\r\n      projectCategory: pc,\r\n      projectCategoryValidationFailed: false,\r\n      weekly: weekly,\r\n      weeklyValidationFailed: false,\r\n      capacity: cap,\r\n      capacityValidationFailed: false,\r\n      bDaysPreSchedule: bdps,\r\n      bDaysPreScheduleValidationFailed: false,\r\n      bDaysFinale: bdf,\r\n      bDaysFinaleValidationFailed: false,\r\n      bDaysSaturdays: bds,\r\n      bDaysSaturdaysValidationFailed: false,\r\n      preferredBDays: pbd,\r\n      preferredBDaysValidationFailed: false,\r\n      roomPreference: rp,\r\n      roomPreferenceValidationFailed: false,\r\n      preferredRoom: pr,\r\n      preferredRoomValidationFailed: false,\r\n\r\n      // ProjectType spezifische Attribute\r\n      projectTypeName: typeName,\r\n      projectTypeNameValidationFailed: false,\r\n      ects: ects,\r\n      //ectsValidationFailed: false,\r\n      sws: sws,\r\n      //swsValidationFailed: false,\r\n\r\n      // Ladebalken und Error\r\n      addingInProgress: false,\r\n      addingError: null\r\n    };\r\n\r\n    //this.handleChange = this.handleChange.bind(this);\r\n    //this.handleSubmit = this.handleSubmit.bind(this);\r\n    // Beim Schließen des Dialogs soll der Anfangszustand wieder hergestellt werden\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  /** Adds the Project */\r\n  addProject = () => {\r\n    let newProject = new ProjectBO(this.state.projectName, this.state.additionalSupervisor, this.state.externalPartners, \r\n      this.state.projectDescription, this.state.projectCategory, this.state.weekly, this.state.capacity, \r\n      this.state.bDaysPreSchedule, this.state.bDaysFinale, this.state.bDaysSaturdays, this.state.preferredBDays, \r\n      this.state.roomPreference, this.state.preferredRoom); \r\n    let newProjectType = new ProjectTypeBO(this.state.projectTypeName, this.state.ects, this.state.sws);\r\n    ProjectAPI.getAPI().addProject(newProject, newProjectType).then(project => {\r\n      // Backend call sucessfull\r\n      // reinit the dialogs state for a new empty project\r\n      this.setState(this.baseState);\r\n      this.props.onClose(project); // call the parent with the customer object from backend\r\n    }).catch(e =>\r\n      this.setState({\r\n        addingInProgress: false,    // disable loading indicator \r\n        addingError: e              // show error message\r\n      })\r\n    );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n        addingInProgress: true,       // show loading indicator\r\n        addingError: null             // disable error message\r\n    });\r\n  }\r\n\r\n// Update gegebenenfalls ergänzen um Projekte zu ändern\r\n\r\n  /** Handles value changes of the forms textfields and validates them */\r\n  textFieldValueChange = (event) => {\r\n    const value = event.target.value;\r\n\r\n    let error = false;\r\n    if (value.trim().length === 0) {\r\n      error = true;\r\n    }\r\n\r\n    this.setState({\r\n      [event.target.id]: event.target.value,\r\n      [event.target.id + 'ValidationFailed']: error,\r\n      [event.target.id + 'Edited']: true\r\n    });\r\n  } \r\n\r\n  /** Handles the close / cancel button click event*/\r\n  handleClose = () => {\r\n    // Reset the state\r\n    this.setState(this.baseState);\r\n    this.props.onClose(null);\r\n  }\r\n\r\n\r\n\r\n  /*handleSubmit(event) {\r\n    event.preventDefault();\r\n  }*/\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n        value: event.target.value\r\n    });}\r\n\r\n  handleChange2 = (event) => {\r\n    this.setState({\r\n        value2: event.target.value\r\n    });}\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, show } = this.props;\r\n    const { projectName, projectNameValidationFailed } = this.state;\r\n    const { additionalSupervisor, additionalSupervisorValidationFailed } = this.state;\r\n    const { externalPartners, externalPartnersValidationFailed } = this.state;\r\n    const { projectDescription, projectDescriptionValidationFailed } = this.state;\r\n    const { projectCategory, value, value2 } = this.state;\r\n    const { weekly, weeklyValidationFailed } = this.state;\r\n    const { capacity, capacityValidationFailed } = this.state;\r\n    const { bDaysPreSchedule, bDaysPreScheduleValidationFailed } = this.state;\r\n    const { bDaysFinale, bDaysFinaleValidationFailed } = this.state;\r\n    const { bDaysSaturdays, bDaysSaturdaysValidationFailed } = this.state;\r\n    const { preferredBDays, preferredBDaysValidationFailed } = this.state;\r\n    const { roomPreference, roomPreferenceValidationFailed } = this.state;\r\n    const { preferredRoom, preferredRoomValidationFailed } = this.state;\r\n    const { projectTypeName, projectTypeNameValidationFailed } = this.state;\r\n    const { ects } = this.state;\r\n    const { sws } = this.state;\r\n    //const {  } = this.state;\r\n    const { addingInProgress, addingError } = this.state;\r\n\r\n    let title = 'Neues Projekt erstellen';\r\n    let header = 'Füllen Sie das Formuler aus';\r\n\r\n    return (\r\n      show ?\r\n        <Dialog open={show} onClose={this.handleClose} maxWidth='xs'>\r\n          <DialogTitle id='form-dialog-title'>{title}\r\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              {header}\r\n            </DialogContentText>\r\n            <form className={classes.root} noValidate autoComplete='off'>\r\n            <TextField autoFocus type='text' required fullWidth margin='normal' id='projectName' label='Projekttitel:' value={projectName} \r\n                onChange={this.textFieldValueChange} error={projectNameValidationFailed} \r\n                helperText={projectNameValidationFailed ? 'Der Projekttitel muss mindestens ein Zeichen besitzen' : ' '} />\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='additionalSupervisor' label='Betreuende(r) ProfessorInnen:' value={additionalSupervisor} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='externalPartners' label='Externe Partner:' value={externalPartners} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='projectDescription' label='Projektbeschreibung (Inhalt):' value={projectDescription} \r\n                onChange={this.textFieldValueChange} error={projectDescriptionValidationFailed} \r\n                helperText={projectDescriptionValidationFailed ? 'Die Projektbeschreibung muss mindestens ein Zeichen besitzen' : ' '} />\r\n\r\n            {/*<TextField autoFocus type='text' required fullWidth margin='normal' id='projectCategory' label='Kategorie des Projektes:' value={projectCategory} \r\n                onChange={this.textFieldValueChange} error={projectCategoryValidationFailed} \r\n    helperText={projectCategoryValidationFailed ? 'Die Projektkategorie muss mindestens ein Zeichen besitzen' : ' '} />*/}\r\n            <Typography>Projektkategorie</Typography>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                <Select\r\n                  value={value}\r\n                  onChange={this.handleChange}\r\n                >\r\n                  <MenuItem value={'Management 338005-338009'}>Management 338005-338009</MenuItem>\r\n                  <MenuItem value={'IT 338010-338014'}>IT 338010-338014</MenuItem>\r\n                  <MenuItem value={'Medienproduktion 338015-338019'}>Medienproduktion 338015-338019</MenuItem>\r\n                  <MenuItem value={'Medien/Kultur 338020-338024'}>Medien/Kultur 338020-338024</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <p>Ausgewählte Projektkategorie: {value} </p>\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='capacity' label='Kapazität:' value={capacity} \r\n                onChange={this.textFieldValueChange} error={capacityValidationFailed} \r\n                helperText={capacityValidationFailed ? 'Die Kapazität muss mindestens ein Zeichen besitzen' : ' '} />\r\n            \r\n            \r\n            {// Checkbox für Fachspezifisch / Inter-/ Transdisziplinär\r\n            //ECTS und SWS werden automatisch angegeben je nach Auswahl\r\n            }\r\n            <TextField type='text' required fullWidth margin='normal' id='projectTypeName' label='Projektart:' value={projectTypeName} \r\n                onChange={this.textFieldValueChange} error={projectTypeNameValidationFailed} \r\n                helperText={projectTypeNameValidationFailed ? 'Es muss eine Projektart angegeben werden' : ' '} />\r\n            \r\n            <Typography>Projektart</Typography>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                <Select\r\n                  value={value2}\r\n                  onChange={this.handleChange2}\r\n                >\r\n                  <MenuItem value={'Fachspezifisches Projekt'}>Fachspezifisches Projekt</MenuItem>\r\n                  <MenuItem value={'Interdisziplinäres Projekt'}>Interdisziplinäres Projekt</MenuItem>\r\n                  <MenuItem value={'Transdisziplinäres Projekt'}>Transdisziplinäres Projekt</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <p>Ausgewählte Projektart: {value2} </p>\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='ects' label='ECTS:' value={ects} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='sws' label='SWS:' value={sws} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n            <Typography>Raum- und Ressourcenplanung</Typography>\r\n\r\n            {// Wöchentlich bool muss Ja Nein Knöpfe / Ausgabe haben\r\n            }\r\n            <TextField type='text' required fullWidth margin='normal' id='weekly' label='Wöchentlich?' value={weekly} \r\n                onChange={this.textFieldValueChange} error={weeklyValidationFailed} \r\n                helperText={weeklyValidationFailed ? 'Es muss eine Checkbox gewählt werden' : ' '} />\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='bDaysPreSchedule' label='Blocktage vor Beginn der Vorlesungszeit:' value={bDaysPreSchedule} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='bDaysFinale' label='Blocktage in der Prüfungszeit (nur inter-/trans. Projekte!!!):' value={bDaysFinale} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='bDaysSaturdays' label='Blocktage (Samstage) in der Vorlesungszeit:' value={bDaysSaturdays} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='preferredBDays' label='Präferierte Tage:' value={preferredBDays} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n            {// roomPreference bool muss Ja Nein Knöpfe / Ausgabe haben\r\n            }\r\n            <TextField type='text' required fullWidth margin='normal' id='roomPreference' label='Besonderer Raum notwendig? y/n' value={roomPreference} \r\n                onChange={this.textFieldValueChange} error={roomPreferenceValidationFailed} \r\n                helperText={roomPreferenceValidationFailed ? 'Es muss eine Checkbox gewählt werden' : ' '} />\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='preferredRoom' label='Besonderer Raum notwendig:' value={preferredRoom} \r\n                onChange={this.textFieldValueChange} />\r\n            </form>\r\n\r\n            <LoadingProgress show={addingInProgress} />\r\n            <ContextErrorMessage error={addingError} contextErrorMsg={`Das Projekt konnte nicht erstellt werden`} onReload={this.addProject} />\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color='secondary'>\r\n              Abbrechen\r\n            </Button>\r\n\r\n            <Button disabled={projectNameValidationFailed | projectDescriptionValidationFailed | capacityValidationFailed | weeklyValidationFailed | roomPreferenceValidationFailed | projectTypeNameValidationFailed } variant='contained' onClick={this.addProject} color='primary'>\r\n              Einsenden\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        : null\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 300,\r\n  },\r\n});\r\n\r\n/** PropTypes */\r\nProjectForm.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** The CustomerBO to be edited */\r\n  project: PropTypes.object,\r\n  /** If true, the form is rendered */\r\n  show: PropTypes.bool.isRequired,\r\n  /**  \r\n   * Handler function which is called, when the dialog is closed.\r\n   * Sends the edited or created CustomerBO as parameter or null, if cancel was pressed.\r\n   *  \r\n   * Signature: onClose(CustomerBO customer);\r\n   */\r\n  onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(ProjectForm);\r\n","//Erstellen eines Objektes, nach der erstellung ist kein Update/ Edit möglich\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField } from '@material-ui/core';\r\nimport { Typography} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ProjectAPI  from '../../api/ProjectAPI';\r\nimport ProjectTypeBO  from '../../api/ProjectTypeBO';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\n\r\n\r\nclass ProjectTypeForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init the state\r\n    this.state = {\r\n      //Project spezifische Attribute\r\n      name: '',\r\n      ects: '',\r\n      sws: '',\r\n\r\n      addingInProgress: false,\r\n      addingError: null\r\n     \r\n    };\r\n\r\n    // Beim Schließen des Dialogs soll der Anfangszustand wieder hergestellt werden\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  /** Adds the Project */\r\n  addProjectType = () => {\r\n    let newProjectType = new ProjectTypeBO(this.state.name, this.state.ects, this.state.sws);\r\n    //newProjectType.setName(this.state.name)\r\n    //newProjectType.setEcts(this.state.ects)\r\n    //newProjectType.setSws(this.state.sws)\r\n    ProjectAPI.getAPI().addProjectType(newProjectType).then(projecttype => {\r\n      this.setState(this.baseState);\r\n      this.props.onClose(projecttype); // call the parent with the customer object from backend\r\n    }).catch(e =>\r\n        this.setState({\r\n          addingInProgress: false,    // disable loading indicator \r\n          addingError: e              // show error message\r\n        })\r\n      );\r\n  \r\n      // set loading to true\r\n      this.setState({\r\n          addingInProgress: true,       // show loading indicator\r\n          addingError: null             // disable error message\r\n      });\r\n    }\r\n\r\n\r\n// Update gegebenenfalls ergänzen um Projekte zu ändern\r\n\r\n  /** Handles value changes of the forms textfields and validates them */\r\n  textFieldValueChange = (event) => {\r\n    const value = event.target.value;\r\n\r\n    let error = false;\r\n    if (value.trim().length === 0) {\r\n      error = true;\r\n    }\r\n\r\n    this.setState({\r\n      [event.target.id]: event.target.value,\r\n      [event.target.id + 'ValidationFailed']: error,\r\n      [event.target.id + 'Edited']: true\r\n    });\r\n  } \r\n\r\n  /** Handles the close / cancel button click event*/\r\n  handleClose = () => {\r\n    // Reset the state\r\n    this.setState(this.baseState);\r\n    this.props.onClose(null);\r\n  }\r\n\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, show } = this.props;\r\n    const { name } = this.state;\r\n    const { ects } = this.state;\r\n    const { sws } = this.state;\r\n    const { addingInProgress, addingError } = this.state;\r\n\r\n    console.log(this.state);\r\n\r\n    let title = 'Neues Projekt erstellen';\r\n    let header = 'Füllen Sie das Formuler aus';\r\n\r\n    return (\r\n      show ?\r\n        <Dialog open={show} onClose={this.handleClose} maxWidth='xs'>\r\n          <DialogTitle id='form-dialog-title'>{title}\r\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              {header}\r\n            </DialogContentText>\r\n            <form className={classes.root} noValidate autoComplete='off'>\r\n            <TextField autoFocus type='text' required fullWidth margin='normal' id='name' label='Neuer Projekttyp:' value={name} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='ects' label='ECTS:' value={ects} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='sws' label='SWS:' value={sws} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n            <Typography>Raum- und Ressourcenplanung</Typography>\r\n\r\n            </form>\r\n\r\n            <LoadingProgress show={addingInProgress} />\r\n            <ContextErrorMessage error={addingError} contextErrorMsg={`Das Projekt konnte nicht erstellt werden`} onReload={this.addProjectType} />\r\n\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color='secondary'>\r\n              Abbrechen\r\n            </Button>\r\n\r\n            <Button variant='contained' onClick={this.addProjectType} color='primary'>\r\n              Einsenden\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        : null\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 300,\r\n  },\r\n});\r\n\r\n/** PropTypes */\r\nProjectTypeForm.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  project: PropTypes.object,\r\n  show: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(ProjectTypeForm);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, List, ListItem, Button } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ProjectAPI  from '../api/ProjectAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport LecturerProjectListEntry from './LecturerProjectListEntry';\r\nimport ProjectForm from './dialogs/ProjectForm';\r\nimport ProjectTypeForm from './dialogs/ProjectTypeForm';\r\n\r\n/**  \r\n * Hier wird die Liste aus Dozentensicht angezeigt. Dozenten sehen die eigenen Projekte (Neue und genehmigte)\r\n * und können weitere Projekte erstellen.\r\n */\r\n\r\nclass LecturerProjectList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // console.log(props);\r\n    let expandedID = null;\r\n\r\n    if (this.props.location.expandCustomer) {\r\n      expandedID = this.props.location.expandCustomer.getID();\r\n    }\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n        projects: [],\r\n        error: null,\r\n        loadingInProgress: false,\r\n        expandedProjectID: expandedID,\r\n    };\r\n  }\r\n\r\n  onExpandedStateChange = project => {\r\n    let newID = null;\r\n\r\n    if (project.getID() !== this.state.expandedProjectID) {\r\n      newID = project.getID();\r\n    }\r\n\r\n    this.setState({\r\n      expandedProjectID: newID,\r\n    });\r\n  }\r\n\r\n  getProjects = () => {\r\n    ProjectAPI.getAPI().getProjects()\r\n      .then(projectBOs =>\r\n        this.setState({               \r\n          projects: projectBOs,\r\n          loadingInProgress: false,   \r\n          error: null\r\n        })).catch(e =>\r\n          this.setState({           \r\n            projects: [],\r\n            loadingInProgress: false, \r\n            error: e\r\n          })\r\n        );\r\n      \r\n\r\n    // set loading to true\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      error: null\r\n    });\r\n  }\r\n    \r\n  \r\n\r\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\r\n  componentDidMount() {\r\n    this.getProjects();\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n  /** Handles the onClick event of the add project button */\r\n  addProjectButtonClicked = event => {\r\n    // Do not toggle the expanded state\r\n    event.stopPropagation();\r\n    //Show the ProjectForm\r\n    this.setState({\r\n      showProjectForm: true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the ProjectForm */\r\n  projectFormClosed = project => {\r\n    // project is not null and therefore created\r\n    if (project) {\r\n      const newProjectList = [...this.state.projects, project];\r\n      this.setState({\r\n        projects: newProjectList,\r\n        showProjectForm: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showProjectForm: false\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /** Handles the onClick event of the add project button */\r\n  addProjectTypeButtonClicked = event => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showProjectTypeForm: true\r\n    });\r\n  }\r\n\r\n\r\n  projectTypeFormClosed = project => {\r\n    // project is not null and therefore created\r\n      this.setState({\r\n        showProjectTypeForm: false\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { projects, expandedProjectID, loadingInProgress, error, showProjectForm, showProjectTypeForm } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <List className={classes.projectList}>\r\n        <Button variant='contained' color='primary' startIcon={<AddIcon />} onClick={this.addProjectButtonClicked}>\r\n              Projekt erstellen\r\n          </Button>\r\n\r\n\r\n        <Button variant='contained' color='primary' startIcon={<AddIcon />} onClick={this.addProjectTypeButtonClicked}>\r\n            Typ erstellen\r\n        </Button>\r\n\r\n        { \r\n          // Show the list of ProjectListEntry components\r\n          // Do not use strict comparison, since expandedProjectID maybe a string if given from the URL parameters\r\n          projects.map(project => <LecturerProjectListEntry key={project.getID()} project={project}\r\n          show={this.props.show}  onExpandedStateChange={this.onExpandedStateChange}/>)\r\n        }\r\n\r\n          <ListItem>\r\n            <LoadingProgress show={loadingInProgress} />\r\n            <ContextErrorMessage error={error} contextErrorMsg={`The list of projects could not be loaded.`} onReload={this.getProjects} />\r\n            <ProjectForm show={showProjectForm} onClose={this.projectFormClosed} />\r\n            <ProjectTypeForm show={showProjectTypeForm} onClose={this.projectTypeFormClosed} />\r\n          </ListItem>\r\n\r\n        </List>\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '90%',\r\n    marginTop: theme.spacing(3),\r\n    //marginRight: theme.spacing(10),\r\n    marginLeft: theme.spacing(10),\r\n  },\r\n\r\n});\r\n\r\n/** PropTypes */\r\nLecturerProjectList.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n\r\n  show: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(LecturerProjectList));","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\r\nimport { Button, List, ListItem } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n//import CustomerForm from './dialogs/CustomerForm';\r\n//import ApproveValidationForm from './dialogs/ApproveValidationForm';\r\n//import RejectValidationForm from './dialogs/RejectValidationForm';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { ButtonGroup } from '@material-ui/core';\r\nimport ProjectDeleteDialog from './dialogs/ProjectDeleteDialog';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport red from '@material-ui/core/colors/red';\r\nimport ProjectAPI from '../api/ProjectAPI';\r\n\r\n/** Fehlende Inhalte:\r\n *  \r\n * - Aus ProjectTypeBO: Name (Fachspezifisch, Inter-, Transdisziplinär), ECTS und SWS\r\n * - Aus ModuleBO: EDV-Nummer\r\n * \r\n */\r\n\r\n//Condition für alle ergänzen\r\n//Admin Funktionen ergänzen\r\n\r\n\r\nclass AdminProjectListEntry extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      // Init the state\r\n      this.state = {\r\n        project: props.project,\r\n        showProjectDeleteDialog: false,\r\n        state: null,\r\n        //showApproveValidationForm: false,\r\n        //showRejectValidationForm: false,\r\n        \r\n        //Admin Attribute für Funktionen\r\n      };\r\n    }\r\n\r\n  /** Handles onChange events of the underlying ExpansionPanel */\r\n  expansionPanelStateChanged = () => {\r\n    this.props.onExpandedStateChange(this.props.project);\r\n  }\r\n\r\n \r\n// Projekt genehmigen\r\n  /** Handles the onClick event of the delete customer button \r\n  ApproveProjectClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showApproveValidationForm : true\r\n    });\r\n  } */\r\n\r\n  /** Handles the onClose event of the CustomerDeleteDialog \r\n  ApproveValidationFormClosed = (project) => {\r\n    // if customer is not null, delete it\r\n    if (project) {\r\n      this.props.onApproveProject(project);\r\n    };\r\n\r\n    // Don´t show the dialog\r\n    this.setState({\r\n      showApproveValidationForm: false\r\n    });\r\n  } */\r\n\r\n\r\n// Projekt ablehnen  \r\n  /** Handles the onClick event of the delete customer button \r\n  RejectProjectClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showRejectValidationForm : true\r\n    });\r\n} */\r\n\r\n  /** Handles the onClose event of the CustomerDeleteDialog \r\n  RejectValidationFormClosed = (project) => {\r\n    // if customer is not null, delete it\r\n    if (project) {\r\n      this.props.onRejectProject(project);\r\n    };\r\n\r\n    // Don´t show the dialog\r\n    this.setState({\r\n      showRejectValidationForm: false\r\n    });\r\n  } */\r\n\r\n  /** Handles the onClick event of the delete project button */\r\n  deleteProjectButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showProjectDeleteDialog: true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the ProjectDeleteDialog */\r\n  deleteProjectDialogClosed = (project) => {\r\n    // if project is not null, delete it\r\n    if (project) {\r\n      this.props.onProjectDeleted(project);\r\n    };\r\n\r\n    // Don´t show the dialog\r\n    this.setState({\r\n      showProjectDeleteDialog: false\r\n    });\r\n  }\r\n\r\n\r\n  getStatebyID = () => {\r\n    ProjectAPI.getAPI().getStatebyId(this.state.project.getStateID())   //Hier die ID des Studentens aufrufen --> this.state.studentId.getId()....vom StudentBO\r\n    //ProjectAPI.getAPI().getStudentById()\r\n        .then (projectBO => {\r\n            this.setState({ state: projectBO });\r\n        })\r\n  }\r\n\r\n  \r\n  componentDidMount() {\r\n    this.getStatebyID();\r\n  }\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    // Use the states project\r\n    const { project, state, showProjectDeleteDialog } = this.state;\r\n\r\n    // console.log(this.state);\r\n    return (\r\n      <div>\r\n      { state ?\r\n\r\n      <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={`project${project.getID()}projectpanel-header`} //** Wozu wird hier die Project ID benötigt*/\r\n          >\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='body1' className={classes.heading}>{project.getName()} {/** Angabe des Dozenten (UserBO?)*/}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <ButtonGroup size='small'>\r\n                <Button className={classes.root} startIcon={<DeleteIcon />}\r\n                onClick = {this.deleteProjectButtonClicked}>\r\n                  Löschen\r\n                </Button>\r\n                </ButtonGroup>\r\n              </Grid>\r\n              <Grid item xs />\r\n              <Grid item>\r\n                <Typography variant='body2' color={'textSecondary'}>{state.getName()}</Typography> {/**Ergänzend steht hier die aktuelle Condition des Projektes */}\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <List>\r\n            <ListItem>Kapazität: {project.getCapacity()} </ListItem>\r\n            <ListItem>Projektbeschreibung: {project.getProjectDescription()} </ListItem>\r\n            <ListItem>Betreuuende Dozenten: {project.getAdditionalLecturer()} </ListItem>  \r\n            <ListItem>Externe Partner: {project.getPartners()} </ListItem>\r\n            <ListItem>Wöchentlicher Kurs: {project.getWeekly()} </ListItem>\r\n            <ListItem>Anzahl der Blocktage vor der Vorlesungszeit: {project.getBDaysPreSchedule()} </ListItem>\r\n            <ListItem>Anzahl der Blocktage in der Prüfungszeit: {project.getBDaysFinale()} </ListItem>            \r\n            <ListItem>Anzahl der Blocktage in der Vorlesungszeit (Samstage): {project.getBDaysSaturdays()} </ListItem>\r\n            <ListItem>Raum: {project.getPreferredRoom()} </ListItem> \r\n            <ListItem>\r\n                <Button  color='success' startIcon={<AddIcon />}>\r\n                  Genehmigen\r\n                </Button>\r\n                <Button  color='error' startIcon={<AddIcon />}>\r\n                  Ablehnen\r\n                </Button>\r\n            </ListItem>  \r\n          </List>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n        : null }\r\n        <ProjectDeleteDialog show={showProjectDeleteDialog} project={project} onClose={this.deleteProjectDialogClosed} />\r\n        {/**<ApproveValidationForm show={showApproveValidationForm} project={project} onClose={this.ApproveValidationFormClosed} />\r\n        <RejectValidationForm show={showRejectValidationForm} project={project} onClose={this.RejectValidationFormClosed} /> \r\n        <StudentProjectSignOut show={showRejectProject} project={project} onClose={this.StudentProjectSignOutClosed} /> \r\n        <CustomerDeleteDialog show={showCustomerDeleteDialog} customer={customer} onClose={this.deleteCustomerDialogClosed} />   Admin Funktionen*/}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      color: red[500],\r\n      borderColor: red[500],\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\nAdminProjectListEntry.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    state: PropTypes.object.isRequired,\r\n    expandedState: PropTypes.bool.isRequired,\r\n    onExpandedStateChange: PropTypes.func.isRequired,\r\n    onProjectDeleted: PropTypes.func.isRequired\r\n    }\r\n  \r\nexport default withStyles(styles)(AdminProjectListEntry);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, List, ListItem, Button } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ProjectAPI  from '../api/ProjectAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport AdminProjectListEntry from './AdminProjectListEntry';\r\nimport ValidationForm from './dialogs/ValidationForm';\r\nimport ProjectDeleteDialog from './dialogs/ProjectDeleteDialog';\r\nimport ProjectForm from './dialogs/ProjectForm';\r\n\r\n/**  \r\n * Hier wird die Liste aus Studentensicht angezeigt. Studenten sehen alle genehmigten Projekte\r\n * und können sich dafür An- und Abmelden.\r\n */\r\n\r\nclass AdminProjectList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // console.log(props);\r\n    let expandedID = null;\r\n\r\n    if (this.props.location.expandProject) {\r\n      expandedID = this.props.location.expandProject.getID();\r\n    }\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n        projects: [],\r\n        error: null,\r\n        loadingInProgress: false,\r\n        expandedProjectID: expandedID,\r\n    };\r\n  }\r\n\r\n  onExpandedStateChange = project => {\r\n    // console.log(projectID);\r\n    // Set expandend project entry to null by default\r\n    let newID = null;\r\n\r\n    // If same project entry is clicked, collapse it else expand a new one\r\n    if (project.getID() !== this.state.expandedProjectID) {\r\n      newID = project.getID();\r\n    }\r\n    // console.log(newID);\r\n    this.setState({\r\n      expandedProjectID: newID,\r\n    });\r\n  }\r\n\r\n  getProjects = () => {\r\n    ProjectAPI.getAPI().getProjects()\r\n      .then(projectBOs =>\r\n        this.setState({               // Set new state when ProjectBOs have been fetched\r\n          projects: projectBOs,\r\n          loadingInProgress: false,   // disable loading indicator \r\n          error: null\r\n        })).catch(e =>\r\n          this.setState({             // Reset state with error from catch \r\n            projects: [],\r\n            loadingInProgress: false, // disable loading indicator \r\n            error: e\r\n          })\r\n        );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      error: null\r\n    });\r\n  }\r\n\r\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\r\n  componentDidMount() {\r\n    this.getProjects();\r\n  }\r\n\r\n   /** \r\n   \r\n   */\r\n  projectDeleted = project => {\r\n    const newProjectList = this.state.projects.filter(projectFromState => projectFromState.getID() !== project.getID());\r\n    this.setState({\r\n      projects: newProjectList,\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { projects, expandedProjectID, loadingInProgress, error } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <List className={classes.projectList}>\r\n        { \r\n          // Show the list of ProjectListEntry components\r\n          // Do not use strict comparison, since expandedProjectID maybe a string if given from the URL parameters\r\n          projects.map(project => <AdminProjectListEntry key={project.getID()} project={project} \r\n          show={this.props.show}  \r\n          onExpandedStateChange={this.onExpandedStateChange}\r\n          onProjectDeleted={this.projectDeleted}/>)\r\n        }\r\n\r\n          <ListItem>\r\n            <LoadingProgress show={loadingInProgress} />\r\n            <ContextErrorMessage error={error} contextErrorMsg={`The list of projects could not be loaded.`} onReload={this.getProjects} />\r\n          </ListItem>\r\n\r\n        </List>\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '90%',\r\n    marginTop: theme.spacing(3),\r\n    //marginRight: theme.spacing(10),\r\n    marginLeft: theme.spacing(10),\r\n  },\r\n\r\n});\r\n\r\n/** PropTypes */\r\nAdminProjectList.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n\r\n  show: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(AdminProjectList));","//Das Dialog Fenster um einzelne Studenten aus der Teilnehmerliste zu entfernen\r\n\r\n//Entfernen eines Projektes\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ProjectAPI  from '../../api/ProjectAPI';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\n\r\n\r\nclass ParticipantDeleteDialog extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init the state\r\n    this.state = {\r\n      deletingInProgress: false,\r\n      deletingError: null,\r\n    };\r\n  }\r\n\r\n  /** Delete the Participant */\r\n  deleteParticipation = () => {\r\n    ProjectAPI.getAPI().deleteParticipation(this.props.participation.getID()).then(participation => {\r\n      this.setState({\r\n        deletingInProgress: false,              // disable loading indicator  \r\n        deletingError: null                     // no error message\r\n      });\r\n      this.props.onClose(this.props.participation);  // call the parent with the deleted customer\r\n    }).catch(e =>\r\n      this.setState({\r\n        deletingInProgress: false,              // disable loading indicator \r\n        deletingError: e                        // show error message\r\n      })\r\n    );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      deletingInProgress: true,                 // show loading indicator\r\n      deletingError: null                       // disable error message\r\n    });\r\n  }\r\n\r\n  /** Handles the close / cancel button click event */\r\n  handleClose = () => {\r\n    // console.log(event);\r\n    this.props.onClose(null);\r\n  }\r\n\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, show, participation } = this.props;\r\n    const { deletingInProgress, deletingError } = this.state;\r\n\r\n    return (\r\n      <div>\r\n      { show ?\r\n        <Dialog open={show} onClose={this.handleClose}>\r\n          <DialogTitle id='delete-dialog-title'>Teilnehmer entfernen\r\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Sind Sie sicher, dass Sie den Teilnehmer (ID: {participation.getStudentID()}) löschen möchten?\r\n            </DialogContentText>\r\n            <LoadingProgress show={deletingInProgress} />\r\n            <ContextErrorMessage error={deletingError} contextErrorMsg={`The participant (ID: ${participation.getStudentID()}) could not be deleted.`}\r\n              onReload={this.getParticipant} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color='secondary'>\r\n              Abbrechen\r\n            </Button>\r\n            <Button variant='contained' onClick={this.deleteParticipation} color='primary'>\r\n              Entfernen\r\n            </Button> \r\n          </DialogActions>\r\n        </Dialog>\r\n      : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nParticipantDeleteDialog.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  participation: PropTypes.object.isRequired,\r\n  show: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(ParticipantDeleteDialog);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Grid } from '@material-ui/core';\r\nimport { List, ListItem, Paper } from '@material-ui/core';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport  ProjectAPI  from '../api/ProjectAPI';\r\n\r\n/** Fehlende Inhalte:\r\n *  \r\n * - Aus ProjectTypeBO: Name (Fachspezifisch, Inter-, Transdisziplinär), ECTS und SWS\r\n * - Aus ModuleBO: EDV-Nummer\r\n * - Aus SemesterBO: Semester\r\n * - Aus ParticipationBO: Modul Name, Note\r\n * \r\n */\r\n\r\n\r\nclass StudentReportListEntry extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      // Init the state\r\n      this.state = {\r\n        participation: props.participation,\r\n        project: null,\r\n        module: null,\r\n        validation: null,\r\n      };\r\n    }\r\n\r\n    \r\n    getProjectbyID = () => {\r\n      ProjectAPI.getAPI().getProjectbyId(this.state.participation.getProjectID())\r\n          .then (participationBOs => {\r\n              this.setState({ project: participationBOs });\r\n          })\r\n        }\r\n\r\n\r\n    getModulebyID = () => {\r\n      ProjectAPI.getAPI().getModulebyId(this.state.participation.getModuleID())\r\n          .then (participationBOs => {\r\n              this.setState({ module: participationBOs });\r\n          })\r\n        }\r\n\r\n\r\n    getValidationbyID = () => {\r\n      ProjectAPI.getAPI().getValidationbyId(this.state.participation.getValidationID())\r\n          .then (participationBOs => {\r\n              this.setState({ validation: participationBOs });\r\n          })\r\n        }\r\n\r\n\r\n    componentDidMount() {\r\n      this.getProjectbyID();\r\n      this.getModulebyID();\r\n      this.getValidationbyID();\r\n    }\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    const { participation, project, module, validation } = this.state;\r\n    //const { project, module, validation } = this.state;\r\n\r\n    console.log(this.state);\r\n\r\n    return (\r\n      <div>\r\n\r\n      { project && module && validation ? \r\n\r\n      <Grid>\r\n          <Paper elevation={3} >\r\n            <List>\r\n                <ListItem className = {classes.font}>{project.getName()}</ListItem>\r\n                <ListItem>Projektbeschreibung: {project.getProjectDescription()}</ListItem> \r\n                <ListItem>Modul: {module.getEDV_number()} {module.getName()}</ListItem> \r\n\r\n                { participation.getValidationID() !== 1 && participation.getValidationID() !== 14 && participation.getValidationID() !== 15 ? <ListItem>Note: {validation.getGrade()}</ListItem> : null }\r\n              \r\n\r\n                { participation.getValidationID() === 1 ?\r\n                <ListItem>Status: angemeldet </ListItem> :\r\n                \r\n                participation.getValidationID() > 1 && participation.getValidationID() <= 11  ?\r\n                  <ListItem>Status: bestanden </ListItem> :\r\n\r\n                participation.getValidationID() >= 12 && participation.getValidationID() <= 13 ?\r\n                  <ListItem>Status: nicht bestanden </ListItem> : \r\n\r\n                participation.getValidationID() === 14 ?\r\n                <ListItem>Status: bestanden </ListItem> :\r\n\r\n                participation.getValidationID() === 15 ?\r\n                <ListItem>Status: nicht bestanden </ListItem> \r\n                  \r\n              : null }\r\n\r\n            </List>\r\n          </Paper>\r\n        </Grid>\r\n\r\n      : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    font: {\r\n        fontSize: 23,\r\n        fontFamily: '\"Segoe UI\"',\r\n        color: indigo[700],\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\nStudentReportListEntry.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    participation: PropTypes.object.isRequired,\r\n    expandedState: PropTypes.bool.isRequired,\r\n    onExpandedStateChange: PropTypes.func.isRequired\r\n    }\r\n  \r\nexport default withStyles(styles)(StudentReportListEntry);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, List, ListItem, Button, Typography, Grid, Paper, ButtonGroup } from '@material-ui/core';\r\n//import AddIcon from '@material-ui/icons/Add';\r\nimport { withRouter } from 'react-router-dom';\r\nimport  ProjectAPI  from '../api/ProjectAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport ParticipantDeleteDialog from './dialogs/ParticipantDeleteDialog';\r\nimport StudentReportListEntry from './StudentReportListEntry';\r\nimport StudentBO from '../api/StudentBO';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\n\r\n/**  \r\n * Hier wird die Liste aus Studentensicht angezeigt. Studenten sehen alle genehmigten Projekte\r\n * und können sich dafür An- und Abmelden.\r\n */\r\n\r\nclass ParticipantList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n        participation: props.participation,\r\n        student: null,\r\n        showParticipationDeleteDialog: false,\r\n        error: null,\r\n        loadingInProgress: false,\r\n    };\r\n  }\r\n\r\n\r\n  getParticipant = () => {\r\n    ProjectAPI.getAPI().getStudentbyId(this.state.participation.getStudentID())\r\n        .then (StudentBO => {\r\n            this.setState({ student: StudentBO });\r\n        })\r\n      }\r\n\r\n\r\n  componentDidMount() {\r\n    this.getParticipant();\r\n  }\r\n\r\n  /** Handles the onClick event of the delete project button */\r\n  deleteParticipationButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showParticipationDeleteDialog: true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the ProjectDeleteDialog */\r\n  deleteParticipationDialogClosed = (participation) => {\r\n    // if project is not null, delete it\r\n    if (participation) {\r\n      this.props.onParticipationDeleted(participation);\r\n    };\r\n\r\n    // Don´t show the dialog\r\n    this.setState({\r\n      showParticipationDeleteDialog: false\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { loadingInProgress, student, participation, error, showParticipationDeleteDialog } = this.state;\r\n    console.log(this.state);\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        { student && participation ?\r\n        \r\n        <Grid className = {classes.root} container spacing={1} justify='flex-start' alignItems='center'>\r\n          \r\n\r\n            <Grid item>\r\n                <Typography className = {classes.font} >{student.getFirstName()} {student.getName()} \r\n                </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <ButtonGroup variant='text' size='small'>\r\n                <Button size='small' className={classes.validate} >\r\n                  Bewerten\r\n                </Button>\r\n                <Button size='small' className={classes.delete} onClick = {this.deleteParticipationButtonClicked}>\r\n                  Entfernen\r\n                </Button>\r\n              </ButtonGroup>\r\n              <LoadingProgress show={loadingInProgress} />\r\n            <ContextErrorMessage error={error} contextErrorMsg={`The list of participations could not be loaded.`} onReload={this.getParticipant} />\r\n            </Grid>\r\n\r\n        </Grid>\r\n\r\n\r\n\r\n\r\n        : null}\r\n      <ParticipantDeleteDialog show={showParticipationDeleteDialog} participation={participation} onClose={this.deleteParticipationDialogClosed} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    //width: '90%',\r\n    marginTop: theme.spacing(3),\r\n    //marginRight: theme.spacing(10),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  font: {\r\n    fontSize: 15,\r\n  },\r\n  validate: {\r\n    width: '100%',\r\n    color: indigo[300],\r\n    fontSize: 10,\r\n  },\r\n  delete: {\r\n    width: '100%',\r\n    color: red[500],\r\n    fontSize: 10,\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nParticipantList.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n\r\n  show: PropTypes.bool.isRequired,\r\n\r\n  student: PropTypes.object.isRequired,\r\n  onParticipationDeleted: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(ParticipantList));","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\r\nimport { Button, List, ListItem, Box } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n//import CustomerForm from './dialogs/CustomerForm';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ProjectAPI  from '../api/ProjectAPI';\r\nimport ParticipantList from './ParticipantList';\r\nimport ParticipantDeleteDialog from './dialogs/ParticipantDeleteDialog';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\n\r\n/** Fehlende Inhalte:\r\n * \r\n */\r\n\r\n//Condition für alle ergänzen\r\n//Admin Funktionen ergänzen\r\n\r\nclass ProjectListEntryParticipants extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      // Init the state\r\n      this.state = {\r\n        project: props.project,\r\n        participations: [],\r\n      };\r\n    }\r\n\r\n  /** Handles onChange events of the underlying ExpansionPanel */\r\n  expansionPanelStateChanged = () => {\r\n    this.props.onExpandedStateChange(this.props.project);\r\n  }\r\n\r\n\r\n  getParticipations = () => {\r\n    ProjectAPI.getAPI().getParticipationForProject(this.state.project.getID())\r\n        .then (participationBOs => {\r\n            this.setState({ participations: participationBOs });\r\n        })\r\n      }\r\n  \r\n  componentDidMount() {\r\n    this.getParticipations();\r\n  }\r\n\r\n\r\n  participationDeleted = participant => {\r\n    const newParticipationList = this.state.participations.filter(participationFromState => participationFromState.getID() !== participant.getID());\r\n    this.setState({\r\n      participations: newParticipationList,\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    // Use the states customer\r\n    const { project, participations } = this.state;\r\n\r\n    console.log(this.state);\r\n    return (\r\n\r\n      <div>\r\n      { participations ?\r\n      <Grid>\r\n      <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={`project${project.getID()}projectpanel-header`} //** Wozu wird hier die Project ID benötigt*/\r\n          >\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='body1' className={classes.font}>{project.getName()} {/** Angabe des Dozenten (UserBO?)*/}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n              <List>\r\n              \r\n              <ListItem className={classes.heading}>Teilnehmer</ListItem>\r\n              { \r\n                participations.map(participation => <ParticipantList key={participation.getID()} participation={participation} \r\n                show={this.props.show}  \r\n                onExpandedStateChange={this.onExpandedStateChange}\r\n                onParticipationDeleted={this.participationDeleted}/>)\r\n              }\r\n              </List>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n        {/**<CustomerDeleteDialog show={showCustomerDeleteDialog} customer={customer} onClose={this.deleteCustomerDialogClosed} />   Admin Funktionen*/} \r\n        </Grid>\r\n      : null }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    font: {\r\n      fontSize: 23,\r\n      fontFamily: '\"Segoe UI\"',\r\n      color: indigo[700],\r\n    },\r\n    heading: {\r\n      fontSize: 17,\r\n      color: indigo[500],\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\nProjectListEntryParticipants.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    expandedState: PropTypes.bool.isRequired,\r\n    onExpandedStateChange: PropTypes.func.isRequired\r\n    }\r\n  \r\nexport default withStyles(styles)(ProjectListEntryParticipants);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, List, ListItem, Button } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withRouter } from 'react-router-dom';\r\nimport  ProjectAPI  from '../api/ProjectAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport ProjectListEntryParticipants from './ProjectListEntryParticipants';\r\n\r\n\r\n/**  \r\n * Hier wird die gesamte Liste angezeigt. Man sieht die eigenen Projekte und deren Teilnehmer.\r\n */\r\n\r\nclass ProjectListParticipants extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // console.log(props);\r\n    let expandedID = null;\r\n\r\n    if (this.props.location.expandProject) {\r\n      expandedID = this.props.location.expandProject.getID();\r\n    }\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n        projects: [],\r\n        error: null,\r\n        loadingInProgress: false,\r\n        expandedProjectID: expandedID,\r\n    };\r\n  }\r\n\r\n  onExpandedStateChange = project => {\r\n    // console.log(projectID);\r\n    // Set expandend project entry to null by default\r\n    let newID = null;\r\n\r\n    // If same project entry is clicked, collapse it else expand a new one\r\n    if (project.getID() !== this.state.expandedProjectID) {\r\n      // Expand the project entry with customerID\r\n      newID = project.getID();\r\n    }\r\n    // console.log(newID);\r\n    this.setState({\r\n      expandedProjectID: newID,\r\n    });\r\n  }\r\n\r\n  getProjects = () => {\r\n    ProjectAPI.getAPI().getProjects()\r\n      .then(projectBOs =>\r\n        this.setState({            \r\n          projects: projectBOs,\r\n          loadingInProgress: false,   \r\n          error: null\r\n        })).catch(e =>\r\n          this.setState({            \r\n            projects: [],\r\n            loadingInProgress: false, \r\n            error: e\r\n          })\r\n        );\r\n\r\n\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      error: null\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getProjects();\r\n  }\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { projects, expandedProjectID, loadingInProgress, error } = this.state;\r\n\r\n    //console.log(this.state)\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <List className={classes.projectList}>\r\n        { \r\n         \r\n          projects.map(project => <ProjectListEntryParticipants key={project.getID()} project={project} \r\n          show={this.props.show}  onExpandedStateChange={this.onExpandedStateChange}/>)\r\n        }\r\n\r\n          <ListItem>\r\n            <LoadingProgress show={loadingInProgress} />\r\n            <ContextErrorMessage error={error} contextErrorMsg={`The list of projects could not be loaded.`} onReload={this.getProjects} />\r\n          </ListItem>\r\n\r\n        </List>\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  customerFilter: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(1),\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nProjectListParticipants.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n\r\n  show: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(ProjectListParticipants));","import React, { Component } from 'react';\r\nimport { Paper, Typography, Tabs, Tab } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport ProfileDropDown from '../dialogs/ProfileDropDown';    // Zeile 30: <ProfileDropDown user={user} />\r\n\r\n\r\nclass Header extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tabindex: 0\r\n    };\r\n  }\r\n\r\n\r\n  handleTabChange = (e, newIndex) => {\r\n    this.setState({\r\n      tabindex: newIndex\r\n    })\r\n  };\r\n\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    return (\r\n      <Paper variant='outlined' >\r\n        <ProfileDropDown user={user} />\r\n        <Typography variant='h3' component='h1' align='center'>\r\n          HdManagement\r\n        </Typography>\r\n        <Typography variant='h4' component='h2' align='center'>\r\n          Home\r\n        </Typography>\r\n        {\r\n          user ?\r\n            <Tabs indicatorColor='primary' textColor='primary' centered value={this.state.tabindex} onChange={this.handleTabChange} >\r\n              <Tab label='' component={RouterLink} to={`/rolechoice`} />\r\n            </Tabs>\r\n            : null\r\n        }\r\n      </Paper>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, List, ListItem, Grid, Typography, Paper } from '@material-ui/core';\r\nimport  ProjectAPI  from '../api/ProjectAPI';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nclass StudentReportIndividualTitle extends Component{\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      var today = new Date(),\r\n      date = today.getDate() + '.' + (today.getMonth() + 1) + '.' + today.getFullYear();\r\n\r\n      this.state = {\r\n          student: null,\r\n          //studentId: this.props.match.params.studentid,\r\n          studentId: this.props.studentId,\r\n          currentDate: date,\r\n          googleUID: firebase.auth().currentUser.uid\r\n\r\n      };\r\n  }\r\n\r\n    \r\n  componentDidMount() {\r\n    this.getStudent();\r\n  }\r\n\r\n  getStudent = () => {\r\n      ProjectAPI.getAPI().getStudentbyId(firebase.auth().currentUser.uid)   //Hier die ID des Studentens aufrufen --> this.state.studentId.getId()....vom StudentBO\r\n      //ProjectAPI.getAPI().getStudentById()\r\n          .then (studentBO => {\r\n              this.setState({ student: studentBO });\r\n          })\r\n\r\n  }\r\n\r\n  \r\n  render() {\r\n    const { classes } = this.props;\r\n    const student = this.state.student;\r\n\r\n    console.log(this.state);\r\n\r\n\r\n    return (\r\n        <div> \r\n        \r\n        { student ?\r\n\r\n        <Grid className = {classes.root}>\r\n          <Paper>\r\n            <List>\r\n            <ListItem>Name: {student.getFirstName()} {student.getName()} </ListItem>\r\n            <ListItem>Matrikelnummer: {student.getMatriculationNumber()} </ListItem>\r\n            <Grid container spacing={1}> \r\n                <Grid item>\r\n                  <ListItem>Studiengangskürzel: {student.getCourse()} </ListItem>  \r\n                </Grid>\r\n                <Grid item xs = {8} />\r\n                <Grid item>\r\n                  <ListItem>Datum: { this.state.currentDate }</ListItem>  \r\n                </Grid>\r\n            </Grid>\r\n            </List>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        : <Typography>Klappt nicht</Typography>}\r\n\r\n        </div>\r\n    );\r\n  }\r\n  \r\n\r\n\r\n/*\r\n    getStudent = () => {\r\n        ProjectAPI.getAPI().getStudent(this.props.student.getID()).then(studentBO => {\r\n          // console.log(accountBO)\r\n          this.setState({  // Set new state when AccountBOs have been fetched\r\n            accounts: [...this.state.accounts, accountBO],\r\n            loadingInProgress: false, // loading indicator \r\n            addingAccountError: null\r\n          })\r\n        }).catch(e =>\r\n          this.setState({ // Reset state with error from catch \r\n            accounts: [],\r\n            loadingInProgress: false,\r\n            addingAccountError: e\r\n          })\r\n        );\r\n    \r\n        // set loading to true\r\n        this.setState({\r\n          loadingInProgress: true,\r\n          addingAccountError: null\r\n        });\r\n      }\r\n*/\r\n\r\n}\r\n\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '90%',\r\n      marginTop: theme.spacing(3),\r\n      marginLeft: theme.spacing(10),\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\n  StudentReportIndividualTitle.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    student: PropTypes.object.isRequired,\r\n    }\r\n  \r\nexport default withStyles(styles)(StudentReportIndividualTitle);\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, List, ListItem, Button } from '@material-ui/core';\r\n//import AddIcon from '@material-ui/icons/Add';\r\nimport { withRouter } from 'react-router-dom';\r\nimport  ProjectAPI  from '../api/ProjectAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport StudentReportListEntry from './StudentReportListEntry';\r\n\r\n\r\n/**  \r\n * Hier wird die Liste aus Studentensicht angezeigt. Studenten sehen alle genehmigten Projekte\r\n * und können sich dafür An- und Abmelden.\r\n */\r\n\r\nclass StudentReportList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n        participations: [],\r\n        error: null,\r\n        loadingInProgress: false,\r\n    };\r\n  }\r\n\r\n\r\n  /*getProjects = () => {\r\n    ProjectAPI.getAPI().getProjects()\r\n      .then(projectBOs =>\r\n        this.setState({              \r\n          projects: projectBOs,\r\n          loadingInProgress: false,   \r\n          error: null\r\n        })).catch(e =>\r\n          this.setState({            \r\n            projects: [],\r\n            loadingInProgress: false, \r\n            error: e\r\n          })\r\n        );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      error: null\r\n    });\r\n\r\n\r\n  componentDidMount() {\r\n    this.getProjects();\r\n  }\r\n  }*/\r\n\r\n    getParticipations = () => {\r\n    ProjectAPI.getAPI().getParticipations()\r\n      .then(participationBOs =>\r\n        this.setState({              \r\n          participations: participationBOs,\r\n          loadingInProgress: false,   \r\n          error: null\r\n        })).catch(e =>\r\n          this.setState({            \r\n            participations: [],\r\n            loadingInProgress: false, \r\n            error: e\r\n          })\r\n        );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      error: null\r\n    });\r\n  }\r\n\r\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\r\n  componentDidMount() {\r\n    this.getParticipations();\r\n  }\r\n\r\n\r\n\r\n  /*getParticipationsForStudent = () => {\r\n    ProjectAPI.getAPI().getParticipationsForStudent(2)   //Hier die ID des Studentens aufrufen --> this.state.studentId.getId()....vom StudentBO\r\n    //ProjectAPI.getAPI().getStudentById()\r\n        .then (participationBO => {\r\n            this.setState({ projects: participationBO });\r\n        }).catch(e =>\r\n          this.setState({            \r\n            projects: []\r\n          })\r\n        );\r\n}\r\n\r\n\r\n  //Lifecycle method, which is called when the component gets inserted into the browsers DOM \r\n  componentDidMount() {\r\n    this.getParticipationsForStudent();\r\n  }*/\r\n\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { participations, loadingInProgress, error } = this.state;\r\n    console.log(this.state);\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <List>\r\n            \r\n        { \r\n          // Show the list of ProjectListEntry components\r\n          // Do not use strict comparison, since expandedProjectID maybe a string if given from the URL parameters\r\n          participations.map(participation => <StudentReportListEntry key={participation.getID()} participation={participation} \r\n          show={this.props.show}/>)\r\n        }\r\n\r\n          <ListItem>\r\n            <LoadingProgress show={loadingInProgress} />\r\n            <ContextErrorMessage error={error} contextErrorMsg={`The list of participations could not be loaded.`} onReload={this.getParticipations} />\r\n          </ListItem>\r\n\r\n        </List>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '90%',\r\n    marginTop: theme.spacing(3),\r\n    //marginRight: theme.spacing(10),\r\n    marginLeft: theme.spacing(10),\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nStudentReportList.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n\r\n  show: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(StudentReportList));","import { withStyles, Typography, Grid } from '@material-ui/core';\r\nimport { Button, ButtonGroup, List, ListItem } from '@material-ui/core';\r\nimport { Hidden, Paper } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom';\r\nimport StudentHeader from '../layout/StudentHeader';\r\nimport LecturerAdminHeader from '../layout/LecturerAdminHeader';\r\nimport Header from '../layout/Header';\r\nimport StudentProjectList from '../StudentProjectList';\r\nimport LecturerProjectList from '../LecturerProjectList';\r\nimport AdminProjectList from '../AdminProjectList';\r\nimport ProjectListParticipants from '../ProjectListParticipants';\r\nimport Impressum from './Impressum';\r\nimport StudentReportIndividualTitle from '../StudentReportIndividualTitle';\r\nimport StudentReportList from '../StudentReportList';\r\n\r\n\r\nclass RoleChoice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            StudentClicked: false, \r\n            LecturerClicked: false,\r\n            AdminClicked: false,\r\n            AlwaysTrue: true,\r\n            disabled: true\r\n        };\r\n    }\r\n    \r\n\r\n    handleStudentButtonClicked = () => {\r\n        this.setState ({StudentClicked: true});\r\n        this.setState ({disabled:false})\r\n    \r\n    }\r\n\r\n    handleLecturerButtonClicked = () => {\r\n        this.setState ({LecturerClicked: true});\r\n        this.setState ({disabled:false})\r\n       \r\n    }\r\n \r\n    handleAdminButtonClicked = () => {\r\n        this.setState ({AdminClicked: true});\r\n        this.setState ({disabled:false})\r\n\r\n    }\r\n\r\n    handleDisable = () => {\r\n        this.setState({ disabled: false });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { StudentClicked, LecturerClicked, AdminClicked, AlwaysTrue } = this.state;\r\n        const { user, disabled } = this.props;\r\n        \r\n        /*if (StudentClicked) {\r\n            <div>\r\n                <StudentHeader/>\r\n            </div>        \r\n        } else if (LecturerClicked) {\r\n            <div>\r\n                <LecturerAdminHeader/>\r\n            </div>\r\n        } else {\r\n            <div>\r\n                <LecturerAdminHeader/>\r\n            </div>\r\n        }*/\r\n\r\n        return (\r\n            <div>\r\n            {/*<Typography className={classes.root} align='center' variant='h6'>Willkommen zum HdManagement System!</Typography>\r\n            <Typography className={classes.root} align='center'>Sie müssen sich für eine Ansicht entscheiden.</Typography>\r\n            <Typography className={classes.root} align='center'>Wählen Sie zum Fortfahren Ihre Rolle aus.</Typography>\r\n        */}\r\n        {this.state.disabled ?\r\n          \r\n            <Grid container justify='center'>\r\n            <ButtonGroup className = 'buttons' disabled = {disabled} >\r\n                <Grid item>\r\n                <Button variant='contained' color='primary' onClick={this.handleStudentButtonClicked} >\r\n                    Student\r\n                </Button>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                <Button variant='contained' color='primary' onClick={this.handleLecturerButtonClicked}>\r\n                    Dozent\r\n                </Button>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                <Button variant='contained' color='primary' onClick={this.handleAdminButtonClicked} >\r\n                    Admin\r\n                </Button>\r\n                </Grid>\r\n            </ButtonGroup>\r\n            </Grid>\r\n\r\n            : null }\r\n\r\n            {\r\n                StudentClicked ?\r\n                    <>\r\n                        <Router>\r\n                            <Redirect exact from='/' to='projects' />\r\n                            <StudentHeader/> \r\n\r\n                            <Route exact path='/projects'>\r\n                                <StudentProjectList />\r\n                            </Route>\r\n\r\n                            <Route exact path = '/report'>\r\n                                <StudentReportIndividualTitle />\r\n                                <StudentReportList />\r\n                            </Route>\r\n\r\n                            <Route path='/impressum' component={Impressum} />\r\n                        </Router>                      \r\n                    </>\r\n                    : LecturerClicked ?\r\n                    <>\r\n                        <Router>\r\n                            <Redirect from='/' to='projects' />\r\n                            <LecturerAdminHeader/> \r\n                            \r\n                            <Route exact path='/projects'>\r\n                                <LecturerProjectList/>\r\n                            </Route>\r\n\r\n                            <Route path = '/grade'>\r\n                                <ProjectListParticipants/>\r\n                            </Route>\r\n\r\n                            <Route path='/impressum' component={Impressum} />\r\n                        </Router>\r\n                    </>\r\n                    : AdminClicked ?\r\n                    <>\r\n                        <Router>\r\n                            <Redirect from='/' to='projects' />\r\n                            <LecturerAdminHeader/>\r\n                            \r\n                            <Route exact path='/projects'>\r\n                                <AdminProjectList/>\r\n                            </Route>\r\n\r\n                            <Route path = '/grade'>\r\n                                <ProjectListParticipants/>\r\n                            </Route>\r\n\r\n                            <Route path='/impressum' component={Impressum} />\r\n\r\n                        </Router>\r\n                    </>\r\n                    : AlwaysTrue\r\n                }   \r\n                        \r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(2)\r\n    }\r\n});\r\n\r\n/** PropTypes */\r\nRoleChoice.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n  }\r\n  \r\n\r\nexport default withStyles(styles)(RoleChoice);\r\n    \r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom';\r\nimport { ThemeProvider, CssBaseline } from '@material-ui/core';\r\n//import { Container } from '@material-ui/core';\r\nimport Theme from './Theme';\r\nimport SignIn from './components/pages/SignIn';\r\nimport LoadingProgress from './components/dialogs/LoadingProgress';\r\nimport ContextErrorMessage from './components/dialogs/ContextErrorMessage';\r\nimport Impressum from './components/pages/Impressum';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport StudentHeader from './components/layout/StudentHeader';\r\nimport LecturerAdminHeader from './components/layout/LecturerAdminHeader';\r\nimport StudentProjectList from './components/StudentProjectList';\r\nimport LecturerProjectList from './components/LecturerProjectList';\r\nimport AdminProjectList from './components/AdminProjectList';\r\nimport ProjectListParticipants from './components/ProjectListParticipants';\r\nimport Header from './components/layout/Header';\r\nimport RoleChoice from './components/pages/RoleChoice';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n\r\n  #firebaseConfig = {\r\n    apiKey: \"AIzaSyCPshPO8es80Afcy9rQKiSZ95v2OV3t54Y\",\r\n    authDomain: \"hdmanagement11.firebaseapp.com\",\r\n    databaseURL: \"https://hdmanagement11-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"hdmanagement11\",\r\n    storageBucket: \"hdmanagement11.appspot.com\",\r\n    messagingSenderId: \"441807077753\",\r\n    appId: \"1:441807077753:web:1ea77287c2e2e2eff06fa8\"\r\n    \r\n      };\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    this.state = {\r\n      currentUser: null,\r\n      appError: null,\r\n      authError: null,\r\n      authLoading: false\r\n    };\r\n  }\r\n\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { appError: error };\r\n  }\r\n\r\n  handleAuthStateChange = user => {\r\n    if (user) {\r\n      this.setState({\r\n        authLoading: true\r\n      });\r\n\r\n      user.getIdToken().then(token => {\r\n\r\n        document.cookie = `token=${token};path=/`;\r\n\r\n        this.setState({\r\n          currentUser: user,\r\n          authError: null,\r\n          authLoading: false\r\n        });\r\n      }).catch(e => {\r\n        this.setState({\r\n          authError: e,\r\n          authLoading: false\r\n        });\r\n      });\r\n    } else {\r\n\r\n      document.cookie = 'token=;path=/';\r\n\r\n\r\n      this.setState({\r\n        currentUser: null,\r\n        authLoading: false\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  handleSignIn = () => {\r\n    this.setState({\r\n      authLoading: true\r\n    });\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    firebase.auth().signInWithRedirect(provider);\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    firebase.initializeApp(this.#firebaseConfig);\r\n    firebase.auth().languageCode = 'en';\r\n    firebase.auth().onAuthStateChanged(this.handleAuthStateChange);\r\n  }\r\n\r\n\r\n  render() {\r\n    \r\n    const { currentUser, appError, authError, authLoading } = this.state;\r\n\r\n    return (\r\n      <ThemeProvider theme={Theme}>\r\n        <CssBaseline />\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <div className=\"App\">\r\n          <Header user={currentUser}/>\r\n            {\r\n\r\n              currentUser ?\r\n                  <>\r\n                    <Redirect from = '/' to = '/rolechoice' />\r\n                    <Route exact path=\"/rolechoice\">\r\n                      <RoleChoice/>\r\n                    </Route>\r\n                  </>\r\n                  :\r\n                  <>\r\n                    <Redirect to='/index.html' />\r\n                    <SignIn onSignIn={this.handleSignIn} />\r\n                  </>\r\n\r\n            }\r\n\r\n            <LoadingProgress show={authLoading} />\r\n            <ContextErrorMessage error={authError} contextErrorMsg={`Something went wrong during sign in process.`} onReload={this.handleSignIn} />\r\n            <ContextErrorMessage error={appError} contextErrorMsg={`Something went wrong inside the app. Please reload the page.`} />\r\n          \r\n          </div>\r\n        </Router>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","/*import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();*/\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}
{"version":3,"sources":["Theme.js","components/pages/SignIn.js","components/dialogs/LoadingProgress.js","components/dialogs/ContextErrorMessage.js","components/pages/Impressum.js","components/dialogs/ProfileDropDown.js","components/layout/StudentHeader.js","components/layout/LecturerAdminHeader.js","api/NamedBusinessObject.js","api/BusinessObject.js","api/ProjectBO.js","api/StudentBO.js","api/ProjectAPI.js","components/dialogs/StudentProjectSignIn.js","components/dialogs/StudentProjectSignOut.js","components/StudentProjectListEntry.js","components/StudentProjectList.js","components/dialogs/ProjectDeleteDialog.js","components/LecturerProjectListEntry.js","api/ProjectTypeBO.js","components/dialogs/ProjectForm.js","components/LecturerProjectList.js","components/AdminProjectListEntry.js","components/AdminProjectList.js","components/ProjectListEntryParticipants.js","components/ProjectListParticipants.js","components/layout/Header.js","components/pages/RoleChoice.js","App.js","index.js"],"names":["white","theme","createMuiTheme","palette","black","primary","contrastText","dark","colors","indigo","main","light","secondary","blue","success","green","info","warning","orange","error","red","text","blueGrey","link","background","default","paper","icon","divider","grey","SignIn","handleSignInButtonClicked","props","onSignIn","classes","this","Typography","className","root","align","variant","Grid","container","justify","item","Button","color","onClick","Component","withStyles","margin","spacing","LoadingProgress","show","LinearProgress","width","marginTop","ContextErrorMessage","contextErrorMsg","onReload","Alert","severity","AlertTitle","margins","message","startIcon","useStyles","makeStyles","marginBottom","padding","content","Impressum","Paper","elevation","Link","href","ProfileDropDown","createRef","handleAvatarButtonClick","setState","open","state","handleClose","handleSignOutButtonClicked","firebase","auth","signOut","user","IconButton","avatarButton","ref","Avatar","src","photoURL","Popover","anchorEl","current","onClose","anchorOrigin","vertical","horizontal","transformOrigin","ClickAwayListener","onClickAway","profileBox","Divider","float","Header","handleTabChange","e","newIndex","tabindex","component","Tabs","indicatorColor","textColor","centered","value","onChange","Tab","label","RouterLink","to","NamedBusinessObject","aName","name","id","create_time","Date","aId","creation_time","result","prop","ProjectBO","aCapacity","aPartners","aProjectDescription","aWeekly","aBDaysPreSchedule","aBDaysFinale","aBDaysSaturdays","aPreferredBDays","aRoomPreference","aPreferredRoom","aProjectCategory","aAdditionalSupervisor","capacity","partners","project_description","weekly","b_days_pre_schedule","b_days_finale","b_days_saturdays","preferred_b_days","room_preference","preferred_room","project_category","additional_supervisor","projects","Array","isArray","forEach","pr","Object","setPrototypeOf","prototype","push","StudentBO","aLastname","aFirstname","aCourse","aMatriculation_number","aMail","aProject_id","lastname","firstname","course","matriculation_number","mail","project_id","students","st","ProjectAPI","url","init","fetch","then","res","ok","Error","status","statusText","json","responseJSON","projectBOs","fromJSON","Promise","resolve","attributeBOs","projectID","responseProjectBO","projectBO","method","headers","body","JSON","stringify","studentID","responseStudentBO","studentBO","StudentProjectSignIn","addStudent","getAPI","addStudentForProject","project","getID","SignInInProgress","SignInError","catch","Dialog","DialogTitle","closeButton","DialogContent","DialogContentText","getName","DialogActions","position","right","top","StudentProjectSignOut","SignOutStudent","deleteStudentFromProject","SignOutInProgress","SignOutError","StudentProjectListEntry","expansionPanelStateChanged","onExpandedStateChange","StudentProjectSignInClicked","event","stopPropagation","showStudentProjectSignIn","StudentProjectSignInClosed","onStudentProjectSignIn","StudentProjectSignOutClicked","showStudentProjectSignOut","StudentProjectSignOutClosed","onStudentProjectSignOut","expandedState","Accordion","defaultExpanded","expanded","AccordionSummary","expandIcon","alignItems","heading","xs","AccordionDetails","List","ListItem","getCapacity","getProjectDescription","getAdditionalSupervisor","getPartners","getWeekly","getBDaysPreSchedule","getBDaysFinale","getBDaysSaturdays","getPreferredRoom","StudentProjectList","newID","expandedProjectID","getProjects","loadingInProgress","expandedID","location","expandProject","projectList","map","withRouter","marginLeft","customerFilter","ProjectDeleteDialog","deleteProject","deletingInProgress","deletingError","LecturerProjectListEntry","ProjectTypeBO","aEcts","aSws","ects","sws","projecttypes","pt","ProjectForm","addProject","newProject","projectName","additionalSupervisor","externalPartners","projectDescription","projectCategory","bDaysPreSchedule","bDaysFinale","bDaysSaturdays","preferredBDays","roomPreference","preferredRoom","newProjectType","projectTypeName","baseState","addingInProgress","addingError","textFieldValueChange","target","trim","length","handleChange","handleChange2","value2","projectNameValidationFailed","additionalSupervisorValidationFailed","externalPartnersValidationFailed","projectDescriptionValidationFailed","projectCategoryValidationFailed","weeklyValidationFailed","capacityValidationFailed","bDaysPreScheduleValidationFailed","bDaysFinaleValidationFailed","bDaysSaturdaysValidationFailed","preferredBDaysValidationFailed","roomPreferenceValidationFailed","preferredRoomValidationFailed","projectTypeNameValidationFailed","maxWidth","noValidate","autoComplete","TextField","autoFocus","type","required","fullWidth","helperText","FormControl","formControl","InputLabel","Select","MenuItem","disabled","minWidth","LecturerProjectList","addProjectButtonClicked","showProjectForm","projectFormClosed","newProjectList","expandCustomer","AdminProjectListEntry","deleteProjectButtonClicked","showProjectDeleteDialog","deleteProjectDialogClosed","onProjectDeleted","ButtonGroup","size","borderColor","AdminProjectList","ProjectListEntryParticipants","ProjectListParticipants","RoleChoice","handleStudentButtonClicked","StudentClicked","handleLecturerButtonClicked","LecturerClicked","handleAdminButtonClicked","AdminClicked","AlwaysTrue","exact","from","StudentHeader","path","LecturerAdminHeader","App","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","handleAuthStateChange","authLoading","getIdToken","token","document","cookie","currentUser","authError","handleSignIn","provider","GoogleAuthProvider","signInWithRedirect","appError","initializeApp","languageCode","onAuthStateChanged","ThemeProvider","Theme","CssBaseline","basename","process","React","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bfba5423.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { colors } from '@material-ui/core';\r\n\r\nconst white = '#FFFFFF';\r\nconst black = '#000000';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    black,\r\n    white,\r\n    primary: {\r\n      contrastText: white,\r\n      dark: colors.indigo[900],\r\n      main: colors.indigo[500],\r\n      light: colors.indigo[100]\r\n    },\r\n    secondary: {\r\n      contrastText: white,\r\n      dark: colors.blue[900],\r\n      main: colors.blue['A400'],\r\n      light: colors.blue['A400']\r\n    },\r\n    success: {\r\n      contrastText: white,\r\n      dark: colors.green[900],\r\n      main: colors.green[600],\r\n      light: colors.green[400]\r\n    },\r\n    info: {\r\n      contrastText: white,\r\n      dark: colors.blue[900],\r\n      main: colors.blue[600],\r\n      light: colors.blue[400]\r\n    },\r\n    warning: {\r\n      contrastText: white,\r\n      dark: colors.orange[900],\r\n      main: colors.orange[600],\r\n      light: colors.orange[400]\r\n    },\r\n    error: {\r\n      contrastText: white,\r\n      dark: colors.red[900],\r\n      main: colors.red[600],\r\n      light: colors.red[400]\r\n    },\r\n    text: {\r\n      primary: colors.blueGrey[800],\r\n      secondary: colors.blueGrey[600],\r\n      link: colors.blue[600]\r\n    },\r\n    background: {\r\n      default: '#F4F6F8',\r\n      paper: white\r\n    },\r\n    icon: colors.blueGrey[600],\r\n    divider: colors.grey[200]\r\n  }, \r\n});\r\n\r\n\r\n// A custom theme for this app\r\n// const theme = createMuiTheme({\r\n//   palette: {\r\n//     primary: {\r\n//       main: '#556cd6',\r\n//     },\r\n//     secondary: {\r\n//       main: '#19857b',\r\n//     },\r\n//     error: {\r\n//       main: red.A400,\r\n//     },\r\n//     background: {\r\n//       default: '#fff',\r\n//     },\r\n//   },\r\n// });\r\n\r\n\r\nexport default theme;","import React, {Component} from 'react';\r\nimport {Button, Grid, Typography, withStyles}from '@material-ui/core';\r\n\r\n \r\nclass SignIn extends Component {\r\n  \r\n  \r\n  handleSignInButtonClicked = () => {\r\n\t\tthis.props.onSignIn();\r\n  }\r\n\r\n  \r\n  render() {\r\n    const { classes } = this.props;\r\n    \r\n    return (\r\n      <div>\r\n        <Typography className={classes.root} align='center' variant='h6'>Willkommen zum HdManagement System!</Typography>\r\n        <Typography className={classes.root} align='center'>Es scheint, als wären Sie nicht angemeldet.</Typography>\r\n        <Typography className={classes.root} align='center'>Um den Service des Projektverwaltungssystems nutzen zu können, melden Sie sich über Google an.</Typography>\r\n        <Grid container justify='center'>\r\n          <Grid item>\r\n            <Button variant='contained' color='primary' onClick={this.handleSignInButtonClicked}>\r\n             Anmelden\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n\troot: {\r\n\t\tmargin: theme.spacing(2)\r\n\t}\r\n});\r\n\r\n\r\nexport default withStyles(styles)(SignIn)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\nclass SignIn extends Component{\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                    Hello World\r\n                </Button>\r\n            \r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default (SignIn)\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Button variant=\"contained\" color=\"primary\">\r\n      Hello World\r\n    </Button>\r\n  );\r\n}\r\n \r\nReactDOM.render(<App />, document.querySelector('#app'));\r\n*/\r\n\r\n","import React, { Component } from 'react';\r\nimport { withStyles, LinearProgress } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass LoadingProgress extends Component {\r\n\r\n\r\n  render() {\r\n    const { classes, show } = this.props;\r\n\r\n    return (\r\n      show ?\r\n        <div className={classes.root}>\r\n          <LinearProgress color='secondary' />\r\n        </div>\r\n        : null\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(2),\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nLoadingProgress.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** If true, the loading progress is rendered */\r\n  show: PropTypes.bool.isRequired,\r\n}\r\n\r\n\r\nexport default withStyles(styles)(LoadingProgress);\r\n","import React, { Component } from 'react';\r\n\r\nimport { withStyles, Button } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass ContextErrorMessage extends Component {\r\n  #standardText = 'This should not have happend. Soooo sorry...';\r\n\r\n\r\n  render() {\r\n    const { classes, error, contextErrorMsg, onReload } = this.props;\r\n\r\n    return (\r\n      (error !== null) ?\r\n        <Alert severity='error' className={classes.root}>\r\n          <div>\r\n            {this.#standardText}\r\n          </div>\r\n          <AlertTitle>\r\n            {contextErrorMsg}\r\n          </AlertTitle>\r\n          <div className={classes.margins}>\r\n            Error message (for debugging only) is:\r\n        </div>\r\n          <div>\r\n            {error.message}\r\n          </div>\r\n          {\r\n            onReload ?\r\n              <div className={classes.margins}>\r\n                <Button variant='contained' color='primary' startIcon={<AutorenewIcon />} onClick={onReload}>\r\n                  Reload\r\n            </Button>\r\n              </div>\r\n              : null\r\n          }\r\n        </Alert>\r\n        : null\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst styles = theme => ({\r\n  margins: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n});\r\n\r\n/** PropTypes */ \r\nContextErrorMessage.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** \r\n   * The error object, which drives the error message \r\n   * If not null, the error message is shown \r\n   */\r\n  error: PropTypes.object,\r\n  /**  A contextual error message to be shown */\r\n  contextErrorMsg: PropTypes.string,\r\n  /** \r\n   * A reload handler for the onReload event, which occurs if the reload button is clicked. \r\n   * If given a reload button is shown \r\n   */\r\n  onReload: PropTypes.func\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(ContextErrorMessage);\r\n","import React from 'react'\r\nimport { makeStyles, Paper, Typography, Link } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n  },\r\n  content: {\r\n    margin: theme.spacing(1),\r\n  }\r\n}));\r\n\r\n\r\nfunction Impressum() {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper elevation={0} className={classes.root}>\r\n      <div className={classes.content}>\r\n        <Typography variant='h6'>\r\n          HdManagement\r\n        </Typography>\r\n        <br />\r\n        <Typography>\r\n          Das HdManagement System ist ein Projektverwaltungssystem, welches im Rahmen der Lehrveranstaltung \"SW-Praktikum\" erstellt wurde.\r\n        </Typography>\r\n        <br />\r\n        <Typography>\r\n          Team Frontend: <Link href='https://github.com/LukasOrlando'>Lukas-Orlando Ulmer</Link>, \r\n          <Link href='https://github.com/Sania-Zeidan'> Sania Jasmin Zeidan</Link>,\r\n          <Link href='https://github.com/RahelUen'> Rahel Ün</Link>\r\n        </Typography>\r\n        <Typography>\r\n          Team Datenbank und Backend: <Link href='https://github.com/Tolga-Haybat'>Tolga Haybat</Link>,\r\n          <Link href='https://github.com/mariaweinberger'> Maria Weinberger</Link>, \r\n          <Link href='https://github.com/William-Zhang-26'> William Zhang</Link>\r\n        </Typography>\r\n        <br />\r\n        <Typography variant='body2'>\r\n          © Hochschule der Medien WS 2020 / 2021, all rights reserved.\r\n        </Typography>\r\n      </div>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default Impressum;","//Google PB und Logout Option\r\n\r\nimport React, { Component, createRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Popover, IconButton, Avatar, ClickAwayListener, withStyles, Typography, Paper, Button, Grid, Divider } from '@material-ui/core';\r\nimport firebase from 'firebase/app';\r\n\r\n\r\nclass ProfileDropDown extends Component {\r\n\r\n    // Hier wird der Avatar Button referiert\r\n    #avatarButtonRef = createRef();\r\n  \r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        open: false,\r\n      }\r\n    }\r\n  \r\n    //Material-UI: Click away listener\r\n    handleAvatarButtonClick = () => {\r\n      this.setState({\r\n        open: !this.state.open\r\n      });\r\n    }\r\n\r\n    handleClose = () => {\r\n      this.setState({\r\n        open: false\r\n      });\r\n    }\r\n  \r\n    \r\n    handleSignOutButtonClicked = () => {\r\n      firebase.auth().signOut();\r\n    }\r\n  \r\n\r\n    render() {\r\n      const { classes, user } = this.props;\r\n      const { open } = this.state;\r\n  \r\n      return (\r\n        user ?\r\n          <div>\r\n            <IconButton className={classes.avatarButton} ref={this.#avatarButtonRef} onClick={this.handleAvatarButtonClick}>\r\n              <Avatar src={user.photoURL} />\r\n            </IconButton>\r\n  \r\n            <Popover open={open} anchorEl={this.#avatarButtonRef.current} onClose={this.handleClose}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}>\r\n              <ClickAwayListener onClickAway={this.handleClose}>\r\n                <Paper className={classes.profileBox}>\r\n                  <Typography align='center'>Hallo</Typography>\r\n                  <Divider className={classes.divider} />\r\n                  {\r\n                  //<Typography align='center' variant='body2'>{user.displayName}</Typography>\r\n                  //<Typography align='center' variant='body2'>{user.email}</Typography>\r\n                  }\r\n                  <Divider className={classes.divider} />\r\n                  <Grid container justify='center'>\r\n                    <Grid item>\r\n                      <Button color='primary' onClick={this.handleSignOutButtonClicked}>Abmelden</Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Paper>\r\n              </ClickAwayListener>\r\n            </Popover>\r\n          </div>\r\n          : null\r\n      )\r\n    }\r\n  }\r\n  \r\n  const styles = theme => ({\r\n    avatarButton: {\r\n      float: 'right'\r\n    },\r\n    divider: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    profileBox: {\r\n      padding: theme.spacing(1),\r\n      background: theme.palette.background.default,\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\n  ProfileDropDown.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    /** The logged in firesbase user */\r\n    user: PropTypes.object,\r\n  }\r\n  \r\n  export default withStyles(styles)(ProfileDropDown)\r\n  ","//Der Studenten spezifische Header (Tabs: Projekte, Bericht, Impressum)\r\n\r\nimport React, { Component } from 'react';\r\nimport { Paper, Typography, Tabs, Tab } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport ProfileDropDown from '../dialogs/ProfileDropDown';     //Zeile 30:<ProfileDropDown user={user} />\r\n\r\n\r\nclass Header extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tabindex: 0\r\n    };\r\n  }\r\n\r\n\r\n  handleTabChange = (e, newIndex) => {\r\n    this.setState({\r\n      tabindex: newIndex\r\n    })\r\n  };\r\n\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    return (\r\n      <Paper variant='outlined' >\r\n        <ProfileDropDown user={user} />\r\n        <Typography variant='h3' component='h1' align='center'>\r\n          HdManagement\r\n        </Typography>\r\n        <Typography variant='h4' component='h2' align='center'>\r\n          Home\r\n        </Typography>\r\n \r\n            <Tabs indicatorColor='primary' textColor='primary' centered value={this.state.tabindex} onChange={this.handleTabChange} >\r\n              <Tab label='Projekte' component={RouterLink} to={`/projects`} />\r\n              <Tab label='Bericht' component={RouterLink} to={`/report`} />\r\n              <Tab label='Impressum' component={RouterLink} to={`/impressum`} />\r\n            </Tabs>\r\n     \r\n      </Paper>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Header;","//Der Admin und Dozenten spezifische Header (Tabs: Projekte, Noten, Impressum)\r\n\r\nimport React, { Component } from 'react';\r\nimport { Paper, Typography, Tabs, Tab } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport ProfileDropDown from '../dialogs/ProfileDropDown';\r\n\r\n\r\nclass Header extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tabindex: 0\r\n    };\r\n  }\r\n\r\n\r\n  handleTabChange = (e, newIndex) => {\r\n    this.setState({\r\n      tabindex: newIndex\r\n    })\r\n  };\r\n\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    return (\r\n      <Paper variant='outlined' >\r\n        <ProfileDropDown user={user} />\r\n        <Typography variant='h3' component='h1' align='center'>\r\n          HdManagement\r\n        </Typography>\r\n        <Typography variant='h4' component='h2' align='center'>\r\n          Home\r\n        </Typography>\r\n        \r\n            <Tabs indicatorColor='primary' textColor='primary' centered value={this.state.tabindex} onChange={this.handleTabChange} >\r\n              <Tab label='Projekte' component={RouterLink} to={`/projects`} />\r\n              <Tab label='Noten' component={RouterLink} to={`/grades`} />\r\n              <Tab label='Impressum' component={RouterLink} to={`/impressum`} />\r\n            </Tabs>\r\n            \r\n      </Paper>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Header;\r\n","import BusinessObject from './BusinessObject';\r\n\r\nexport default class NamedBusinessObject extends BusinessObject {\r\n\r\n    constructor(aName) {\r\n        super();\r\n        this.name = aName;\r\n\r\n    }\r\n\r\n    getName() {\r\n        return this.name;\r\n    }\r\n    \r\n    setName(aName) {\r\n        this.name = aName;\r\n    }\r\n\r\n}\r\n\r\n    ","/**\r\n * Base class for all BusinessObjects, which has an ID field by default.\r\n */\r\n\r\nexport default class BusinessObject {\r\n\r\n    constructor() {\r\n        this.id = 0;\r\n        this.create_time = Date //wird hier der Datentyp \"Date\" gesetzt, oder eine Variable wie \"aCreationTime\" o.Ä.\r\n    }\r\n\r\n    getID() {\r\n        return this.id;\r\n    }\r\n    \r\n    setID(aId) {\r\n        this.id = aId;\r\n    }\r\n\r\n    get_creation_time() {\r\n        return this.creation_time\r\n    }\r\n\r\n    toString() {\r\n        let result = '';\r\n        for (var prop in this) {\r\n          result += prop + ': ' + this[prop] + ' ';\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n    ","import NamedBusinessObject from './NamedBusinessObject';\r\nimport AutomatBO from './AutomatBO';\r\nimport StateBO from './StateBO';\r\n\r\n/** Unstimmigkeiten mit dem Backend:\r\n * \r\n * - weekly muss ein bool sein\r\n * - preferred room muss ein bool sein\r\n * \r\n */\r\n\r\nexport default class ProjectBO extends NamedBusinessObject {\r\n\r\n    /*static s_new = \"neu\"\r\n    static s_approved = \"genehmigt\"\r\n    static s_dismissed = \"abgelehnt\"\r\n    static s_inreview = \"in Bewertung\"\r\n    static s_reviewed = \"Bewertung abgeschlossen\"*/\r\n\r\n    //Konstruktorklasse, welche ein Projekttypen BO erstellt mit den abgebildeten Attributen\r\n    constructor(aCapacity, aPartners, aProjectDescription, aWeekly, aBDaysPreSchedule, aBDaysFinale, aBDaysSaturdays, aPreferredBDays, aRoomPreference, aPreferredRoom, aProjectCategory, aAdditionalSupervisor) {\r\n\r\n        super();\r\n        this.capacity = aCapacity;\r\n        this.partners = aPartners;\r\n        this.project_description = aProjectDescription;\r\n        this.weekly = aWeekly;\r\n        this.b_days_pre_schedule = aBDaysPreSchedule;\r\n        this.b_days_finale = aBDaysFinale;\r\n        this.b_days_saturdays = aBDaysSaturdays;\r\n        this.preferred_b_days = aPreferredBDays;\r\n        this.room_preference = aRoomPreference;\r\n        this.preferred_room = aPreferredRoom;\r\n        this.project_category = aProjectCategory;\r\n        this.additional_supervisor = aAdditionalSupervisor;\r\n    }\r\n\r\n    /**setFirstEvent(first_event) {\r\n        this.current_state = this.current_state.first_event(first_event)\r\n    }\r\n\r\n    setSecEvent(sec_event) {\r\n        this.current_state = this.current_state.sec_event(sec_event)\r\n    }\r\n\r\n    setThirdEvent(third_event) {\r\n        this.current_state = this.current_state.third_event(third_event)\r\n    }\r\n\r\n    setFourthEvent(fourth_event) {\r\n        this.current_state = this.current_state.fourth_event(fourth_event)\r\n    }\r\n\r\n    setFifthEvent(fifth_event) {\r\n        this.current_state = this.current_state.fifth_event(fifth_event)\r\n    }\r\n\r\n\r\n    getFirstEvent(first_event) {\r\n        let result\r\n        if (first_event === \"neu\") {\r\n            result = \"neu\";\r\n        } else {\r\n            //pass\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getSecEvent(sec_event) {\r\n        let result\r\n        if (sec_event === \"genehmigt\") {\r\n            result = \"genehmigt\";\r\n        } else {\r\n            //pass\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getThirdEvent(third_event) {\r\n        let result\r\n        if (third_event === \"abgelehnt\") {\r\n            result = \"abgelehnt\";\r\n        } else {\r\n            //pass\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getFourthEvent(fourth_event) {\r\n        let result\r\n        if (fourth_event === \"in Bewertung\") {\r\n            result = \"in Bewertung\";\r\n        } else {\r\n            //pass\r\n        }\r\n        return result;    \r\n    }\r\n\r\n    getFifthEvent(fifth_event) {\r\n        let result\r\n        if (fifth_event === \"Bewertung abgeschlossen\") {\r\n            result = \"Bewertung abgeschlossen\";\r\n        } else {\r\n            //pass\r\n        }\r\n        return result;\r\n    }*/\r\n\r\n\r\n    //Kapazität\r\n    getCapacity() {\r\n        return this.capacity;\r\n    }\r\n\r\n    setCapacity(aCapacity) {\r\n        this.capacity = aCapacity;\r\n    }\r\n\r\n    //externe Kooperationspartner\r\n    getPartners() {\r\n        return this.partners;\r\n    }\r\n\r\n    setPartners(aPartners) {\r\n        this.partners = aPartners;\r\n    }\r\n\r\n    //Projektbeschreibung\r\n    getProjectDescription() {\r\n        return this.project_description;\r\n    }\r\n\r\n    setProjectDescription(aProjectDescription) {\r\n        this.project_description = aProjectDescription;\r\n    }\r\n\r\n    //wöchentlich\r\n    getWeekly() {\r\n        return this.weekly;\r\n    }\r\n\r\n    setWeekly(aWeekly) {\r\n        this.weekly = aWeekly;\r\n    }\r\n\r\n    //Blocktage vor Beginn der Vorlesungszeit \r\n    getBDaysPreSchedule () {\r\n        return this.b_days_pre_schedule;\r\n    }\r\n\r\n    setBDaysPreSchedule (aBDaysPreSchedule) {\r\n        this.b_days_pre_schedule = aBDaysPreSchedule;\r\n    }\r\n\r\n    //Blocktage in der Prüfungszeit (nur inter-/transdiziplinäre Projekte)\r\n    getBDaysFinale () {\r\n        return this.b_days_finale;\r\n    }\r\n\r\n    setBDaysFinale (aBDaysFinale) {\r\n        this.b_days_finale = aBDaysFinale;\r\n    }\r\n\r\n    //Blocktage (Samstage) in der Vorlesungszeit\r\n    getBDaysSaturdays () {\r\n        return this.b_days_saturdays;\r\n    }\r\n\r\n    setBDaysSaturdays (aBDaysSaturdays) {\r\n        this.b_days_saturdays = aBDaysSaturdays;\r\n    }\r\n\r\n    //Präferierte Tage\r\n    getPreferredBDays () {\r\n        return this.preferred_b_days;\r\n    }\r\n\r\n    setPreferredBDays (aPreferredBDays) {\r\n        this.preferred_b_days = aPreferredBDays;\r\n    }\r\n\r\n    //Besonderer Raum notwendig (bool)\r\n    getRoomPreference () {\r\n        return this.room_preference;\r\n    }\r\n\r\n    setRoomPreference (aRoomPreference) {\r\n        this.room_preference = aRoomPreference;\r\n    }\r\n\r\n    //Besonderer Raum notwendig (str)\r\n    getPreferredRoom () {\r\n        return this.preferred_room;\r\n    }\r\n\r\n    setPreferredRoom (aPreferredRoom) {\r\n        this.preferred_room = aPreferredRoom;\r\n    }\r\n\r\n    //Projektkategorie\r\n    getProjectCategory () {\r\n        return this.project_category;\r\n    }\r\n\r\n    setProjectCategory (aProjectCategory) {\r\n        this.project_category = aProjectCategory;\r\n    }\r\n\r\n    //Externer Kooperationspartner \r\n    getAdditionalSupervisor () {\r\n        return this.additional_supervisor;\r\n    }\r\n\r\n    setAdditionalSupervisor (aAdditionalSupervisor) {\r\n        this.additional_supervisor = aAdditionalSupervisor;\r\n    }\r\n\r\n    //Array von ProjectBOs aus einem JSON herraus mittels der setPrototypeOf fkt\r\n    static fromJSON(projects) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(projects)) {\r\n            projects.forEach((pr) => {\r\n                Object.setPrototypeOf(pr, ProjectBO.prototype);\r\n                result.push(pr);\r\n            })\r\n        } else {\r\n            let pr = projects;\r\n            Object.setPrototypeOf(pr, ProjectBO.prototype);\r\n            result.push(pr)\r\n        }\r\n        \r\n        return result;\r\n    }\r\n}\r\n","//import NamedBusinessObject from './NamedBusinessObject';\r\n\r\nexport default class StudentBO /*extends NamedBusinessObject*/ {\r\n\r\n    //Konstruktorklasse, welche ein Studenten BO erstellt mit den abgebildeten Attributen\r\n    constructor(aLastname, aFirstname, aCourse, aMatriculation_number, aMail, aProject_id) {\r\n        //super();\r\n        this.lastname = aLastname;\r\n        this.firstname = aFirstname;\r\n        this.course = aCourse;\r\n        this.matriculation_number = aMatriculation_number;\r\n        this.mail = aMail;\r\n        this.project_id = aProject_id;\r\n    }\r\n\r\n\r\n    //Nachname\r\n    setLastName(aLastname) {\r\n        this.lastname = aLastname;\r\n    }\r\n\r\n    getLastName() {\r\n        return this.lastname;\r\n    }\r\n\r\n\r\n    //Vorname\r\n    setFirstName(aFirstname) {\r\n        this.firstname = aFirstname;\r\n    }\r\n\r\n    getFirstName() {\r\n        return this.firstname;\r\n    }\r\n\r\n\r\n    //Kurs\r\n    setCourse(aCourse) {\r\n        this.course = aCourse;\r\n    }\r\n\r\n    getCourse() {\r\n        return this.course;\r\n    }\r\n\r\n\r\n    //Matrikelnummer\r\n    setMatriculationNumber(aMatriculation_number) {\r\n        this.matriculation_number = aMatriculation_number;\r\n    }\r\n\r\n    getMatriculationNumber() {\r\n        return this.matriculation_number;\r\n    }\r\n\r\n\r\n    //Mail\r\n    setMail(aMail) {\r\n        this.mail = aMail;\r\n    }\r\n\r\n    getMail() {\r\n        return this.mail;\r\n    }\r\n\r\n\r\n    //PeojectID\r\n    setProcectId(aProject_id) {\r\n        this.project_id = aProject_id;\r\n    }\r\n\r\n    getProjectId() {\r\n        return this.project_id;\r\n    }\r\n    \r\n\r\n    //Array von StudentBOs aus einem JSON herraus mittels der setPrototypeOf fkt\r\n    static fromJSON(students) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(students)) {\r\n            students.forEach((st) => {\r\n                Object.setPrototypeOf(st, StudentBO.prototype);\r\n                result.push(st);\r\n            })\r\n        } else {\r\n            let st = students;\r\n            Object.setPrototypeOf(st, StudentBO.prototype);\r\n            result.push(st)\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n\r\n}","import ProjectBO from './ProjectBO'\r\nimport StudentBO from './StudentBO'\r\n\r\n\r\nexport default class ProjectAPI {\r\n\r\n    // Singelton instance\r\n    static #api = null;\r\n  \r\n  \r\n    // Local Python backend\r\n    #projectServerBaseURL = '/projectmanager';\r\n  \r\n    //Local http-fake-backend \r\n    //#projectServerBaseURL = '/api/project';\r\n\r\n\r\n    //Project related\r\n    #getProjectsURL = () => `${this.#projectServerBaseURL}/projects`;\r\n    #getProjectURL = (id) => `${this.#projectServerBaseURL}/projects/${id}`;\r\n    #getAttributesForProjectURL = (id) => `${this.#projectServerBaseURL}/projects/${id}/attributes`;\r\n    #addProjectURL = () => `${this.#projectServerBaseURL}/projects`;\r\n    #deleteProjectURL = (id) => `${this.#projectServerBaseURL}/projects/${id}`;\r\n\r\n    //Student related\r\n    #getStudentURL = (id) => `${this.#projectServerBaseURL}/students/${id}`;\r\n    #deleteStudentURL = (id) => `${this.#projectServerBaseURL}/students/${id}`;\r\n    #addStudentsForProjectURL = (id) => `${this.#projectServerBaseURL}/project/${id}/student`;\r\n\r\n\r\n    static getAPI() {\r\n        if (this.#api == null) {\r\n            this.#api = new ProjectAPI();\r\n        }\r\n        return this.#api;\r\n    }\r\n\r\n\r\n    #fetchAdvanced = (url, init) => fetch(url, init)\r\n        .then(res => {\r\n            // The Promise returned from fetch() won’t reject on HTTP error status even if the response is an HTTP 404 or 500. \r\n            if (!res.ok) {\r\n                throw Error(`${res.status} ${res.statusText}`);\r\n            }\r\n            return res.json();\r\n        }\r\n        )\r\n\r\n    //Project related\r\n    getProjects() {\r\n        return this.#fetchAdvanced(this.#getProjectsURL()).then((responseJSON) => {\r\n            let projectBOs = ProjectBO.fromJSON(responseJSON);\r\n            //console.info(projectBOs);\r\n            return new Promise(function (resolve) {\r\n                resolve(projectBOs);\r\n            })\r\n        })\r\n    }\r\n    \r\n    getAttributesForProject(attributeBOs) {\r\n        return this.#fetchAdvanced(this.#getAttributesForProjectURL(attributeBOs))\r\n          .then(responseJSON => {\r\n            // console.log(responseJSON)\r\n            return new Promise(function (resolve) {\r\n              resolve(responseJSON);\r\n            })\r\n          })\r\n      }\r\n      \r\n/**\r\n     getAttributesForProject(projectID) {\r\n      return this.#fetchAdvanced(this.#getAttributesForProjectURL(projectID))\r\n        .then((responseJSON) => {\r\n          let attributeBOs = ProjectBO.fromJSON(responseJSON)[0];\r\n          // console.info(accountBOs);\r\n          return new Promise(function (resolve) {\r\n            resolve(attributeBOs);\r\n          })\r\n        })\r\n    }\r\n*/\r\n    getProject(projectID) {\r\n        return this.#fetchAdvanced(this.#getProjectURL(projectID)).then((responseJSON) => {\r\n          // We always get an array of CustomerBOs.fromJSON, but only need one object\r\n          let responseProjectBO = ProjectBO.fromJSON(responseJSON)[0];\r\n          // console.info(responseCustomerBO);\r\n          return new Promise(function (resolve) {\r\n            resolve(responseProjectBO);\r\n          })\r\n        })\r\n      }\r\n\r\n      addProject(projectBO) {\r\n        return this.#fetchAdvanced(this.#addProjectURL(), {\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json, text/plain',\r\n            'Content-type': 'application/json',\r\n          },\r\n          body: JSON.stringify(projectBO)\r\n        }).then((responseJSON) => {\r\n          // We always get an array of CustomerBOs.fromJSON, but only need one object\r\n          let responseProjectBO = ProjectBO.fromJSON(responseJSON)[0];\r\n          // console.info(accountBOs);\r\n          return new Promise(function (resolve) {\r\n            resolve(responseProjectBO);\r\n          })\r\n        })\r\n      }\r\n\r\n      deleteProject(projectID) {\r\n        return this.#fetchAdvanced(this.#deleteProjectURL(projectID), {\r\n          method: 'DELETE'\r\n        }).then((responseJSON) => {\r\n          let responseProjectBO = ProjectBO.fromJSON(responseJSON)[0];\r\n          return new Promise(function (resolve) {\r\n            resolve(responseProjectBO);\r\n          })\r\n        })\r\n      }\r\n\r\n\r\n\r\n\r\n    //Student related\r\n    getStudent(studentID) {\r\n        return this.#fetchAdvanced(this.#getStudentURL(studentID)).then((responseJSON) => {\r\n          // We always get an array of StudentBOs.fromJSON, but only need one object\r\n          let responseStudentBO = StudentBO.fromJSON(responseJSON)[0];\r\n          // console.info(responseCustomerBO);\r\n          return new Promise(function (resolve) {\r\n            resolve(responseStudentBO);\r\n          })\r\n        })\r\n      }\r\n\r\n    addStudentForProject(projectID) {\r\n        return this.#fetchAdvanced(this.#addStudentsForProjectURL(projectID), {\r\n            method: 'POST'\r\n        })\r\n            .then((responseJSON) => {\r\n                // We always get an array of StudentBO.fromJSON, but only need one object\r\n                let studentBO = StudentBO.fromJSON(responseJSON)[0];\r\n                // console.info(accountBO);\r\n                return new Promise(function (resolve) {\r\n                    // We expect only one new account\r\n                    resolve(studentBO);\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n    deleteStudent(studentID) {\r\n        return this.#fetchAdvanced(this.#deleteStudentURL(studentID), {\r\n        method: 'DELETE'\r\n        }).then((responseJSON) => {\r\n        // We always get an array of StudentBOs.fromJSON\r\n        let responseStudentBO = StudentBO.fromJSON(responseJSON)[0];\r\n        // console.info(accountBOs);\r\n        return new Promise(function (resolve) {\r\n            resolve(responseStudentBO);\r\n        })\r\n        })\r\n    } \r\n   \r\n}","//Button für einen Studenten, um sich in einem Projekt anzumelden\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ProjectAPI from '../../api/ProjectAPI';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\n\r\n\r\nclass StudentProjectSignIn extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      // Init the state\r\n      this.state = {\r\n        SignInInProgress: false,\r\n        SignInError: null\r\n      };\r\n    }\r\n\r\n//get Project ID\r\n\r\n//Folgendes in der API ergänzen:\r\n//get Student ID\r\n//project get ID\r\n\r\n  /** Adds an account for the current customer */\r\n  addStudent = () => {\r\n    ProjectAPI.getAPI().addStudentForProject(this.props.project.getID()).then(studentBO => {\r\n      // console.log(accountBO)\r\n      this.setState({  // Set new state when StudentBOs have been fetched\r\n        students: [...this.state.students, studentBO],\r\n        SignInInProgress: false, // loading indicator \r\n        SignInError: null\r\n      })\r\n    }).catch(e =>\r\n      this.setState({ // Reset state with error from catch \r\n        students: [],\r\n        SignInInProgress: false,\r\n        SignInError: e\r\n      })\r\n    );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      SignInInProgress: true,\r\n      SignInError: null\r\n    });\r\n  }\r\n\r\n\r\n  /** Handles the close / cancel button click event */\r\n    handleClose = () => {\r\n    // console.log(event);\r\n    this.props.onClose(null);\r\n  }\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, project, show } = this.props;\r\n    const { SignInError, SignInInProgress } = this.state;\r\n\r\n    return (\r\n      show ?\r\n        <Dialog open={show} onClose={this.handleClose}>\r\n          <DialogTitle id='StudentSignin-Title'>In Projekt einschreiben\r\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Möchten Sie sich in folgendes Projekt einschreiben: '{project.getName()}' (ID: {project.getID()})?\r\n            </DialogContentText>\r\n            <LoadingProgress show={SignInInProgress} />\r\n            <ContextErrorMessage error={SignInError} contextErrorMsg={`The student could not be added to the project '${project.getName()}' with the ID: '${project.getID()}'`}\r\n              onReload={this.addStudentForProject} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color='secondary'>\r\n              Abbrechen\r\n            </Button>\r\n            <Button variant='contained' onClick={this.addStudent} color='primary'>\r\n              Einschreiben\r\n            </Button> \r\n          </DialogActions>\r\n        </Dialog>\r\n        : null\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\nStudentProjectSignIn.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    /** The CustomerBO to be deleted */\r\n    project: PropTypes.object.isRequired,\r\n    /** If true, the dialog is rendered */\r\n    show: PropTypes.bool.isRequired,\r\n    /**  \r\n     * Handler function which is called, when the dialog is closed.\r\n     * Sends the deleted CustomerBO as parameter or null, if cancel was pressed.\r\n     *  \r\n     * Signature: onClose(CustomerBO customer);\r\n     */\r\n    onClose: PropTypes.func.isRequired,\r\n  }\r\n  \r\n  export default withStyles(styles)(StudentProjectSignIn);\r\n","//Button für Studenten, um sich von Projekten abzumelden\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ProjectAPI from '../../api/ProjectAPI';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\n\r\n\r\nclass StudentProjectSignOut extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      // Init the state\r\n      this.state = {\r\n        SignOutInProgress: false,\r\n        SignOutError: null\r\n      };\r\n    }\r\n\r\n//get Project ID\r\n\r\n//Folgendes in der API ergänzen:\r\n//get Student ID\r\n//project get ID\r\n\r\n  /** Adds an account for the current customer */\r\n  SignOutStudent = () => {\r\n    ProjectAPI.getAPI().deleteStudentFromProject(this.props.project.getID()).then(studentBO => {\r\n      // console.log(accountBO)\r\n      this.setState({  // Set new state when StudentBOs have been fetched\r\n        students: [...this.state.students, studentBO],\r\n        SignOutInProgress: false, // loading indicator \r\n        SignOutError: null\r\n      })\r\n    }).catch(e =>\r\n      this.setState({ // Reset state with error from catch \r\n        students: [],\r\n        SignOutInProgress: false,\r\n        SignOutError: e\r\n      })\r\n    );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      SignOutInProgress: true,\r\n      SignOutError: null\r\n    });\r\n  }\r\n\r\n\r\n  /** Handles the close / cancel button click event */\r\n    handleClose = () => {\r\n    // console.log(event);\r\n    this.props.onClose(null);\r\n  }\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, project, show } = this.props;\r\n    const { SignOutError, SignOutInProgress } = this.state;\r\n\r\n    return (\r\n      show ?\r\n        <Dialog open={show} onClose={this.handleClose}>\r\n          <DialogTitle id='StudentSignOut-Title'>Aus Projekt ausschreiben\r\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Möchten Sie sich aus folgendem Projekt ausschreiben: '{project.getName()}' (ID: {project.getID()})?\r\n            </DialogContentText>\r\n            <LoadingProgress show={SignOutInProgress} />\r\n            <ContextErrorMessage error={SignOutError} contextErrorMsg={`The student could not be deleted from the project '${project.getName()}' with the ID: '${project.getID()}'`}\r\n              onReload={this.deleteStudentFromProject} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color='secondary'>\r\n              Abbrechen\r\n            </Button>\r\n            <Button variant='contained' onClick={this.deleteStudentFromProject} color='primary'>\r\n              Ausschreiben\r\n            </Button> \r\n          </DialogActions>\r\n        </Dialog>\r\n        : null\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\nStudentProjectSignOut.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    /** The CustomerBO to be deleted */\r\n    project: PropTypes.object.isRequired,\r\n    /** If true, the dialog is rendered */\r\n    show: PropTypes.bool.isRequired,\r\n    /**  \r\n     * Handler function which is called, when the dialog is closed.\r\n     * Sends the deleted CustomerBO as parameter or null, if cancel was pressed.\r\n     *  \r\n     * Signature: onClose(CustomerBO customer);\r\n     */\r\n    onClose: PropTypes.func.isRequired,\r\n  }\r\n  \r\n  export default withStyles(styles)(StudentProjectSignOut);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\r\nimport { Button, List, ListItem } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n//import CustomerForm from './dialogs/CustomerForm';\r\nimport StudentProjectSignIn from './dialogs/StudentProjectSignIn';\r\nimport StudentProjectSignOut from './dialogs/StudentProjectSignOut';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n/** Fehlende Inhalte:\r\n *  \r\n * - Aus ProjectTypeBO: Name (Fachspezifisch, Inter-, Transdisziplinär), ECTS und SWS\r\n * - Aus ModuleBO: EDV-Nummer\r\n * \r\n */\r\n\r\n//Condition für alle ergänzen\r\n//Admin Funktionen ergänzen\r\n\r\n\r\nclass StudentProjectListEntry extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      // Init the state\r\n      this.state = {\r\n        project: props.project,\r\n        showStudentProjectSignOut: false,\r\n        showStudentProjectSignIn: false,\r\n        //Admin Attribute für Funktionen\r\n      };\r\n    }\r\n\r\n  /** Handles onChange events of the underlying ExpansionPanel */\r\n  expansionPanelStateChanged = () => {\r\n    this.props.onExpandedStateChange(this.props.project);\r\n  }\r\n\r\n\r\n\r\n  /** Handles the onClick event of the delete customer button */\r\n  StudentProjectSignInClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showStudentProjectSignIn : true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the CustomerDeleteDialog */\r\n  StudentProjectSignInClosed = (project) => {\r\n    // if customer is not null, delete it\r\n    if (project) {\r\n      this.props.onStudentProjectSignIn(project);\r\n    };\r\n\r\n    // Don´t show the dialog\r\n    this.setState({\r\n      showStudentProjectSignIn: false\r\n    });\r\n  }\r\n\r\n\r\n  \r\n  /** Handles the onClick event of the delete customer button */\r\n  StudentProjectSignOutClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showStudentProjectSignOut : true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the CustomerDeleteDialog */\r\n  StudentProjectSignOutClosed = (project) => {\r\n    // if customer is not null, delete it\r\n    if (project) {\r\n      this.props.onStudentProjectSignOut(project);\r\n    };\r\n\r\n    // Don´t show the dialog\r\n    this.setState({\r\n      showStudentProjectSignOut: false\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    // Use the states customer\r\n    const { project, showStudentProjectSignIn, showStudentProjectSignOut } = this.state;\r\n\r\n    // console.log(this.state);\r\n    return (\r\n      <div>\r\n      <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={`project${project.getID()}projectpanel-header`} //** Wozu wird hier die Project ID benötigt*/\r\n          >\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='body1' className={classes.heading}>{project.getName()} {/** Angabe des Dozenten (UserBO?)*/}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs />\r\n              <Grid item>\r\n                <Typography variant='body2' color={'textSecondary'}>State</Typography> {/**Ergänzend steht hier die aktuelle Condition des Projektes */}\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <List>\r\n            <ListItem>Kapazität: {project.getCapacity()} </ListItem>\r\n            <ListItem>Projektbeschreibung: {project.getProjectDescription()} </ListItem>\r\n            <ListItem>Betreuuende Dozenten: {project.getAdditionalSupervisor()} </ListItem>  \r\n            <ListItem>Externe Partner: {project.getPartners()} </ListItem>\r\n            <ListItem>Wöchentlicher Kurs: {project.getWeekly()} </ListItem>\r\n            <ListItem>Anzahl der Blocktage vor der Vorlesungszeit: {project.getBDaysPreSchedule()} </ListItem>\r\n            <ListItem>Anzahl der Blocktage in der Prüfungszeit: {project.getBDaysFinale()} </ListItem>            \r\n            <ListItem>Anzahl der Blocktage in der Vorlesungszeit (Samstage): {project.getBDaysSaturdays()} </ListItem>\r\n            <ListItem>Raum: {project.getPreferredRoom()} </ListItem> \r\n            <ListItem>\r\n              <Button  color='secondary' startIcon={<AddIcon />} onClick={this.StudentProjectSignInClicked}>\r\n                Anmelden\r\n              </Button>\r\n              <Button  color='primary' startIcon={<AddIcon />} onClick={this.StudentProjectSignOutClicked}>\r\n                Abmelden\r\n              </Button>\r\n            </ListItem>  \r\n          </List>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n        <StudentProjectSignIn show={showStudentProjectSignIn} project={project} onClose={this.StudentProjectSignInClosed} /> \r\n        <StudentProjectSignOut show={showStudentProjectSignOut} project={project} onClose={this.StudentProjectSignOutClosed} /> \r\n        {/**<CustomerDeleteDialog show={showCustomerDeleteDialog} customer={customer} onClose={this.deleteCustomerDialogClosed} />   Admin Funktionen*/} \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\nStudentProjectListEntry.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    /** The CustomerBO to be rendered */\r\n    project: PropTypes.object.isRequired,\r\n    /** The state of this CustomerListEntry. If true the customer is shown with its accounts */\r\n    expandedState: PropTypes.bool.isRequired,\r\n    /** The handler responsible for handle expanded state changes (exanding/collapsing) of this CustomerListEntry \r\n     * \r\n     * Signature: onExpandedStateChange(CustomerBO customer)\r\n     */\r\n    onExpandedStateChange: PropTypes.func.isRequired\r\n    }\r\n  \r\nexport default withStyles(styles)(StudentProjectListEntry);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, List, ListItem, Button } from '@material-ui/core';\r\n//import AddIcon from '@material-ui/icons/Add';\r\nimport { withRouter } from 'react-router-dom';\r\nimport  ProjectAPI  from '../api/ProjectAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport StudentProjectListEntry from './StudentProjectListEntry';\r\n\r\n/**  \r\n * Hier wird die Liste aus Studentensicht angezeigt. Studenten sehen alle genehmigten Projekte\r\n * und können sich dafür An- und Abmelden.\r\n */\r\n\r\nclass StudentProjectList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // console.log(props);\r\n    let expandedID = null;\r\n\r\n    if (this.props.location.expandProject) {\r\n      expandedID = this.props.location.expandProject.getID();\r\n    }\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n        projects: [],\r\n        error: null,\r\n        loadingInProgress: false,\r\n        expandedProjectID: expandedID,\r\n    };\r\n  }\r\n\r\n  onExpandedStateChange = project => {\r\n    // console.log(projectID);\r\n    // Set expandend project entry to null by default\r\n    let newID = null;\r\n\r\n    // If same project entry is clicked, collapse it else expand a new one\r\n    if (project.getID() !== this.state.expandedProjectID) {\r\n      // Expand the project entry with projectID\r\n      newID = project.getID();\r\n    }\r\n    // console.log(newID);\r\n    this.setState({\r\n      expandedProjectID: newID,\r\n    });\r\n  }\r\n\r\n  getProjects = () => {\r\n    ProjectAPI.getAPI().getProjects()\r\n      .then(projectBOs =>\r\n        this.setState({              \r\n          projects: projectBOs,\r\n          loadingInProgress: false,   \r\n          error: null\r\n        })).catch(e =>\r\n          this.setState({            \r\n            projects: [],\r\n            loadingInProgress: false, \r\n            error: e\r\n          })\r\n        );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      error: null\r\n    });\r\n  }\r\n\r\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\r\n  componentDidMount() {\r\n    this.getProjects();\r\n  }\r\n\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { projects, expandedProjectID, loadingInProgress, error } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <List className={classes.projectList}>\r\n        { \r\n          // Show the list of ProjectListEntry components\r\n          // Do not use strict comparison, since expandedProjectID maybe a string if given from the URL parameters\r\n          projects.map(project => <StudentProjectListEntry key={project.getID()} project={project} \r\n          show={this.props.show}  onExpandedStateChange={this.onExpandedStateChange}/>)\r\n        }\r\n\r\n          <ListItem>\r\n            <LoadingProgress show={loadingInProgress} />\r\n            <ContextErrorMessage error={error} contextErrorMsg={`The list of projects could not be loaded.`} onReload={this.getProjects} />\r\n          </ListItem>\r\n\r\n        </List>\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '90%',\r\n    marginTop: theme.spacing(3),\r\n    //marginRight: theme.spacing(10),\r\n    marginLeft: theme.spacing(10),\r\n  },\r\n  customerFilter: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(1),\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nStudentProjectList.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n\r\n  show: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(StudentProjectList));","//Entfernen eines Projektes\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ProjectAPI  from '../../api/ProjectAPI';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\n\r\n\r\nclass ProjectDeleteDialog extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init the state\r\n    this.state = {\r\n      deletingInProgress: false,\r\n      deletingError: null\r\n    };\r\n  }\r\n\r\n  /** Delete the Project */\r\n  deleteProject = () => {\r\n    ProjectAPI.getAPI().deleteProject(this.props.project.getID()).then(project => {\r\n      this.setState({\r\n        deletingInProgress: false,              // disable loading indicator  \r\n        deletingError: null                     // no error message\r\n      });\r\n      this.props.onClose(this.props.project);  // call the parent with the deleted customer\r\n    }).catch(e =>\r\n      this.setState({\r\n        deletingInProgress: false,              // disable loading indicator \r\n        deletingError: e                        // show error message\r\n      })\r\n    );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      deletingInProgress: true,                 // show loading indicator\r\n      deletingError: null                       // disable error message\r\n    });\r\n  }\r\n\r\n  /** Handles the close / cancel button click event */\r\n  handleClose = () => {\r\n    // console.log(event);\r\n    this.props.onClose(null);\r\n  }\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, project, show } = this.props;\r\n    const { deletingInProgress, deletingError } = this.state;\r\n\r\n    return (\r\n      show ?\r\n        <Dialog open={show} onClose={this.handleClose}>\r\n          <DialogTitle id='delete-dialog-title'>Löschen des Projektes\r\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Sind Sie sicher, dass Sie das Projekt '{project.getName()} ' (ID: {project.getID()}) löschen möchten?\r\n            </DialogContentText>\r\n            <LoadingProgress show={deletingInProgress} />\r\n            <ContextErrorMessage error={deletingError} contextErrorMsg={`The project '${project.getName()} '(ID: ${project.getID()}) could not be deleted.`}\r\n              onReload={this.deleteProject} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color='secondary'>\r\n              Abbrechen\r\n            </Button>\r\n            <Button variant='contained' onClick={this.deleteProject} color='primary'>\r\n              Löschen\r\n            </Button> \r\n          </DialogActions>\r\n        </Dialog>\r\n        : null\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nProjectDeleteDialog.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  project: PropTypes.object.isRequired,\r\n\r\n  show: PropTypes.bool.isRequired,\r\n \r\n  onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(ProjectDeleteDialog);\r\n","import ProjectDeleteDialog from './dialogs/ProjectDeleteDialog';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\r\nimport { List, ListItem } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n/** Fehlende Inhalte:\r\n *  \r\n * - Aus ProjectTypeBO: Name (Fachspezifisch, Inter-, Transdisziplinär), ECTS und SWS\r\n * - Aus ModuleBO: EDV-Nummer\r\n * \r\n */\r\n\r\n//Condition für alle ergänzen\r\n\r\n\r\n\r\nclass LecturerProjectListEntry extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      // Init the state\r\n      this.state = {\r\n        project: props.project\r\n      };\r\n    }\r\n\r\n  /** Handles onChange events of the underlying ExpansionPanel */\r\n  expansionPanelStateChanged = () => {\r\n    this.props.onExpandedStateChange(this.props.project);\r\n  }\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    // Use the states project\r\n    const { project } = this.state;\r\n\r\n    // console.log(this.state);\r\n    return (\r\n      <div>\r\n      <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={`project${project.getID()}projectpanel-header`} //** Wozu wird hier die Project ID benötigt*/\r\n          >\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='body1' className={classes.heading}>{project.getName()} {/** Angabe des Dozenten (UserBO?)*/}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs />\r\n              <Grid item>\r\n                <Typography variant='body2' color={'textSecondary'}>State</Typography> {/**Ergänzend steht hier die aktuelle Condition des Projektes */}\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <List>\r\n            <ListItem>Kapazität: {project.getCapacity()} </ListItem>\r\n            <ListItem>Projektbeschreibung: {project.getProjectDescription()} </ListItem>\r\n            <ListItem>Betreuuende Dozenten: {project.getAdditionalSupervisor()} </ListItem>  \r\n            <ListItem>Externe Partner: {project.getPartners()} </ListItem>\r\n            <ListItem>Wöchentlicher Kurs: {project.getWeekly()} </ListItem>\r\n            <ListItem>Anzahl der Blocktage vor der Vorlesungszeit: {project.getBDaysPreSchedule()} </ListItem>\r\n            <ListItem>Anzahl der Blocktage in der Prüfungszeit: {project.getBDaysFinale()} </ListItem>            \r\n            <ListItem>Anzahl der Blocktage in der Vorlesungszeit (Samstage): {project.getBDaysSaturdays()} </ListItem>\r\n            <ListItem>Raum: {project.getPreferredRoom()} </ListItem> \r\n          </List>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\nLecturerProjectListEntry.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    expandedState: PropTypes.bool.isRequired,\r\n    onExpandedStateChange: PropTypes.func.isRequired\r\n    }\r\n  \r\nexport default withStyles(styles)(LecturerProjectListEntry);\r\n\r\n\r\n","//import NamedBusinessObject from './NamedBusinessObject';\r\n\r\n\r\nexport default class ProjectTypeBO /*extends NamedBusinessObject*/ {\r\n\r\n    //Konstruktorklasse, welche ein Projekttypen BO erstellt mit den abgebildeten Attributen\r\n    constructor(aEcts, aSws) {\r\n\r\n        //super();\r\n        this.ects = aEcts;\r\n        this.sws = aSws;\r\n\r\n    }\r\n\r\n    //ECTS\r\n    getEcts() {\r\n        return this.ects;\r\n    }\r\n\r\n    setEcts(aEcts) {\r\n        this.ects = aEcts;\r\n    }\r\n\r\n\r\n    //SWS\r\n    getSws() {\r\n        return this.sws;\r\n    }\r\n\r\n    setSws(aSws) {\r\n        this.sws = aSws;\r\n    }\r\n\r\n\r\n    //Array von ProjectTypeBOs aus einem JSON herraus mittels der setPrototypeOf fkt\r\n    static fromJSON(projecttypes) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(projecttypes)) {\r\n            projecttypes.forEach((pt) => {\r\n                Object.setPrototypeOf(pt, ProjectTypeBO.prototype);\r\n                result.push(pt);\r\n            })\r\n        } else {\r\n            let pt = projecttypes;\r\n            Object.setPrototypeOf(pt, ProjectTypeBO.prototype);\r\n            result.push(pt)\r\n        }\r\n        \r\n        return result;\r\n    }\r\n\r\n}","//Erstellen eines Objektes, nach der erstellung ist kein Update/ Edit möglich\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField } from '@material-ui/core';\r\nimport { MenuItem, FormControl, InputLabel, Select, Typography} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ProjectAPI  from '../../api/ProjectAPI';\r\nimport ProjectBO  from '../../api/ProjectBO';\r\nimport ProjectTypeBO  from '../../api/ProjectTypeBO';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\n\r\n\r\n/**\r\n * Die ProjectForm erlaubt es Dozenten, ein neues Projekt anzulegen.\r\n * Nach Anlegend es Projektes erhält das Projekt den automatisch generierten \r\n * Anfangszustand neu (Projekt ist ein Automat).\r\n * \r\n * Daraufhin muss der Dozent warten, bis der Admin das Projekt bewertet (genehmigen / ablehnen)\r\n * \r\n * Wenn das Projekt genehmigt wird, wird dem Studenten das neue Projekt in der Studentensicht \r\n * angezeigt und er hat die Möglichkeit, sich dafür anzumelden. Wenn sich Studenten anmelden, hat \r\n * das Projekt den Zustand \"in Bewertung\".\r\n * \r\n * Wenn hingegen das Projekt abgelehnt wird, wird das Projekt nicht weiter angezeigt.\r\n * Das Projekt wird dabei aber nicht gelöscht, sondern besteht weiterhin mit dem Zustand \"abgelehnt\".\r\n * Es sind dann keine weiteren Interaktionen mehr mit dem Projekt möglich.\r\n * \r\n */\r\n\r\nclass ProjectForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let name = '';\r\n    let as = '';\r\n    let ep = '';\r\n    let pd = '';\r\n    let pc = '';\r\n    let weekly = '';\r\n    let cap = '';\r\n    let bdps = '';\r\n    let bdf = '';\r\n    let bds = '';\r\n    let pbd = '';\r\n    let rp = '';\r\n    let pr = '';\r\n\r\n    let typeName = '';\r\n    let ects = '';\r\n    let sws = '';\r\n\r\n\r\n    // Init the state\r\n    this.state = {\r\n      //Project spezifische Attribute\r\n      projectName: name,\r\n      projectNameValidationFailed: false,\r\n      additionalSupervisor: as,\r\n      additionalSupervisorValidationFailed: false,\r\n      externalPartners: ep,\r\n      externalPartnersValidationFailed: false,\r\n      projectDescription: pd,\r\n      projectDescriptionValidationFailed: false,\r\n      projectCategory: pc,\r\n      projectCategoryValidationFailed: false,\r\n      weekly: weekly,\r\n      weeklyValidationFailed: false,\r\n      capacity: cap,\r\n      capacityValidationFailed: false,\r\n      bDaysPreSchedule: bdps,\r\n      bDaysPreScheduleValidationFailed: false,\r\n      bDaysFinale: bdf,\r\n      bDaysFinaleValidationFailed: false,\r\n      bDaysSaturdays: bds,\r\n      bDaysSaturdaysValidationFailed: false,\r\n      preferredBDays: pbd,\r\n      preferredBDaysValidationFailed: false,\r\n      roomPreference: rp,\r\n      roomPreferenceValidationFailed: false,\r\n      preferredRoom: pr,\r\n      preferredRoomValidationFailed: false,\r\n\r\n      // ProjectType spezifische Attribute\r\n      projectTypeName: typeName,\r\n      projectTypeNameValidationFailed: false,\r\n      ects: ects,\r\n      //ectsValidationFailed: false,\r\n      sws: sws,\r\n      //swsValidationFailed: false,\r\n\r\n      // Ladebalken und Error\r\n      addingInProgress: false,\r\n      addingError: null\r\n    };\r\n\r\n    //this.handleChange = this.handleChange.bind(this);\r\n    //this.handleSubmit = this.handleSubmit.bind(this);\r\n    // Beim Schließen des Dialogs soll der Anfangszustand wieder hergestellt werden\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  /** Adds the customer */\r\n  addProject = () => {\r\n    let newProject = new ProjectBO(this.state.projectName, this.state.additionalSupervisor, this.state.externalPartners, \r\n      this.state.projectDescription, this.state.projectCategory, this.state.weekly, this.state.capacity, \r\n      this.state.bDaysPreSchedule, this.state.bDaysFinale, this.state.bDaysSaturdays, this.state.preferredBDays, \r\n      this.state.roomPreference, this.state.preferredRoom); \r\n    let newProjectType = new ProjectTypeBO(this.state.projectTypeName, this.state.ects, this.state.sws);\r\n    ProjectAPI.getAPI().addProject(newProject, newProjectType).then(project => {\r\n      // Backend call sucessfull\r\n      // reinit the dialogs state for a new empty customer\r\n      this.setState(this.baseState);\r\n      this.props.onClose(project); // call the parent with the customer object from backend\r\n    }).catch(e =>\r\n      this.setState({\r\n        addingInProgress: false,    // disable loading indicator \r\n        addingError: e              // show error message\r\n      })\r\n    );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n        addingInProgress: true,       // show loading indicator\r\n        addingError: null             // disable error message\r\n    });\r\n  }\r\n\r\n// Update gegebenenfalls ergänzen um Projekte zu ändern\r\n\r\n  /** Handles value changes of the forms textfields and validates them */\r\n  textFieldValueChange = (event) => {\r\n    const value = event.target.value;\r\n\r\n    let error = false;\r\n    if (value.trim().length === 0) {\r\n      error = true;\r\n    }\r\n\r\n    this.setState({\r\n      [event.target.id]: event.target.value,\r\n      [event.target.id + 'ValidationFailed']: error,\r\n      [event.target.id + 'Edited']: true\r\n    });\r\n  } \r\n\r\n  /** Handles the close / cancel button click event*/\r\n  handleClose = () => {\r\n    // Reset the state\r\n    this.setState(this.baseState);\r\n    this.props.onClose(null);\r\n  }\r\n\r\n\r\n\r\n  /*handleSubmit(event) {\r\n    event.preventDefault();\r\n  }*/\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n        value: event.target.value\r\n    });}\r\n\r\n  handleChange2 = (event) => {\r\n    this.setState({\r\n        value2: event.target.value\r\n    });}\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, show } = this.props;\r\n    const { projectName, projectNameValidationFailed } = this.state;\r\n    const { additionalSupervisor, additionalSupervisorValidationFailed } = this.state;\r\n    const { externalPartners, externalPartnersValidationFailed } = this.state;\r\n    const { projectDescription, projectDescriptionValidationFailed } = this.state;\r\n    const { projectCategory, value, value2 } = this.state;\r\n    const { weekly, weeklyValidationFailed } = this.state;\r\n    const { capacity, capacityValidationFailed } = this.state;\r\n    const { bDaysPreSchedule, bDaysPreScheduleValidationFailed } = this.state;\r\n    const { bDaysFinale, bDaysFinaleValidationFailed } = this.state;\r\n    const { bDaysSaturdays, bDaysSaturdaysValidationFailed } = this.state;\r\n    const { preferredBDays, preferredBDaysValidationFailed } = this.state;\r\n    const { roomPreference, roomPreferenceValidationFailed } = this.state;\r\n    const { preferredRoom, preferredRoomValidationFailed } = this.state;\r\n    const { projectTypeName, projectTypeNameValidationFailed } = this.state;\r\n    const { ects } = this.state;\r\n    const { sws } = this.state;\r\n    //const {  } = this.state;\r\n    const { addingInProgress, addingError } = this.state;\r\n\r\n    let title = 'Neues Projekt erstellen';\r\n    let header = 'Füllen Sie das Formuler aus';\r\n\r\n    return (\r\n      show ?\r\n        <Dialog open={show} onClose={this.handleClose} maxWidth='xs'>\r\n          <DialogTitle id='form-dialog-title'>{title}\r\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              {header}\r\n            </DialogContentText>\r\n            <form className={classes.root} noValidate autoComplete='off'>\r\n            <TextField autoFocus type='text' required fullWidth margin='normal' id='projectName' label='Projekttitel:' value={projectName} \r\n                onChange={this.textFieldValueChange} error={projectNameValidationFailed} \r\n                helperText={projectNameValidationFailed ? 'Der Projekttitel muss mindestens ein Zeichen besitzen' : ' '} />\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='additionalSupervisor' label='Betreuende(r) ProfessorInnen:' value={additionalSupervisor} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='externalPartners' label='Externe Partner:' value={externalPartners} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='projectDescription' label='Projektbeschreibung (Inhalt):' value={projectDescription} \r\n                onChange={this.textFieldValueChange} error={projectDescriptionValidationFailed} \r\n                helperText={projectDescriptionValidationFailed ? 'Die Projektbeschreibung muss mindestens ein Zeichen besitzen' : ' '} />\r\n\r\n            {/*<TextField autoFocus type='text' required fullWidth margin='normal' id='projectCategory' label='Kategorie des Projektes:' value={projectCategory} \r\n                onChange={this.textFieldValueChange} error={projectCategoryValidationFailed} \r\n    helperText={projectCategoryValidationFailed ? 'Die Projektkategorie muss mindestens ein Zeichen besitzen' : ' '} />*/}\r\n            <Typography>Projektkategorie</Typography>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                <Select\r\n                  value={value}\r\n                  onChange={this.handleChange}\r\n                >\r\n                  <MenuItem value={'Management 338005-338009'}>Management 338005-338009</MenuItem>\r\n                  <MenuItem value={'IT 338010-338014'}>IT 338010-338014</MenuItem>\r\n                  <MenuItem value={'Medienproduktion 338015-338019'}>Medienproduktion 338015-338019</MenuItem>\r\n                  <MenuItem value={'Medien/Kultur 338020-338024'}>Medien/Kultur 338020-338024</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <p>Ausgewählte Projektkategorie: {value} </p>\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='capacity' label='Kapazität:' value={capacity} \r\n                onChange={this.textFieldValueChange} error={capacityValidationFailed} \r\n                helperText={capacityValidationFailed ? 'Die Kapazität muss mindestens ein Zeichen besitzen' : ' '} />\r\n            \r\n            \r\n            {// Checkbox für Fachspezifisch / Inter-/ Transdisziplinär\r\n            //ECTS und SWS werden automatisch angegeben je nach Auswahl\r\n            }\r\n            <TextField type='text' required fullWidth margin='normal' id='projectTypeName' label='Projektart:' value={projectTypeName} \r\n                onChange={this.textFieldValueChange} error={projectTypeNameValidationFailed} \r\n                helperText={projectTypeNameValidationFailed ? 'Es muss eine Projektart angegeben werden' : ' '} />\r\n            \r\n            <Typography>Projektart</Typography>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"open-select-label\">Bitte auswählen</InputLabel>\r\n                <Select\r\n                  value={value2}\r\n                  onChange={this.handleChange2}\r\n                >\r\n                  <MenuItem value={'Fachspezifisches Projekt'}>Fachspezifisches Projekt</MenuItem>\r\n                  <MenuItem value={'Interdisziplinäres Projekt'}>Interdisziplinäres Projekt</MenuItem>\r\n                  <MenuItem value={'Transdisziplinäres Projekt'}>Transdisziplinäres Projekt</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <p>Ausgewählte Projektart: {value2} </p>\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='ects' label='ECTS:' value={ects} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='sws' label='SWS:' value={sws} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n            <Typography>Raum- und Ressourcenplanung</Typography>\r\n\r\n            {// Wöchentlich bool muss Ja Nein Knöpfe / Ausgabe haben\r\n            }\r\n            <TextField type='text' required fullWidth margin='normal' id='weekly' label='Wöchentlich?' value={weekly} \r\n                onChange={this.textFieldValueChange} error={weeklyValidationFailed} \r\n                helperText={weeklyValidationFailed ? 'Es muss eine Checkbox gewählt werden' : ' '} />\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='bDaysPreSchedule' label='Blocktage vor Beginn der Vorlesungszeit:' value={bDaysPreSchedule} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='bDaysFinale' label='Blocktage in der Prüfungszeit (nur inter-/trans. Projekte!!!):' value={bDaysFinale} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='bDaysSaturdays' label='Blocktage (Samstage) in der Vorlesungszeit:' value={bDaysSaturdays} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='preferredBDays' label='Präferierte Tage:' value={preferredBDays} \r\n                onChange={this.textFieldValueChange} />\r\n\r\n            {// roomPreference bool muss Ja Nein Knöpfe / Ausgabe haben\r\n            }\r\n            <TextField type='text' required fullWidth margin='normal' id='roomPreference' label='Besonderer Raum notwendig? y/n' value={roomPreference} \r\n                onChange={this.textFieldValueChange} error={roomPreferenceValidationFailed} \r\n                helperText={roomPreferenceValidationFailed ? 'Es muss eine Checkbox gewählt werden' : ' '} />\r\n\r\n            <TextField type='text' required fullWidth margin='normal' id='preferredRoom' label='Besonderer Raum notwendig:' value={preferredRoom} \r\n                onChange={this.textFieldValueChange} />\r\n            </form>\r\n\r\n            <LoadingProgress show={addingInProgress} />\r\n            <ContextErrorMessage error={addingError} contextErrorMsg={`Das Projekt konnte nicht erstellt werden`} onReload={this.addProject} />\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color='secondary'>\r\n              Abbrechen\r\n            </Button>\r\n\r\n            <Button disabled={projectNameValidationFailed | projectDescriptionValidationFailed | capacityValidationFailed | weeklyValidationFailed | roomPreferenceValidationFailed | projectTypeNameValidationFailed } variant='contained' onClick={this.addProject} color='primary'>\r\n              Einsenden\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        : null\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 300,\r\n  },\r\n});\r\n\r\n/** PropTypes */\r\nProjectForm.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** The CustomerBO to be edited */\r\n  project: PropTypes.object,\r\n  /** If true, the form is rendered */\r\n  show: PropTypes.bool.isRequired,\r\n  /**  \r\n   * Handler function which is called, when the dialog is closed.\r\n   * Sends the edited or created CustomerBO as parameter or null, if cancel was pressed.\r\n   *  \r\n   * Signature: onClose(CustomerBO customer);\r\n   */\r\n  onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(ProjectForm);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, List, ListItem, Button } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withRouter } from 'react-router-dom';\r\nimport  ProjectAPI  from '../api/ProjectAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport LecturerProjectListEntry from './LecturerProjectListEntry';\r\nimport ProjectForm from './dialogs/ProjectForm';\r\n\r\n/**  \r\n * Hier wird die Liste aus Dozentensicht angezeigt. Dozenten sehen die eigenen Projekte (Neue und genehmigte)\r\n * und können weitere Projekte erstellen.\r\n */\r\n\r\nclass LecturerProjectList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // console.log(props);\r\n    let expandedID = null;\r\n\r\n    if (this.props.location.expandCustomer) {\r\n      expandedID = this.props.location.expandCustomer.getID();\r\n    }\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n        projects: [],\r\n        error: null,\r\n        loadingInProgress: false,\r\n        expandedProjectID: expandedID,\r\n    };\r\n  }\r\n\r\n  onExpandedStateChange = project => {\r\n    let newID = null;\r\n\r\n    if (project.getID() !== this.state.expandedProjectID) {\r\n      newID = project.getID();\r\n    }\r\n\r\n    this.setState({\r\n      expandedProjectID: newID,\r\n    });\r\n  }\r\n\r\n  getProjects = () => {\r\n    ProjectAPI.getAPI().getProjects()\r\n      .then(projectBOs =>\r\n        this.setState({               \r\n          projects: projectBOs,\r\n          loadingInProgress: false,   \r\n          error: null\r\n        })).catch(e =>\r\n          this.setState({           \r\n            projects: [],\r\n            loadingInProgress: false, \r\n            error: e\r\n          })\r\n        );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      error: null\r\n    });\r\n  }\r\n\r\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\r\n  componentDidMount() {\r\n    this.getProjects();\r\n  }\r\n\r\n\r\n  /** Handles the onClick event of the add project button */\r\n  addProjectButtonClicked = event => {\r\n    // Do not toggle the expanded state\r\n    event.stopPropagation();\r\n    //Show the ProjectForm\r\n    this.setState({\r\n      showProjectForm: true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the ProjectForm */\r\n  projectFormClosed = project => {\r\n    // project is not null and therefore created\r\n    if (project) {\r\n      const newProjectList = [...this.state.projects, project];\r\n      this.setState({\r\n        projects: newProjectList,\r\n        showProjectForm: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showProjectForm: false\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { projects, expandedProjectID, loadingInProgress, error, showProjectForm } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <List className={classes.projectList}>\r\n        <Button variant='contained' color='primary' startIcon={<AddIcon />} onClick={this.addProjectButtonClicked}>\r\n              Projekt erstellen\r\n          </Button>\r\n        { \r\n          // Show the list of ProjectListEntry components\r\n          // Do not use strict comparison, since expandedProjectID maybe a string if given from the URL parameters\r\n          projects.map(project => <LecturerProjectListEntry key={project.getID()} project={project} \r\n          show={this.props.show}  onExpandedStateChange={this.onExpandedStateChange}/>)\r\n        }\r\n\r\n          <ListItem>\r\n            <LoadingProgress show={loadingInProgress} />\r\n            <ContextErrorMessage error={error} contextErrorMsg={`The list of projects could not be loaded.`} onReload={this.getProjects} />\r\n            <ProjectForm show={showProjectForm} onClose={this.projectFormClosed} />\r\n          </ListItem>\r\n\r\n        </List>\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '90%',\r\n    marginTop: theme.spacing(3),\r\n    //marginRight: theme.spacing(10),\r\n    marginLeft: theme.spacing(10),\r\n  },\r\n\r\n});\r\n\r\n/** PropTypes */\r\nLecturerProjectList.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n\r\n  show: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(LecturerProjectList));","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\r\nimport { Button, List, ListItem } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n//import CustomerForm from './dialogs/CustomerForm';\r\n//import ApproveValidationForm from './dialogs/ApproveValidationForm';\r\n//import RejectValidationForm from './dialogs/RejectValidationForm';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { ButtonGroup } from '@material-ui/core';\r\nimport ProjectDeleteDialog from './dialogs/ProjectDeleteDialog';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\n/** Fehlende Inhalte:\r\n *  \r\n * - Aus ProjectTypeBO: Name (Fachspezifisch, Inter-, Transdisziplinär), ECTS und SWS\r\n * - Aus ModuleBO: EDV-Nummer\r\n * \r\n */\r\n\r\n//Condition für alle ergänzen\r\n//Admin Funktionen ergänzen\r\n\r\n\r\nclass AdminProjectListEntry extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      // Init the state\r\n      this.state = {\r\n        project: props.project,\r\n        showProjectDeleteDialog: false,\r\n        //showApproveValidationForm: false,\r\n        //showRejectValidationForm: false,\r\n        \r\n        //Admin Attribute für Funktionen\r\n      };\r\n    }\r\n\r\n  /** Handles onChange events of the underlying ExpansionPanel */\r\n  expansionPanelStateChanged = () => {\r\n    this.props.onExpandedStateChange(this.props.project);\r\n  }\r\n\r\n \r\n// Projekt genehmigen\r\n  /** Handles the onClick event of the delete customer button \r\n  ApproveProjectClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showApproveValidationForm : true\r\n    });\r\n  } */\r\n\r\n  /** Handles the onClose event of the CustomerDeleteDialog \r\n  ApproveValidationFormClosed = (project) => {\r\n    // if customer is not null, delete it\r\n    if (project) {\r\n      this.props.onApproveProject(project);\r\n    };\r\n\r\n    // Don´t show the dialog\r\n    this.setState({\r\n      showApproveValidationForm: false\r\n    });\r\n  } */\r\n\r\n\r\n// Projekt ablehnen  \r\n  /** Handles the onClick event of the delete customer button \r\n  RejectProjectClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showRejectValidationForm : true\r\n    });\r\n} */\r\n\r\n  /** Handles the onClose event of the CustomerDeleteDialog \r\n  RejectValidationFormClosed = (project) => {\r\n    // if customer is not null, delete it\r\n    if (project) {\r\n      this.props.onRejectProject(project);\r\n    };\r\n\r\n    // Don´t show the dialog\r\n    this.setState({\r\n      showRejectValidationForm: false\r\n    });\r\n  } */\r\n\r\n  /** Handles the onClick event of the delete project button */\r\n  deleteProjectButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showProjectDeleteDialog: true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the ProjectDeleteDialog */\r\n  deleteProjectDialogClosed = (project) => {\r\n    // if project is not null, delete it\r\n    if (project) {\r\n      this.props.onProjectDeleted(project);\r\n    };\r\n\r\n    // Don´t show the dialog\r\n    this.setState({\r\n      showProjectDeleteDialog: false\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    // Use the states project\r\n    const { project, showProjectDeleteDialog } = this.state;\r\n\r\n    // console.log(this.state);\r\n    return (\r\n      <div>\r\n      <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={`project${project.getID()}projectpanel-header`} //** Wozu wird hier die Project ID benötigt*/\r\n          >\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='body1' className={classes.heading}>{project.getName()} {/** Angabe des Dozenten (UserBO?)*/}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <ButtonGroup size='small'>\r\n                <Button className={classes.root} startIcon={<DeleteIcon />}\r\n                onClick = {this.deleteProjectButtonClicked}>\r\n                  Löschen\r\n                </Button>\r\n                </ButtonGroup>\r\n              </Grid>\r\n              <Grid item xs />\r\n              <Grid item>\r\n                <Typography variant='body2' color={'textSecondary'}>State</Typography> {/**Ergänzend steht hier die aktuelle Condition des Projektes */}\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <List>\r\n            <ListItem>Kapazität: {project.getCapacity()} </ListItem>\r\n            <ListItem>Projektbeschreibung: {project.getProjectDescription()} </ListItem>\r\n            <ListItem>Betreuuende Dozenten: {project.getAdditionalSupervisor()} </ListItem>  \r\n            <ListItem>Externe Partner: {project.getPartners()} </ListItem>\r\n            <ListItem>Wöchentlicher Kurs: {project.getWeekly()} </ListItem>\r\n            <ListItem>Anzahl der Blocktage vor der Vorlesungszeit: {project.getBDaysPreSchedule()} </ListItem>\r\n            <ListItem>Anzahl der Blocktage in der Prüfungszeit: {project.getBDaysFinale()} </ListItem>            \r\n            <ListItem>Anzahl der Blocktage in der Vorlesungszeit (Samstage): {project.getBDaysSaturdays()} </ListItem>\r\n            <ListItem>Raum: {project.getPreferredRoom()} </ListItem> \r\n            <ListItem>\r\n                <Button  color='success' startIcon={<AddIcon />}>\r\n                  Genehmigen\r\n                </Button>\r\n                <Button  color='error' startIcon={<AddIcon />}>\r\n                  Ablehnen\r\n                </Button>\r\n            </ListItem>  \r\n          </List>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n        <ProjectDeleteDialog show={showProjectDeleteDialog} project={project} onClose={this.deleteProjectDialogClosed} />\r\n        {/**<ApproveValidationForm show={showApproveValidationForm} project={project} onClose={this.ApproveValidationFormClosed} />\r\n        <RejectValidationForm show={showRejectValidationForm} project={project} onClose={this.RejectValidationFormClosed} /> \r\n        <StudentProjectSignOut show={showRejectProject} project={project} onClose={this.StudentProjectSignOutClosed} /> \r\n        <CustomerDeleteDialog show={showCustomerDeleteDialog} customer={customer} onClose={this.deleteCustomerDialogClosed} />   Admin Funktionen*/} \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      color: red[500],\r\n      borderColor: red[500],\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\nAdminProjectListEntry.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    expandedState: PropTypes.bool.isRequired,\r\n    onExpandedStateChange: PropTypes.func.isRequired\r\n    }\r\n  \r\nexport default withStyles(styles)(AdminProjectListEntry);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, List, ListItem, Button } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ProjectAPI  from '../api/ProjectAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport AdminProjectListEntry from './AdminProjectListEntry';\r\nimport ValidationForm from './dialogs/ValidationForm';\r\n\r\n/**  \r\n * Hier wird die Liste aus Studentensicht angezeigt. Studenten sehen alle genehmigten Projekte\r\n * und können sich dafür An- und Abmelden.\r\n */\r\n\r\nclass AdminProjectList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // console.log(props);\r\n    let expandedID = null;\r\n\r\n    if (this.props.location.expandProject) {\r\n      expandedID = this.props.location.expandProject.getID();\r\n    }\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n        projects: [],\r\n        error: null,\r\n        loadingInProgress: false,\r\n        expandedProjectID: expandedID,\r\n    };\r\n  }\r\n\r\n  onExpandedStateChange = project => {\r\n    // console.log(projectID);\r\n    // Set expandend project entry to null by default\r\n    let newID = null;\r\n\r\n    // If same project entry is clicked, collapse it else expand a new one\r\n    if (project.getID() !== this.state.expandedProjectID) {\r\n      // Expand the customer entry with projectID\r\n      newID = project.getID();\r\n    }\r\n    // console.log(newID);\r\n    this.setState({\r\n      expandedProjectID: newID,\r\n    });\r\n  }\r\n\r\n  getProjects = () => {\r\n    ProjectAPI.getAPI().getProjects()\r\n      .then(projectBOs =>\r\n        this.setState({               // Set new state when ProjectBOs have been fetched\r\n          projects: projectBOs,\r\n          loadingInProgress: false,   // disable loading indicator \r\n          error: null\r\n        })).catch(e =>\r\n          this.setState({             // Reset state with error from catch \r\n            projects: [],\r\n            loadingInProgress: false, // disable loading indicator \r\n            error: e\r\n          })\r\n        );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      error: null\r\n    });\r\n  }\r\n\r\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\r\n  componentDidMount() {\r\n    this.getProjects();\r\n  }\r\n\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { projects, expandedProjectID, loadingInProgress, error } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <List className={classes.projectList}>\r\n        { \r\n          // Show the list of ProjectListEntry components\r\n          // Do not use strict comparison, since expandedProjectID maybe a string if given from the URL parameters\r\n          projects.map(project => <AdminProjectListEntry key={project.getID()} project={project} \r\n          show={this.props.show}  onExpandedStateChange={this.onExpandedStateChange}/>)\r\n        }\r\n\r\n          <ListItem>\r\n            <LoadingProgress show={loadingInProgress} />\r\n            <ContextErrorMessage error={error} contextErrorMsg={`The list of projects could not be loaded.`} onReload={this.getProjects} />\r\n          </ListItem>\r\n\r\n        </List>\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '90%',\r\n    marginTop: theme.spacing(3),\r\n    //marginRight: theme.spacing(10),\r\n    marginLeft: theme.spacing(10),\r\n  },\r\n\r\n});\r\n\r\n/** PropTypes */\r\nAdminProjectList.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n\r\n  show: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(AdminProjectList));","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\r\nimport { Button, List, ListItem } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n//import CustomerForm from './dialogs/CustomerForm';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n/** Fehlende Inhalte:\r\n *  \r\n * - Aus ProjectTypeBO: Name (Fachspezifisch, Inter-, Transdisziplinär), ECTS und SWS\r\n * - Aus ModuleBO: EDV-Nummer\r\n * \r\n */\r\n\r\n//Condition für alle ergänzen\r\n//Admin Funktionen ergänzen\r\n\r\n\r\nclass ProjectListEntryParticipants extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      // Init the state\r\n      this.state = {\r\n        project: props.project,\r\n        //Admin Attribute für Funktionen\r\n      };\r\n    }\r\n\r\n  /** Handles onChange events of the underlying ExpansionPanel */\r\n  expansionPanelStateChanged = () => {\r\n    this.props.onExpandedStateChange(this.props.project);\r\n  }\r\n\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    // Use the states customer\r\n    const { project } = this.state;\r\n\r\n    // console.log(this.state);\r\n    return (\r\n      <div>\r\n      <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={`project${project.getID()}projectpanel-header`} //** Wozu wird hier die Project ID benötigt*/\r\n          >\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='body1' className={classes.heading}>{project.getName()} {/** Angabe des Dozenten (UserBO?)*/}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs />\r\n            </Grid>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <List>\r\n            <ListItem>Betreuuende Dozenten: {project.getAdditionalSupervisor()} </ListItem>  \r\n            \r\n          </List>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n        {/**<CustomerDeleteDialog show={showCustomerDeleteDialog} customer={customer} onClose={this.deleteCustomerDialogClosed} />   Admin Funktionen*/} \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    }\r\n  });\r\n  \r\n  /** PropTypes */\r\nProjectListEntryParticipants.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    expandedState: PropTypes.bool.isRequired,\r\n    onExpandedStateChange: PropTypes.func.isRequired\r\n    }\r\n  \r\nexport default withStyles(styles)(ProjectListEntryParticipants);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, List, ListItem, Button } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withRouter } from 'react-router-dom';\r\nimport  ProjectAPI  from '../api/ProjectAPI';\r\nimport ContextErrorMessage from './dialogs/ContextErrorMessage';\r\nimport LoadingProgress from './dialogs/LoadingProgress';\r\nimport ProjectListEntryParticipants from './ProjectListEntryParticipants';\r\n\r\n\r\n\r\n/**  \r\n * Hier wird die Liste aus Dozentensicht angezeigt. Dozenten sehen die eigenen Projekte und deren Teilnehmer\r\n */\r\n\r\nclass ProjectListParticipants extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // console.log(props);\r\n    let expandedID = null;\r\n\r\n    if (this.props.location.expandProject) {\r\n      expandedID = this.props.location.expandProject.getID();\r\n    }\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n        projects: [],\r\n        error: null,\r\n        loadingInProgress: false,\r\n        expandedProjectID: expandedID,\r\n    };\r\n  }\r\n\r\n  onExpandedStateChange = project => {\r\n    // console.log(projectID);\r\n    // Set expandend project entry to null by default\r\n    let newID = null;\r\n\r\n    // If same project entry is clicked, collapse it else expand a new one\r\n    if (project.getID() !== this.state.expandedProjectID) {\r\n      // Expand the project entry with customerID\r\n      newID = project.getID();\r\n    }\r\n    // console.log(newID);\r\n    this.setState({\r\n      expandedProjectID: newID,\r\n    });\r\n  }\r\n\r\n  getProjects = () => {\r\n    ProjectAPI.getAPI().getProjects()\r\n      .then(projectBOs =>\r\n        this.setState({            \r\n          projects: projectBOs,\r\n          loadingInProgress: false,   \r\n          error: null\r\n        })).catch(e =>\r\n          this.setState({            \r\n            projects: [],\r\n            loadingInProgress: false, \r\n            error: e\r\n          })\r\n        );\r\n\r\n\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      error: null\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getProjects();\r\n  }\r\n\r\n\r\n  onExpandedStateChange = project => {\r\n\r\n    let newID = null;\r\n\r\n    if (project.getID() !== this.state.expandedProjectID) {\r\n      newID = project.getID();\r\n    }\r\n \r\n    this.setState({\r\n      expandedProjectID: newID,\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { projects, expandedProjectID, loadingInProgress, error } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <List className={classes.projectList}>\r\n        { \r\n         \r\n          projects.map(project => <ProjectListEntryParticipants key={project.getID()} project={project} \r\n          show={this.props.show}  onExpandedStateChange={this.onExpandedStateChange}/>)\r\n        }\r\n\r\n          <ListItem>\r\n            <LoadingProgress show={loadingInProgress} />\r\n            <ContextErrorMessage error={error} contextErrorMsg={`The list of projects could not be loaded.`} onReload={this.getProjects} />\r\n          </ListItem>\r\n\r\n        </List>\r\n        \r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  customerFilter: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(1),\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nProjectListParticipants.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n\r\n  show: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(ProjectListParticipants));","import React, { Component } from 'react';\r\nimport { Paper, Typography, Tabs, Tab } from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport ProfileDropDown from '../dialogs/ProfileDropDown';    // Zeile 30: <ProfileDropDown user={user} />\r\n\r\n\r\nclass Header extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tabindex: 0\r\n    };\r\n  }\r\n\r\n\r\n  handleTabChange = (e, newIndex) => {\r\n    this.setState({\r\n      tabindex: newIndex\r\n    })\r\n  };\r\n\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n\r\n    return (\r\n      <Paper variant='outlined' >\r\n        <ProfileDropDown user={user} />\r\n        <Typography variant='h3' component='h1' align='center'>\r\n          HdManagement\r\n        </Typography>\r\n        <Typography variant='h4' component='h2' align='center'>\r\n          Home\r\n        </Typography>\r\n        {\r\n          user ?\r\n            <Tabs indicatorColor='primary' textColor='primary' centered value={this.state.tabindex} onChange={this.handleTabChange} >\r\n              <Tab label='rolechoice' component={RouterLink} to={`/rolechoice`} />\r\n            </Tabs>\r\n            : null\r\n        }\r\n      </Paper>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Header;","import { withStyles, Typography, Grid } from '@material-ui/core';\r\nimport { Button, List, ListItem } from '@material-ui/core';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom';\r\nimport StudentHeader from '../layout/StudentHeader';\r\nimport LecturerAdminHeader from '../layout/LecturerAdminHeader';\r\nimport StudentProjectList from '../StudentProjectList';\r\nimport LecturerProjectList from '../LecturerProjectList';\r\nimport AdminProjectList from '../AdminProjectList';\r\n//import AdminProjectList from './components/AdminProjectList';\r\nimport ProjectListParticipants from '../ProjectListParticipants';\r\nimport Impressum from './Impressum';\r\nimport StudentReportIndividualTitle from '../StudentReportIndividualTitle';\r\nimport StudentReportList from '../StudentReportList';\r\n\r\n\r\nclass RoleChoice extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n\r\n            StudentClicked: false, \r\n            LecturerClicked: false,\r\n            AdminClicked: false,\r\n            AlwaysTrue: true\r\n        };\r\n    }\r\n    \r\n\r\n    handleStudentButtonClicked = () => {\r\n        this.setState ({StudentClicked: true});\r\n\r\n\r\n  }\r\n\r\n    handleLecturerButtonClicked = () => {\r\n        this.setState ({LecturerClicked: true});\r\n\r\n\r\n  }\r\n \r\n    handleAdminButtonClicked = () => {\r\n        this.setState ({AdminClicked: true});\r\n\r\n\r\n  }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { StudentClicked, LecturerClicked, AdminClicked, AlwaysTrue } = this.state;\r\n        const { user } = this.props;\r\n        \r\n        /*if (StudentClicked) {\r\n            <div>\r\n                <StudentHeader/>\r\n            </div>        \r\n        } else if (LecturerClicked) {\r\n            <div>\r\n                <LecturerAdminHeader/>\r\n            </div>\r\n        } else {\r\n            <div>\r\n                <LecturerAdminHeader/>\r\n            </div>\r\n        }*/\r\n\r\n        return (\r\n            <div>\r\n            {/*<Typography className={classes.root} align='center' variant='h6'>Willkommen zum HdManagement System!</Typography>\r\n            <Typography className={classes.root} align='center'>Sie müssen sich für eine Ansicht entscheiden.</Typography>\r\n            <Typography className={classes.root} align='center'>Wählen Sie zum Fortfahren Ihre Rolle aus.</Typography>\r\n        */}\r\n            <Grid container justify='center'>\r\n                <Grid item>\r\n                <Button variant='contained' color='primary' onClick={this.handleStudentButtonClicked}>\r\n                    Student\r\n                </Button>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                <Button variant='contained' color='primary' onClick={this.handleLecturerButtonClicked}>\r\n                    Dozent\r\n                </Button>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                <Button variant='contained' color='primary' onClick={this.handleAdminButtonClicked}>\r\n                    Admin\r\n                </Button>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {/*<Route exact path=\"/\">\r\n                 {StudentClicked ? \r\n                 <>\r\n                    <Redirect to=\"/projects\" /> \r\n                    <Route exact path='/projects'>\r\n                        <StudentProjectList/>\r\n                    </Route> \r\n                    <Link to = '/projects' replace />\r\n                 </>\r\n                 \r\n                 : <RoleChoice />}\r\n                 </Route>*/}\r\n\r\n            { \r\n                StudentClicked ?\r\n                    <>\r\n                        <Router>\r\n                            <Redirect exact from='/' to='projects' />\r\n\r\n                                <StudentHeader/> \r\n\r\n\r\n                            <Route exact path='/projects'>\r\n                                <StudentProjectList />\r\n                            </Route>\r\n\r\n                            <Route exact path = '/report'>\r\n                            </Route>\r\n\r\n                            <Route path='/impressum' component={Impressum} />\r\n                        </Router>                      \r\n                    </>\r\n                    : LecturerClicked ?\r\n                    <>\r\n                        <Router>\r\n                            <Redirect from='/' to='projects' />\r\n                            <LecturerAdminHeader/> \r\n                            \r\n                            <Route exact path='/projects'>\r\n                                <LecturerProjectList/>\r\n                            </Route>\r\n\r\n                            <Route path = '/grade'>\r\n                                <ProjectListParticipants/>\r\n                            </Route>\r\n\r\n                            <Route path='/impressum' component={Impressum} />\r\n                        </Router>\r\n                    </>\r\n                    : AdminClicked ?\r\n                    <>\r\n                        <Router>\r\n                            <Redirect from='/' to='projects' />\r\n                            <LecturerAdminHeader/>\r\n                            \r\n                            <Route exact path='/projects'>\r\n                                <AdminProjectList/>\r\n                            </Route>\r\n\r\n                            <Route path = '/grade'>\r\n                                <ProjectListParticipants/>\r\n                            </Route>\r\n\r\n                            <Route path='/impressum' component={Impressum} />\r\n\r\n                        </Router>\r\n                    </>\r\n                    : AlwaysTrue /*\r\n                    <>\r\n                        <Redirect to='/index.html' />    \r\n                        <Route exact path=\"/rolechoice\">\r\n                            <RoleChoice />\r\n                        </Route>\r\n                    </>\r\n\r\n            */}   \r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        margin: theme.spacing(2)\r\n    }\r\n});\r\n\r\n/** PropTypes */\r\nRoleChoice.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n  }\r\n  \r\n\r\nexport default withStyles(styles)(RoleChoice);\r\n    \r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom';\r\nimport { ThemeProvider, CssBaseline } from '@material-ui/core';\r\n//import { Container } from '@material-ui/core';\r\nimport Theme from './Theme';\r\nimport SignIn from './components/pages/SignIn';\r\nimport LoadingProgress from './components/dialogs/LoadingProgress';\r\nimport ContextErrorMessage from './components/dialogs/ContextErrorMessage';\r\nimport Impressum from './components/pages/Impressum';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport StudentHeader from './components/layout/StudentHeader';\r\nimport LecturerAdminHeader from './components/layout/LecturerAdminHeader';\r\nimport StudentProjectList from './components/StudentProjectList';\r\nimport LecturerProjectList from './components/LecturerProjectList';\r\nimport AdminProjectList from './components/AdminProjectList';\r\nimport ProjectListParticipants from './components/ProjectListParticipants';\r\nimport Header from './components/layout/Header';\r\nimport RoleChoice from './components/pages/RoleChoice';\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n\r\n  #firebaseConfig = {\r\n    apiKey: \"AIzaSyBlZY6QdkrNaQodpr0lTcSYTQ6nHqzPHOI\",\r\n    authDomain: \"hdmanagement-39177.firebaseapp.com\",\r\n    databaseURL: \"https://hdmanagement-39177.firebaseio.com\",\r\n    projectId: \"hdmanagement-39177\",\r\n    storageBucket: \"hdmanagement-39177.appspot.com\",\r\n    messagingSenderId: \"230352853350\",\r\n    appId: \"1:230352853350:web:50af80e103c02bd91010a7\"\r\n};\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    this.state = {\r\n      currentUser: null,\r\n      appError: null,\r\n      authError: null,\r\n      authLoading: false\r\n    };\r\n  }\r\n\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { appError: error };\r\n  }\r\n\r\n  handleAuthStateChange = user => {\r\n    if (user) {\r\n      this.setState({\r\n        authLoading: true\r\n      });\r\n\r\n      user.getIdToken().then(token => {\r\n\r\n        document.cookie = `token=${token};path=/`;\r\n\r\n        this.setState({\r\n          currentUser: user,\r\n          authError: null,\r\n          authLoading: false\r\n        });\r\n      }).catch(e => {\r\n        this.setState({\r\n          authError: e,\r\n          authLoading: false\r\n        });\r\n      });\r\n    } else {\r\n\r\n      document.cookie = 'token=;path=/';\r\n\r\n\r\n      this.setState({\r\n        currentUser: null,\r\n        authLoading: false\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  handleSignIn = () => {\r\n    this.setState({\r\n      authLoading: true\r\n    });\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    firebase.auth().signInWithRedirect(provider);\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    firebase.initializeApp(this.#firebaseConfig);\r\n    firebase.auth().languageCode = 'en';\r\n    firebase.auth().onAuthStateChanged(this.handleAuthStateChange);\r\n  }\r\n\r\n\r\n  render() {\r\n    \r\n    const { currentUser, appError, authError, authLoading } = this.state;\r\n\r\n    return (\r\n      <ThemeProvider theme={Theme}>\r\n        <CssBaseline />\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <div className=\"App\">\r\n          <Header user={currentUser}/>\r\n            {\r\n\r\n              currentUser ?\r\n                  <>\r\n                    <Redirect from = '/' to = '/rolechoice' />\r\n                    <Route exact path=\"/rolechoice\">\r\n                      <RoleChoice/>\r\n                    </Route>\r\n                  </>\r\n                  :\r\n                  <>\r\n                    <Redirect to='/index.html' />\r\n                    <SignIn onSignIn={this.handleSignIn} />\r\n                  </>\r\n\r\n            }\r\n\r\n            <LoadingProgress show={authLoading} />\r\n            <ContextErrorMessage error={authError} contextErrorMsg={`Something went wrong during sign in process.`} onReload={this.handleSignIn} />\r\n            <ContextErrorMessage error={appError} contextErrorMsg={`Something went wrong inside the app. Please reload the page.`} />\r\n          \r\n          </div>\r\n        </Router>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","/*import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();*/\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}